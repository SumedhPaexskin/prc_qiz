/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@vladmandic/face-api@1.1.4/dist/face-api.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var faceapi=(()=>{var e,t,n=Object.create,r=Object.defineProperty,a=Object.getPrototypeOf,s=Object.prototype.hasOwnProperty,i=Object.getOwnPropertyNames,o=Object.getOwnPropertyDescriptor,l=e=>r(e,"__esModule",{value:!0}),u=(e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})},h=(e=(e,t)=>{function n(){return"object"==typeof global&&void 0!==t&&"undefined"!=typeof process&&!!process.version}l(e),u(e,{isNodejs:()=>n})},()=>(t||e((t={exports:{}}).exports,t),t.exports)),p={};u(p,{AgeGenderNet:()=>ZG,BoundingBox:()=>pU,Box:()=>hU,ComposableTask:()=>qH,ComputeAllFaceDescriptorsTask:()=>Ej,ComputeFaceDescriptorsTaskBase:()=>_j,ComputeSingleFaceDescriptorTask:()=>Aj,DetectAllFaceLandmarksTask:()=>Rj,DetectAllFacesTask:()=>Oj,DetectFaceLandmarksTaskBase:()=>Fj,DetectFacesTaskBase:()=>Mj,DetectSingleFaceLandmarksTask:()=>Dj,DetectSingleFaceTask:()=>Lj,Dimensions:()=>KV,FACE_EXPRESSION_LABELS:()=>MG,FaceDetection:()=>cU,FaceDetectionNet:()=>EH,FaceExpressionNet:()=>LG,FaceExpressions:()=>OG,FaceLandmark68Net:()=>eH,FaceLandmark68TinyNet:()=>nH,FaceLandmarkNet:()=>rH,FaceLandmarks:()=>IU,FaceLandmarks5:()=>NU,FaceLandmarks68:()=>SU,FaceMatch:()=>CU,FaceMatcher:()=>Gj,FaceRecognitionNet:()=>pH,Gender:()=>YG,LabeledBox:()=>TU,LabeledFaceDescriptors:()=>$U,NetInput:()=>aG,NeuralNetwork:()=>mG,ObjectDetection:()=>dU,Point:()=>uU,PredictedBox:()=>_U,Rect:()=>kU,SsdMobilenetv1:()=>TH,SsdMobilenetv1Options:()=>CH,TinyFaceDetector:()=>ZH,TinyFaceDetectorOptions:()=>jH,TinyYolov2:()=>GH,TinyYolov2Options:()=>WH,allFaces:()=>Vj,allFacesSsdMobilenetv1:()=>Bj,allFacesTinyYolov2:()=>Wj,awaitMediaLoaded:()=>YU,bufferToImage:()=>JU,computeFaceDescriptor:()=>sj,createCanvas:()=>QU,createCanvasFromMedia:()=>eG,createFaceDetectionNet:()=>_H,createFaceRecognitionNet:()=>dH,createSsdMobilenetv1:()=>$H,createTinyFaceDetector:()=>Hj,createTinyYolov2:()=>HH,detectAllFaces:()=>Pj,detectFaceLandmarks:()=>rj,detectFaceLandmarksTiny:()=>aj,detectLandmarks:()=>bj,detectSingleFace:()=>zj,draw:()=>HV,env:()=>WU,euclideanDistance:()=>Uj,extendWithAge:()=>mH,extendWithFaceDescriptor:()=>cH,extendWithFaceDetection:()=>AU,extendWithFaceExpressions:()=>PG,extendWithFaceLandmarks:()=>VG,extendWithGender:()=>yH,extractFaceTensors:()=>oG,extractFaces:()=>iG,fetchImage:()=>uG,fetchJson:()=>hG,fetchNetWeights:()=>pG,fetchOrThrow:()=>lG,getContext2dOrThrow:()=>UU,getMediaDimensions:()=>ZU,imageTensorToCanvas:()=>tG,imageToSquare:()=>rG,inverseSigmoid:()=>wU,iou:()=>fU,isMediaElement:()=>nG,isMediaLoaded:()=>XU,isWithAge:()=>fH,isWithFaceDetection:()=>EU,isWithFaceExpressions:()=>zG,isWithFaceLandmarks:()=>WG,isWithGender:()=>gH,loadAgeGenderModel:()=>mj,loadFaceDetectionModel:()=>gj,loadFaceExpressionModel:()=>fj,loadFaceLandmarkModel:()=>pj,loadFaceLandmarkTinyModel:()=>dj,loadFaceRecognitionModel:()=>cj,loadSsdMobilenetv1Model:()=>lj,loadTinyFaceDetectorModel:()=>uj,loadTinyYolov2Model:()=>hj,loadWeightMap:()=>cG,locateFaces:()=>yj,matchDimensions:()=>fG,minBbox:()=>mU,nets:()=>QH,nonMaxSuppression:()=>gU,normalize:()=>yU,padToSquare:()=>bU,predictAgeAndGender:()=>oj,recognizeFaceExpressions:()=>ij,resizeResults:()=>jj,resolveInput:()=>VU,shuffleArray:()=>xU,sigmoid:()=>vU,ssdMobilenetv1:()=>ej,tf:()=>d,tinyFaceDetector:()=>tj,tinyYolov2:()=>nj,toNetInput:()=>sG,utils:()=>qV,validateConfig:()=>MH,version:()=>qj});var d={};u(d,{Abs:()=>Xe,Acos:()=>Ye,Acosh:()=>Je,AdadeltaOptimizer:()=>jd,AdagradOptimizer:()=>qd,AdamOptimizer:()=>Kd,AdamaxOptimizer:()=>Xd,Add:()=>Ze,AddN:()=>Qe,All:()=>et,Any:()=>tt,ArgMax:()=>nt,ArgMin:()=>rt,Asin:()=>at,Asinh:()=>st,Atan:()=>it,Atan2:()=>lt,Atanh:()=>ot,AvgPool:()=>ut,AvgPool3D:()=>pt,AvgPool3DGrad:()=>dt,AvgPoolGrad:()=>ht,BackendWasm:()=>RV,BatchMatMul:()=>ct,BatchToSpaceND:()=>ft,Bincount:()=>mt,BroadcastTo:()=>gt,Callback:()=>FI,CallbackList:()=>Sb,Cast:()=>yt,Ceil:()=>bt,ClipByValue:()=>xt,Complex:()=>vt,ComplexAbs:()=>wt,Concat:()=>kt,Conv2D:()=>It,Conv2DBackpropFilter:()=>Nt,Conv2DBackpropInput:()=>St,Conv3D:()=>Ct,Conv3DBackpropFilterV2:()=>Tt,Conv3DBackpropInputV2:()=>$t,Cos:()=>_t,Cosh:()=>Et,CropAndResize:()=>Ft,Cumsum:()=>At,CustomCallback:()=>$b,DataStorage:()=>j,DenseBincount:()=>Rt,DepthToSpace:()=>Dt,DepthwiseConv2dNative:()=>Mt,DepthwiseConv2dNativeBackpropFilter:()=>Ot,DepthwiseConv2dNativeBackpropInput:()=>Lt,Diag:()=>zt,Dilation2D:()=>Pt,Dilation2DBackpropFilter:()=>Wt,Dilation2DBackpropInput:()=>Bt,ENV:()=>je,EarlyStopping:()=>MI,Elu:()=>Ut,EluGrad:()=>Gt,Environment:()=>Ue,Equal:()=>jt,Erf:()=>Ht,Exp:()=>qt,ExpandDims:()=>Kt,Expm1:()=>Xt,FFT:()=>Yt,Fill:()=>Jt,FlipLeftRight:()=>Zt,Floor:()=>Qt,FloorDiv:()=>en,FromPixels:()=>Wr,FusedBatchNorm:()=>tn,FusedConv2D:()=>Gr,FusedDepthwiseConv2D:()=>Hr,GatherNd:()=>rn,GatherV2:()=>nn,GraphModel:()=>dS,Greater:()=>an,GreaterEqual:()=>sn,History:()=>Tb,IFFT:()=>ln,Identity:()=>on,Imag:()=>un,InputSpec:()=>db,IsFinite:()=>hn,IsInf:()=>pn,IsNan:()=>dn,KernelBackend:()=>q,LRN:()=>In,LRNGrad:()=>Nn,LayerVariable:()=>ub,LayersModel:()=>zx,LeakyRelu:()=>cn,Less:()=>fn,LessEqual:()=>mn,LinSpace:()=>gn,Log:()=>yn,Log1p:()=>bn,LogSoftmax:()=>kn,LogicalAnd:()=>xn,LogicalNot:()=>vn,LogicalOr:()=>wn,Max:()=>Sn,MaxPool:()=>Tn,MaxPool3D:()=>_n,MaxPool3DGrad:()=>En,MaxPoolGrad:()=>$n,MaxPoolWithArgmax:()=>An,Maximum:()=>Cn,Mean:()=>Fn,Min:()=>Rn,Minimum:()=>Dn,MirrorPad:()=>Mn,Mod:()=>On,MomentumOptimizer:()=>Jd,Multinomial:()=>Ln,Multiply:()=>zn,Neg:()=>Pn,NonMaxSuppressionV3:()=>Wn,NonMaxSuppressionV4:()=>Vn,NonMaxSuppressionV5:()=>Un,NotEqual:()=>Bn,OP_SCOPE_SUFFIX:()=>ts,OneHot:()=>Hn,OnesLike:()=>Gn,Optimizer:()=>Hd,Pack:()=>jn,PadV2:()=>qn,Pool:()=>Kn,Pow:()=>Xn,Prelu:()=>Yn,Prod:()=>Jn,RMSPropOptimizer:()=>Zd,RNN:()=>Uv,Range:()=>Zn,Rank:()=>Ca,Real:()=>Qn,RealDiv:()=>Vt,Reciprocal:()=>er,Reduction:()=>_d,Relu:()=>tr,Relu6:()=>or,Reshape:()=>nr,ResizeBilinear:()=>sr,ResizeBilinearGrad:()=>ir,ResizeNearestNeighbor:()=>rr,ResizeNearestNeighborGrad:()=>ar,Reverse:()=>lr,RotateWithOffset:()=>Vr,Round:()=>ur,Rsqrt:()=>hr,SGDOptimizer:()=>Yd,ScatterNd:()=>pr,Select:()=>dr,Selu:()=>cr,Sequential:()=>Vx,Sigmoid:()=>br,Sign:()=>yr,Sin:()=>mr,Sinh:()=>gr,Slice:()=>fr,Softmax:()=>Nr,Softplus:()=>xr,SpaceToBatchND:()=>kr,SparseToDense:()=>$r,SplitV:()=>Ir,Sqrt:()=>vr,Square:()=>Cr,SquaredDifference:()=>Sr,Step:()=>Br,StridedSlice:()=>_r,Sub:()=>Tr,Sum:()=>wr,SymbolicTensor:()=>cb,Tan:()=>Er,Tanh:()=>Ar,Tensor:()=>Ia,TensorBuffer:()=>va,Tile:()=>Fr,TopK:()=>Rr,Transform:()=>Dr,Transpose:()=>Mr,Unique:()=>Or,Unpack:()=>Lr,UnsortedSegmentSum:()=>zr,Variable:()=>Sa,ZerosLike:()=>Pr,_FusedMatMul:()=>Ur,abs:()=>Go,acos:()=>Ho,acosh:()=>jo,add:()=>Bo,addN:()=>qo,all:()=>Ko,any:()=>Xo,argMax:()=>Yo,argMin:()=>Jo,asin:()=>Zo,asinh:()=>Qo,atan:()=>el,atan2:()=>tl,atanh:()=>nl,avgPool:()=>yl,avgPool3d:()=>bl,backend:()=>zo,backend_util:()=>rc,basicLSTMCell:()=>Il,batchNorm:()=>Cl,batchNorm2d:()=>Tl,batchNorm3d:()=>$l,batchNorm4d:()=>_l,batchToSpaceND:()=>Nl,bincount:()=>El,booleanMaskAsync:()=>Fp,broadcastTo:()=>Al,browser:()=>Ni,buffer:()=>Ys,callbacks:()=>zI,cast:()=>Js,ceil:()=>Fl,clipByValue:()=>Rl,clone:()=>Zs,complex:()=>rs,concat:()=>xl,concat1d:()=>Dl,concat2d:()=>Ml,concat3d:()=>Ol,concat4d:()=>Ll,constraints:()=>Gm,conv1d:()=>Pl,conv2d:()=>zl,conv2dTranspose:()=>Wl,conv3d:()=>Vl,conv3dTranspose:()=>Gl,copyRegisteredKernels:()=>ta,cos:()=>Hl,cosh:()=>jl,cosineWindow:()=>Wp,cumsum:()=>ql,customGrad:()=>Mu,data:()=>mS,denseBincount:()=>Kl,deprecationWarn:()=>ko,depthToSpace:()=>Xl,depthwiseConv2d:()=>Yl,deregisterOp:()=>VI,device_util:()=>ja,diag:()=>Jl,dilation2d:()=>Zl,disableDeprecationWarnings:()=>wo,dispose:()=>$o,disposeVariables:()=>Io,div:()=>Vo,divNoNan:()=>su,dot:()=>iu,dropout:()=>Pp,elu:()=>ou,enableDebugMode:()=>vo,enableProdMode:()=>xo,enclosingPowerOfTwo:()=>Bp,engine:()=>No,env:()=>Ge,equal:()=>nu,erf:()=>lu,exp:()=>uu,expandDims:()=>hu,expm1:()=>pu,eye:()=>cu,fft:()=>op,fill:()=>fu,findBackend:()=>Mo,findBackendFactory:()=>Oo,floor:()=>mu,floorDiv:()=>Wo,fused:()=>Up,gather:()=>gu,gatherND:()=>zp,gather_util:()=>Ai,getBackend:()=>Ro,getGradient:()=>Xr,getKernel:()=>Kr,getKernelsForBackend:()=>Yr,grad:()=>Eu,grads:()=>Au,greater:()=>yu,greaterEqual:()=>bu,ifft:()=>lp,imag:()=>xu,image:()=>Vd,inTopKAsync:()=>Vp,initializers:()=>Eg,input:()=>jx,io:()=>ei,irfft:()=>up,isFinite:()=>vu,isInf:()=>wu,isNaN:()=>ku,keep:()=>_o,kernel_impls:()=>Pc,layers:()=>Zy,leakyRelu:()=>Iu,less:()=>Nu,lessEqual:()=>Su,linalg:()=>Ud,linspace:()=>Cu,loadGraphModel:()=>cS,loadLayersModel:()=>Hx,localResponseNormalization:()=>Tu,log:()=>$u,log1p:()=>_u,logSigmoid:()=>Pu,logSoftmax:()=>Uu,logSumExp:()=>Zu,logicalAnd:()=>Qu,logicalNot:()=>eh,logicalOr:()=>th,logicalXor:()=>nh,losses:()=>Gd,matMul:()=>xi,math:()=>bi,max:()=>Bu,maxPool:()=>rh,maxPool3d:()=>ah,maxPoolWithArgmax:()=>sh,maximum:()=>ih,mean:()=>oh,memory:()=>So,metrics:()=>pI,min:()=>lh,minimum:()=>uh,mirrorPad:()=>hh,mod:()=>ph,model:()=>Ux,models:()=>TI,moments:()=>ch,movingAverage:()=>Mp,mul:()=>Uo,multiRNNCell:()=>fh,multinomial:()=>mh,neg:()=>Lu,nextFrame:()=>nc,norm:()=>Dp,notEqual:()=>gh,oneHot:()=>vi,ones:()=>bh,onesLike:()=>xh,op:()=>ns,outerProduct:()=>vh,pad:()=>wh,pad1d:()=>kh,pad2d:()=>Ih,pad3d:()=>Nh,pad4d:()=>Sh,pool:()=>Th,pow:()=>$h,prelu:()=>_h,print:()=>Qs,prod:()=>Eh,profile:()=>Co,rand:()=>Ah,randomGamma:()=>Dh,randomNormal:()=>Mh,randomUniform:()=>Oh,range:()=>Lh,ready:()=>Fo,real:()=>zh,reciprocal:()=>Ph,registerBackend:()=>Lo,registerCallbackConstructor:()=>qx,registerGradient:()=>Zr,registerKernel:()=>Jr,registerOp:()=>BI,regularizers:()=>$I,relu:()=>Bh,relu6:()=>Wh,removeBackend:()=>Do,reshape:()=>gl,reverse:()=>Vh,reverse1d:()=>Uh,reverse2d:()=>Gh,reverse3d:()=>Hh,reverse4d:()=>jh,rfft:()=>pp,round:()=>qh,rsqrt:()=>Kh,scalar:()=>Xh,scatterND:()=>Op,scatter_util:()=>Ri,selu:()=>Yh,separableConv2d:()=>Jh,sequential:()=>Gx,serialization:()=>eo,setBackend:()=>Ao,setPlatform:()=>Po,setWasmPath:()=>VV,setWasmPaths:()=>UV,setdiff1dAsync:()=>Zh,sigmoid:()=>vl,sign:()=>Qh,signal:()=>Wd,sin:()=>ep,sinh:()=>tp,slice:()=>wl,slice1d:()=>np,slice2d:()=>rp,slice3d:()=>ap,slice4d:()=>sp,slice_util:()=>Li,softmax:()=>ip,softplus:()=>zu,spaceToBatchND:()=>Ch,sparseToDense:()=>Lp,spectral:()=>Bd,split:()=>hp,sqrt:()=>dp,square:()=>dh,squaredDifference:()=>cp,squeeze:()=>fp,stack:()=>mp,step:()=>gp,stridedSlice:()=>yp,sub:()=>Wu,sum:()=>Vu,sumOutType:()=>Da,tan:()=>bp,tanh:()=>kl,tensor:()=>ss,tensor1d:()=>xp,tensor2d:()=>vp,tensor3d:()=>Si,tensor4d:()=>wp,tensor5d:()=>kp,tensor6d:()=>Ip,tensor_util:()=>Aa,test_util:()=>ao,tidy:()=>To,tile:()=>du,time:()=>Eo,topk:()=>Np,train:()=>ec,transpose:()=>wi,truncatedNormal:()=>Sp,unique:()=>Cp,unregisterGradient:()=>ea,unregisterKernel:()=>Qr,unsortedSegmentSum:()=>Tp,unstack:()=>$p,upcastType:()=>Ra,util:()=>ra,valueAndGrad:()=>Fu,valueAndGrads:()=>Ru,variable:()=>_p,variableGrads:()=>Du,version:()=>KP,version_converter:()=>fS,version_core:()=>bo,version_layers:()=>px,version_wasm:()=>GV,where:()=>ru,whereAsync:()=>Ap,zeros:()=>yh,zerosLike:()=>au});var c=Object.create,f=Object.defineProperty,m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,y=Object.getOwnPropertyNames,b=Object.getOwnPropertyDescriptor,x=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),v=(e,t)=>{for(var n in t)f(e,n,{get:t[n],enumerable:!0})},w=e=>((e,t,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of y(t))!g.call(e,r)&&"default"!==r&&f(e,r,{get:()=>t[r],enumerable:!(n=b(t,r))||n.enumerable});return e})((e=>f(e,"__esModule",{value:!0}))(f(null!=e?c(m(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),k=x((()=>{})),I=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),C=x(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=x(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),$=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=x((()=>{})),E=x(((e,t)=>{!function(e,n){var r,a=this,s=256,i="random",o=n.pow(s,6),l=n.pow(2,52),u=2*l,h=s-1;function p(t,h,p){var y=[],b=m(f((h=1==h?{entropy:!0}:h||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(s):(t=new Uint8Array(s),(a.crypto||a.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=a.navigator,i=n&&n.plugins;return[+new Date,a,i,a.screen,g(e)]}}():t,3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),e),(h.pass||p||function(e,t,r,a){return a&&(a.S&&c(a,x),e.state=function(){return c(x,{})}),r?(n[i]=e,t):e})(v,b,"global"in h?h.global:this==n,h.state)}function d(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=h&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*s+o[h&(o[a]=o[i=h&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(n["seed"+i]=p,m(n.random(),e),"object"==typeof t&&t.exports){t.exports=p;try{r=_()}catch(e){}}else"function"==typeof define&&define.amd&&define((function(){return p}))}([],Math)})),A=x(((e,t)=>{var n=I(),r=N(),a=S(),s=C(),i=T(),o=$(),l=E();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),F=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),R=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),D=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),M=x(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),O=x(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),L=x(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),z=x(((e,t)=>{!function(e,n,r){var a,s=256,i="random",o=r.pow(s,6),l=r.pow(2,52),u=2*l,h=s-1;function p(t,h,p){var y=[],b=m(f((h=1==h?{entropy:!0}:h||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(s):(t=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var r=e.navigator,i=r&&r.plugins;return[+new Date,e,i,e.screen,g(n)]}}():t,3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),n),(h.pass||p||function(e,t,n,a){return a&&(a.S&&c(a,x),e.state=function(){return c(x,{})}),n?(r[i]=e,t):e})(v,b,"global"in h?h.global:this==r,h.state)}function d(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=h&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*s+o[h&(o[a]=o[i=h&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),"object"==typeof t&&t.exports){t.exports=p;try{a=_()}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return p})):r["seed"+i]=p}("undefined"!=typeof self?self:e,[],Math)})),P=x(((e,t)=>{var n=F(),r=R(),a=D(),s=M(),i=O(),o=L(),l=z();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),B=x((()=>{})),W=x((()=>{})),V=x((()=>{})),U=x((()=>{})),G=x(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){function t(){return A.buffer!=R&&Y(A.buffer),D}function r(){return A.buffer!=R&&Y(A.buffer),M}function a(){return A.buffer!=R&&Y(A.buffer),O}function s(){return A.buffer!=R&&Y(A.buffer),L}function i(){return A.buffer!=R&&Y(A.buffer),z}var o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){o=e,l=t}));var h,p={};for(h in u)u.hasOwnProperty(h)&&(p[h]=u[h]);var d,c,f=[],m=function(e,t){throw t},g=!1,y=!1;g="object"==typeof window,y="function"==typeof importScripts,d="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,c=!g&&!d&&!y;var b=u.ENVIRONMENT_IS_PTHREAD||!1;b&&(R=u.buffer);var x,v,w,k,I,N="";function S(e){return u.locateFile?u.locateFile(e,N):N+e}if(d){var C;N=y?W().dirname(N)+"/":__dirname+"/",x=function(e,t){return k||(k=require("fs")),I||(I=W()),e=I.normalize(e),k.readFileSync(e,t?null:"utf8")},w=function(e){var t=x(e,!0);return t.buffer||(t=new Uint8Array(t)),B(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ht))throw e})),process.on("unhandledRejection",oe),m=function(e){process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{C=V()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=C.Worker}else c?("undefined"!=typeof read&&(x=function(e){return read(e)}),w=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(B("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==n&&n&&(N=n),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",d?(x=function(e,t){return k||(k=require("fs")),I||(I=W()),e=I.normalize(e),k.readFileSync(e,t?null:"utf8")},w=function(e){var t=x(e,!0);return t.buffer||(t=new Uint8Array(t)),B(t.buffer),t}):(x=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));d&&"undefined"==typeof performance&&(global.performance=U().performance);var T,$=u.print||console.log.bind(console),_=u.printErr||console.warn.bind(console);for(h in p)p.hasOwnProperty(h)&&(u[h]=p[h]);p=null,u.arguments&&(f=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(m=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(T=u.wasmBinary);var E=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&oe("no native wasm support detected");var A,F,R,D,M,O,L,z,P=!1;function B(e,t){e||oe("Assertion failed: "+t)}function G(e){var t=u["_"+e];return B(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function H(e,n,r,a,s){var i={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);K(e,t=st(n),n)}return t},array:function(e){var n=st(e.length);return function(e,n){t().set(e,n)}(e,n),n}},o=G(e),l=[],u=0;if(a)for(var h=0;h<a.length;h++){var p=i[r[h]];p?(0===u&&(u=rt()),l[h]=p(a[h])):l[h]=a[h]}var d,c=o.apply(null,l);return d=c,c="string"===n?q(d):"boolean"===n?Boolean(d):d,0!==u&&at(u),c}function j(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var l=s-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function q(e,t){return e?j(r(),e,t):""}function K(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,r(),t,n)}function X(e,t){return e%t>0&&(e+=t-e%t),e}function Y(e){R=e,u.HEAP8=D=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=O=new Int32Array(e),u.HEAPU8=M=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=L=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=z=new Float64Array(e)}var J=u.INITIAL_MEMORY||16777216;if(b)A=u.wasmMemory,R=u.buffer;else if(u.wasmMemory)A=u.wasmMemory;else if(!((A=new WebAssembly.Memory({initial:J/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw _("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),d&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");A&&(R=A.buffer),J=R.byteLength,Y(R);var Z,Q=[],ee=[],te=[],ne=[],re=[];b||ee.push({func:function(){Ue()}});var ae=0,se=null,ie=null;function oe(e){u.onAbort&&u.onAbort(e),b&&console.error("Pthread aborting at "+(new Error).stack),_(e+=""),P=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function le(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}u.preloadedImages={},u.preloadedAudios={};var ue="data:application/octet-stream;base64,";function he(e){return le(e,ue)}var pe="file://";function de(e){return le(e,pe)}var ce="tfjs-backend-wasm-threaded-simd.wasm";function fe(e){try{if(e==ce&&T)return new Uint8Array(T);if(w)return w(e);throw"both async and sync fetching of the wasm failed"}catch(e){oe(e)}}he(ce)||(ce=S(ce));var me={8991:function(e,t){setTimeout((function(){Ze(e,t)}),0)}};function ge(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z.get(n)():Z.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}function ye(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(a(),ut>>2),s=0;if(r==e&&Atomics.compareExchange(a(),ut>>2,r,0)==r&&(s=1,--n<=0))return 1;var i=Atomics.notify(a(),e>>2,n);if(i>=0)return i+s;throw"Atomics.notify returned an unexpected value "+i}u._emscripten_futex_wake=ye;var be,xe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)xe.allocateUnusedWorker()},initRuntime:function(){for(var e=Ge(228),t=0;t<57;++t)s()[e/4+t]=0;a()[e+12>>2]=e;var n=e+152;a()[n>>2]=n;var r=Ge(512);for(t=0;t<128;++t)s()[r/4+t]=0;Atomics.store(s(),e+100>>2,r),Atomics.store(s(),e+40>>2,e),nt(e,!y,1),Je(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;xe.threadExitHandlers.length>0;)xe.threadExitHandlers.pop()();b&&Ke()&&Xe()},threadExit:function(e){var t=Ke();t&&(Atomics.store(s(),t+4>>2,e),Atomics.store(s(),t+0>>2,1),Atomics.store(s(),t+56>>2,1),Atomics.store(s(),t+60>>2,0),xe.runExitHandlers(),ye(t+0,2147483647),nt(0,0,0),b&&postMessage({cmd:"exit"}))},threadCancel:function(){xe.runExitHandlers();var e=Ke();Atomics.store(s(),e+4>>2,-1),Atomics.store(s(),e+0>>2,1),ye(e+0,2147483647),nt(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in xe.pthreads)(r=xe.pthreads[e])&&r.worker&&xe.returnWorkerToPool(r.worker);xe.pthreads={};for(var t=0;t<xe.unusedWorkers.length;++t)(n=xe.unusedWorkers[t]).terminate();for(xe.unusedWorkers=[],t=0;t<xe.runningWorkers.length;++t){var n,r=(n=xe.runningWorkers[t]).pthread;xe.freeThreadData(r),n.terminate()}xe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=a()[e.threadInfoStruct+100>>2];a()[e.threadInfoStruct+100>>2]=0,He(t),He(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&He(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){xe.runWithoutMainThreadQueuedCalls((function(){delete xe.pthreads[e.pthread.threadInfoStruct],xe.unusedWorkers.push(e),xe.runningWorkers.splice(xe.runningWorkers.indexOf(e),1),xe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){a()[lt>>2]=0;try{e()}finally{a()[lt>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,i=r.cmd;if(e.pthread&&(xe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Ke()){var o=xe.pthreads[r.targetThread];return o?o.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+i+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(xe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===i)Ye();else if("spawnThread"===i)Le(n.data);else if("cleanupThread"===i)!function(e){if(b)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";a()[e+12>>2]=0;var t=xe.pthreads[e];if(t){var n=t.worker;xe.returnWorkerToPool(n)}}(r.thread);else if("killThread"===i)!function(e){if(b)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";a()[e+12>>2]=0;var t=xe.pthreads[e];t.worker.terminate(),xe.freeThreadData(t),xe.runningWorkers.splice(xe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread);else if("cancelThread"===i)!function(e){if(b)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";xe.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread);else if("loaded"===i)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===i)$("Thread "+r.threadId+": "+r.text);else if("printErr"===i)_("Thread "+r.threadId+": "+r.text);else if("alert"===i)alert("Thread "+r.threadId+": "+r.text);else if("exit"===i)e.pthread&&Atomics.load(s(),e.pthread.threadInfoStruct+64>>2)&&xe.returnWorkerToPool(e);else if("exitProcess"===i)try{!function(e,t){if(!t||!E||0!==e){if(!t&&b)throw postMessage({cmd:"exitProcess",returnCode:e}),new ht(e);E||(xe.terminateAllThreads(),u.onExit&&u.onExit(e),P=!0),m(e,new ht(e))}}(r.returnCode)}catch(e){if(e instanceof ht)return;throw e}else"cancelDone"===i?xe.returnWorkerToPool(e):"objectTransfer"===i?xe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):_("worker sent an unknown command "+i);xe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){_("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},d&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:A,wasmModule:F})},allocateUnusedWorker:function(){var e=S("tfjs-backend-wasm-threaded-simd.worker.js");xe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==xe.unusedWorkers.length&&(xe.allocateUnusedWorker(),xe.loadWasmModuleToWorker(xe.unusedWorkers[0])),xe.unusedWorkers.length>0?xe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function ve(e,t){for(var n=arguments.length-2,r=rt(),a=n,s=st(8*a),o=s>>3,l=0;l<n;l++){var u=arguments[2+l];i()[o+l]=u}var h=et(e,a,s,t);return at(r),h}u.establishStackSpace=function(e,t){it(e,t),at(e)},u.getNoExitRuntime=function(){return E},u.invokeEntryPoint=function(e,t){return Z.get(e)(t)},be=d?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:b?function(){return performance.now()-u.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var we=[],ke=[];function Ie(e){try{return A.grow(e-R.byteLength+65535>>>16),Y(A.buffer),1}catch(e){}}var Ne={inEventHandler:0,removeAllEventListeners:function(){for(var e=Ne.eventHandlers.length-1;e>=0;--e)Ne._removeHandler(e);Ne.eventHandlers=[],Ne.deferredCalls=[]},registerRemoveEventListeners:function(){Ne.removeEventListenersRegistered||(ne.push(Ne.removeAllEventListeners),Ne.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in Ne.deferredCalls){var s=Ne.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}Ne.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),Ne.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<Ne.deferredCalls.length;++t)Ne.deferredCalls[t].targetFunction==e&&(Ne.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Ne.inEventHandler&&Ne.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ne.canPerformEventHandlerRequests())for(var e=0;e<Ne.deferredCalls.length;++e){var t=Ne.deferredCalls[e];Ne.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e&&(!t||t==Ne.eventHandlers[n].eventTypeString)&&Ne._removeHandler(n--)},_removeHandler:function(e){var t=Ne.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Ne.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++Ne.inEventHandler,Ne.currentEventHandler=e,Ne.runDeferredCalls(),e.handlerFunc(t),Ne.runDeferredCalls(),--Ne.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),Ne.eventHandlers.push(e),Ne.registerRemoveEventListeners();else for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e.target&&Ne.eventHandlers[n].eventTypeString==e.eventTypeString&&Ne._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){var i=rt(),o=st(12);a()[o>>2]=n,a()[o+4>>2]=r,a()[o+8>>2]=s,tt(0,e,637534208,t,r,o),at(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return xe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Se(e,t,n,r){var s=rt(),i=st(12),o=0;t&&(o=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Ge(t);return K(e,n,t),n}(t)),a()[i>>2]=o,a()[i+4>>2]=n,a()[i+8>>2]=r,tt(0,e,657457152,0,o,i),at(s)}var Ce=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Te(e){return e=function(e){return e>2?q(e):e}(e),Ce[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function $e(e){return Te(e)}function _e(e,t,n){var r=$e(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Se(e,t=t?q(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Ee(e,t,n){return b?ve(2,1,e,t,n):_e(e,t,n)}var Ae={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){Ae.lastError||(Ae.lastError=e)},getNewId:function(e){for(var t=Ae.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=q(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Ae.registerContext(n,t):0},registerContext:function(e,t){var n=Ge(8);a()[n+4>>2]=Ke();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Ae.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Ae.initExtensions(r),n},makeContextCurrent:function(e){return Ae.currentContext=Ae.contexts[e],u.ctx=Pe=Ae.currentContext&&Ae.currentContext.GLctx,!(e&&!Pe)},getContext:function(e){return Ae.contexts[e]},deleteContext:function(e){Ae.currentContext===Ae.contexts[e]&&(Ae.currentContext=null),"object"==typeof Ne&&Ne.removeAllHandlersOnTarget(Ae.contexts[e].GLctx.canvas),Ae.contexts[e]&&Ae.contexts[e].GLctx.canvas&&(Ae.contexts[e].GLctx.canvas.GLctxObject=void 0),He(Ae.contexts[e].handle),Ae.contexts[e]=null},initExtensions:function(e){if(e||(e=Ae.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=Ae.programs[e],n=Ae.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Pe.getProgramParameter(t,35718),s=0;s<a;++s){var i=Pe.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var l=Pe.getUniformLocation(t,o);if(l){var u=Ae.getNewId(Ae.uniforms);r[o]=[i.size,u],Ae.uniforms[u]=l;for(var h=1;h<i.size;++h){var p=o+"["+h+"]";l=Pe.getUniformLocation(t,p),u=Ae.getNewId(Ae.uniforms),Ae.uniforms[u]=l}}}}},Fe=["default","low-power","high-performance"],Re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Re.buffers[e];0===t||10===t?((1===e?$:_)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Re.varargs+=4,a()[Re.varargs-4>>2]},getStr:function(e){return q(e)},get64:function(e,t){return e}};function De(e){return b?ve(3,1,e):0}function Me(e,t,n,r,a){if(b)return ve(4,1,e,t,n,r,a)}function Oe(e,t,n,s){if(b)return ve(5,1,e,t,n,s);for(var i=0,o=0;o<n;o++){for(var l=a()[t+8*o>>2],u=a()[t+(8*o+4)>>2],h=0;h<u;h++)Re.printChar(e,r()[l+h]);i+=u}return a()[s>>2]=i,0}function Le(e){if(b)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=xe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";xe.runningWorkers.push(t);for(var n=Ge(512),r=0;r<128;++r)a()[n+4*r>>2]=0;var i=e.stackBase+e.stackSize,o=xe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},l=o.threadInfoStruct>>2;Atomics.store(s(),l+16,e.detached),Atomics.store(s(),l+25,n),Atomics.store(s(),l+10,o.threadInfoStruct),Atomics.store(s(),l+20,e.stackSize),Atomics.store(s(),l+19,i),Atomics.store(s(),l+26,e.stackSize),Atomics.store(s(),l+28,i),Atomics.store(s(),l+29,e.detached);var u=qe()+40;Atomics.store(s(),l+43,u),t.pthread=o;var h={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){h.time=performance.now(),t.postMessage(h,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function ze(e){if(b)return ve(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return function(e){a()[je()>>2]=e}(28),-1}b||xe.initMainThreadBlock();var Pe,Be,We=[null,function(e,t){if(b)return ve(1,1,e,t)},Ee,De,Me,Oe,ze],Ve={e:function(e,t,n,r){oe("Assertion failed: "+q(e)+", at: "+[t?q(t):"unknown filename",n,r?q(r):"unknown function"])},r:function(e,t){_main(e,t)},x:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(b)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=xe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},b:function(){oe()},y:function(e,t,n){var s=function(e,t){var n;for(ke.length=0,t>>=2;n=r()[e++];){var s=n<105;s&&1&t&&t++,ke.push(s?i()[t++>>1]:a()[t]),++t}return ke}(t,n);return me[e].apply(null,s)},j:function(e,t){},c:function(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(a(),e>>2)!=n)return-6;var s=performance.now(),i=s+r;for(Atomics.exchange(a(),ut>>2,e);;){if((s=performance.now())>i)return Atomics.exchange(a(),ut>>2,0),-73;if(0==Atomics.exchange(a(),ut>>2,0))break;if(Ye(),Atomics.load(a(),e>>2)!=n)return-6;Atomics.exchange(a(),ut>>2,e)}return 0}var o=Atomics.wait(a(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o},d:ye,f:be,p:function(e,t,n){r().copyWithin(e,t,t+n)},z:function(){return d?require("os").cpus().length:navigator.hardwareConcurrency},u:function(e,t,n){we.length=t;for(var r=n>>3,a=0;a<t;a++)we[a]=i()[r+a];return(e<0?me[-e-1]:We[e]).apply(null,we)},q:function(e){var t=r().length;if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);if(s=Math.min(s,e+100663296),Ie(Math.min(n,X(Math.max(e,s),65536))))return!0}return!1},v:function(e,t,n){return $e(e)?_e(e,t,n):Ee(e,t,n)},i:function(e){},t:function(e,t){},w:function(e,t){return function(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:Fe[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=$e(e);return!i||s.explicitSwapControl?0:Ae.createContext(i,s)}(e,t)},m:De,n:Me,g:Oe,o:function(){xe.initRuntime()},a:A||u.wasmMemory,k:function(e){var t=xe.threadExitHandlers.pop();e&&t()},l:function(e,t){xe.threadExitHandlers.push((function(){Z.get(e)(t)}))},h:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return _("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return _("pthread_create called with a null thread pointer!"),28;var i=[];if(b&&0===i.length)return Qe(687865856,e,t,n,r);var o=0,l=0,u=0;t&&-1!=t?(o=a()[t>>2],o+=81920,l=a()[t+8>>2],u=0!==a()[t+12>>2]):o=2097152;var h=0==l;h?l=ot(16,o):B((l-=o)>0);for(var p=Ge(228),d=0;d<57;++d)s()[(p>>2)+d]=0;a()[e>>2]=p,a()[p+12>>2]=p;var c=p+152;a()[c>>2]=c;var f={stackBase:l,stackSize:o,allocatedOwnStack:h,detached:u,startRoutine:n,pthread_ptr:p,arg:r,transferList:i};return b?(f.cmd="spawnThread",postMessage(f,i)):Le(f),0},s:ze},Ue=(function(){var e={a:Ve};function t(e,t){var n=e.exports;if(u.asm=n,Z=u.asm.F,F=t,!b){var r=xe.unusedWorkers.length;xe.unusedWorkers.forEach((function(e){xe.loadWasmModuleToWorker(e,(function(){--r||function(e){if(ae--,u.monitorRunDependencies&&u.monitorRunDependencies(ae),0==ae&&(null!==se&&(clearInterval(se),se=null),ie)){var t=ie;ie=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!T&&(g||y)){if("function"==typeof fetch&&!de(ce))return fetch(ce,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ce+"'";return e.arrayBuffer()})).catch((function(){return fe(ce)}));if(v)return new Promise((function(e,t){v(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return fe(ce)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){_("failed to asynchronously prepare wasm: "+e),oe(e)}))}if(b||(B(!b,"addRunDependency cannot be used in a pthread worker"),ae++,u.monitorRunDependencies&&u.monitorRunDependencies(ae)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return _("Module.instantiateWasm callback failed with error: "+e),!1}(T||"function"!=typeof WebAssembly.instantiateStreaming||he(ce)||de(ce)||"function"!=typeof fetch?r(n):fetch(ce,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return _("wasm streaming compile failed: "+e),_("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),u.___wasm_call_ctors=function(){return(Ue=u.___wasm_call_ctors=u.asm.A).apply(null,arguments)}),Ge=(u._init=function(){return(u._init=u.asm.B).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.C).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.D).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.E).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.G).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.H).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.I).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.J).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.K).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.L).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.M).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.N).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.O).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.P).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Q).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.R).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.S).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.T).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.U).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.V).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.W).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.X).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Y).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.Z).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm._).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.$).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.aa).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.ba).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.ca).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.da).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.ea).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.fa).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.ga).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.ha).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.ia).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.ja).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.ka).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.la).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.ma).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.na).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.oa).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.pa).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.qa).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.ra).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.sa).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.ta).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.ua).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.va).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.wa).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.xa).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.ya).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.za).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Aa).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.Ba).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Ca).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Da).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.Ea).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Fa).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.Ga).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Ha).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Ia).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.Ja).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.Ka).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.La).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Ma).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Na).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Oa).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Pa).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.Qa).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Ra).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.Sa).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Ta).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Ua).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Va).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Wa).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.Xa).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Ya).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm.Za).apply(null,arguments)},u._malloc=function(){return(Ge=u._malloc=u.asm._a).apply(null,arguments)}),He=u._free=function(){return(He=u._free=u.asm.$a).apply(null,arguments)},je=u.___errno_location=function(){return(je=u.___errno_location=u.asm.ab).apply(null,arguments)},qe=u._emscripten_get_global_libc=function(){return(qe=u._emscripten_get_global_libc=u.asm.bb).apply(null,arguments)},Ke=u._pthread_self=function(){return(Ke=u._pthread_self=u.asm.cb).apply(null,arguments)},Xe=u.___pthread_tsd_run_dtors=function(){return(Xe=u.___pthread_tsd_run_dtors=u.asm.db).apply(null,arguments)},Ye=u._emscripten_main_thread_process_queued_calls=function(){return(Ye=u._emscripten_main_thread_process_queued_calls=u.asm.eb).apply(null,arguments)},Je=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.fb).apply(null,arguments)},u._emscripten_register_main_browser_thread_id=function(){return(Je=u._emscripten_register_main_browser_thread_id=u.asm.gb).apply(null,arguments)}),Ze=u.__emscripten_do_dispatch_to_thread=function(){return(Ze=u.__emscripten_do_dispatch_to_thread=u.asm.hb).apply(null,arguments)},Qe=u._emscripten_sync_run_in_main_thread_4=function(){return(Qe=u._emscripten_sync_run_in_main_thread_4=u.asm.ib).apply(null,arguments)},et=u._emscripten_run_in_main_runtime_thread_js=function(){return(et=u._emscripten_run_in_main_runtime_thread_js=u.asm.jb).apply(null,arguments)},tt=u.__emscripten_call_on_thread=function(){return(tt=u.__emscripten_call_on_thread=u.asm.kb).apply(null,arguments)},nt=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.lb).apply(null,arguments)},u.__emscripten_thread_init=function(){return(nt=u.__emscripten_thread_init=u.asm.mb).apply(null,arguments)}),rt=u.stackSave=function(){return(rt=u.stackSave=u.asm.nb).apply(null,arguments)},at=u.stackRestore=function(){return(at=u.stackRestore=u.asm.ob).apply(null,arguments)},st=u.stackAlloc=function(){return(st=u.stackAlloc=u.asm.pb).apply(null,arguments)},it=u._emscripten_stack_set_limits=function(){return(it=u._emscripten_stack_set_limits=u.asm.qb).apply(null,arguments)},ot=u._memalign=function(){return(ot=u._memalign=u.asm.rb).apply(null,arguments)},lt=u.__emscripten_allow_main_runtime_queued_calls=9880,ut=u.__emscripten_main_thread_futex=11368;function ht(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function pt(e){if(e=e||f,!(ae>0)){if(b)return o(u),void postMessage({cmd:"loaded"});(function(){if(!b){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),Q.unshift(e);ge(Q)}var e})(),ae>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Be||(Be=!0,u.calledRun=!0,!P&&(ge(ee),b||ge(te),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!b){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),re.unshift(e);ge(re)}var e}()))}}if(u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?G(e):function(){return H(e,t,n,arguments)}},u.PThread=xe,u.PThread=xe,u.wasmMemory=A,u.ExitStatus=ht,ie=function e(){Be||pt(),Be||(ie=e)},u.run=pt,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();return b&&(E=!1,xe.initWorker()),pt(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)})),H=x(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r,a=void 0!==(e=e||{})?e:{};a.ready=new Promise((function(e,n){t=e,r=n}));var s,i={};for(s in a)a.hasOwnProperty(s)&&(i[s]=a[s]);var o,l,u=[],h=!1,p=!1;h="object"==typeof window,p="function"==typeof importScripts,o="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,l=!h&&!o&&!p;var d,c,f,m,g,y="";o?(y=p?W().dirname(y)+"/":__dirname+"/",d=function(e,t){return m||(m=require("fs")),g||(g=W()),e=g.normalize(e),m.readFileSync(e,t?null:"utf8")},f=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),I(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),process.on("unhandledRejection",G),a.inspect=function(){return"[Emscripten Module object]"}):l?("undefined"!=typeof read&&(d=function(e){return read(e)}),f=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(I("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(h||p)&&(p?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),n&&(y=n),y=0!==y.indexOf("blob:")?y.substr(0,y.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,x=a.print||console.log.bind(console),v=a.printErr||console.warn.bind(console);for(s in i)i.hasOwnProperty(s)&&(a[s]=i[s]);i=null,a.arguments&&(u=a.arguments),a.thisProgram&&a.thisProgram,a.quit&&a.quit,a.wasmBinary&&(b=a.wasmBinary),a.noExitRuntime,"object"!=typeof WebAssembly&&G("no native wasm support detected");var w,k=!1;function I(e,t){e||G("Assertion failed: "+t)}function N(e){var t=a["_"+e];return I(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,$,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){T.set(e,t)}(e,t),t}},i=N(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var h=s[n[u]];h?(0===l&&(l=se()),o[u]=h(r[u])):o[u]=r[u]}var p,d=i.apply(null,o);return p=d,d="string"===t?F(p):"boolean"===t?Boolean(p):p,0!==l&&ie(l),d}var C,T,$,_,E="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function A(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&E)return E.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function F(e,t){return e?A($,e,t):""}function R(e,t){return e%t>0&&(e+=t-e%t),e}function D(e){C=e,a.HEAP8=T=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=_=new Int32Array(e),a.HEAPU8=$=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}a.INITIAL_MEMORY;var M,O=[],L=[],z=[],P=[];L.push({func:function(){ae()}});var B=0,V=null,U=null;function G(e){a.onAbort&&a.onAbort(e),v(e+=""),k=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function H(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}a.preloadedImages={},a.preloadedAudios={};var j="data:application/octet-stream;base64,";function q(e){return H(e,j)}var K="file://";function X(e){return H(e,K)}var Y,J="tfjs-backend-wasm.wasm";function Z(e){try{if(e==J&&b)return new Uint8Array(b);if(f)return f(e);throw"both async and sync fetching of the wasm failed"}catch(e){G(e)}}function Q(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?M.get(n)():M.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(a)}}function ee(e){try{return w.grow(e-C.byteLength+65535>>>16),D(w.buffer),1}catch(e){}}q(J)||(Y=J,J=a.locateFile?a.locateFile(Y,y):y+Y);var te,ne={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=ne.buffers[e];0===t||10===t?((1===e?x:v)(A(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return ne.varargs+=4,_[ne.varargs-4>>2]},getStr:function(e){return F(e)},get64:function(e,t){return e}},re={a:function(){G()},d:function(e,t,n){$.copyWithin(e,t,t+n)},e:function(e){var t=$.length,n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ee(Math.min(n,R(Math.max(e,a),65536))))return!0}return!1},f:function(e){return 0},c:function(e,t,n,r,a){},b:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=_[t+8*s>>2],o=_[t+(8*s+4)>>2],l=0;l<o;l++)ne.printChar(e,$[i+l]);a+=o}return _[r>>2]=a,0}},ae=(function(){var e={a:re};function t(e,t){var n=e.exports;a.asm=n,D((w=a.asm.g).buffer),M=a.asm.m,function(e){if(B--,a.monitorRunDependencies&&a.monitorRunDependencies(B),0==B&&(null!==V&&(clearInterval(V),V=null),U)){var t=U;U=null,t()}}()}function n(e){t(e.instance)}function s(t){return function(){if(!b&&(h||p)){if("function"==typeof fetch&&!X(J))return fetch(J,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+J+"'";return e.arrayBuffer()})).catch((function(){return Z(J)}));if(c)return new Promise((function(e,t){c(J,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Z(J)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),G(e)}))}if(B++,a.monitorRunDependencies&&a.monitorRunDependencies(B),a.instantiateWasm)try{return a.instantiateWasm(e,t)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}(b||"function"!=typeof WebAssembly.instantiateStreaming||q(J)||X(J)||"function"!=typeof fetch?s(n):fetch(J,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),s(n)}))}))).catch(r)}(),a.___wasm_call_ctors=function(){return(ae=a.___wasm_call_ctors=a.asm.h).apply(null,arguments)}),se=(a._init=function(){return(a._init=a.asm.i).apply(null,arguments)},a._register_tensor=function(){return(a._register_tensor=a.asm.j).apply(null,arguments)},a._dispose_data=function(){return(a._dispose_data=a.asm.k).apply(null,arguments)},a._dispose=function(){return(a._dispose=a.asm.l).apply(null,arguments)},a._Abs=function(){return(a._Abs=a.asm.n).apply(null,arguments)},a._Add=function(){return(a._Add=a.asm.o).apply(null,arguments)},a._AddN=function(){return(a._AddN=a.asm.p).apply(null,arguments)},a._ArgMax=function(){return(a._ArgMax=a.asm.q).apply(null,arguments)},a._AvgPool=function(){return(a._AvgPool=a.asm.r).apply(null,arguments)},a._BatchMatMul=function(){return(a._BatchMatMul=a.asm.s).apply(null,arguments)},a._Ceil=function(){return(a._Ceil=a.asm.t).apply(null,arguments)},a._ClipByValue=function(){return(a._ClipByValue=a.asm.u).apply(null,arguments)},a._Conv2D=function(){return(a._Conv2D=a.asm.v).apply(null,arguments)},a._Conv2DBackpropInput=function(){return(a._Conv2DBackpropInput=a.asm.w).apply(null,arguments)},a._Cos=function(){return(a._Cos=a.asm.x).apply(null,arguments)},a._CropAndResize=function(){return(a._CropAndResize=a.asm.y).apply(null,arguments)},a._Cumsum=function(){return(a._Cumsum=a.asm.z).apply(null,arguments)},a._DepthToSpace=function(){return(a._DepthToSpace=a.asm.A).apply(null,arguments)},a._DepthwiseConv2dNative=function(){return(a._DepthwiseConv2dNative=a.asm.B).apply(null,arguments)},a._Equal=function(){return(a._Equal=a.asm.C).apply(null,arguments)},a._Exp=function(){return(a._Exp=a.asm.D).apply(null,arguments)},a._FlipLeftRight=function(){return(a._FlipLeftRight=a.asm.E).apply(null,arguments)},a._Floor=function(){return(a._Floor=a.asm.F).apply(null,arguments)},a._FloorDiv=function(){return(a._FloorDiv=a.asm.G).apply(null,arguments)},a._FusedBatchNorm=function(){return(a._FusedBatchNorm=a.asm.H).apply(null,arguments)},a._FusedConv2D=function(){return(a._FusedConv2D=a.asm.I).apply(null,arguments)},a._FusedDepthwiseConv2D=function(){return(a._FusedDepthwiseConv2D=a.asm.J).apply(null,arguments)},a._Gather=function(){return(a._Gather=a.asm.K).apply(null,arguments)},a._GatherNd=function(){return(a._GatherNd=a.asm.L).apply(null,arguments)},a._Greater=function(){return(a._Greater=a.asm.M).apply(null,arguments)},a._GreaterEqual=function(){return(a._GreaterEqual=a.asm.N).apply(null,arguments)},a._LeakyRelu=function(){return(a._LeakyRelu=a.asm.O).apply(null,arguments)},a._Less=function(){return(a._Less=a.asm.P).apply(null,arguments)},a._LessEqual=function(){return(a._LessEqual=a.asm.Q).apply(null,arguments)},a._Log=function(){return(a._Log=a.asm.R).apply(null,arguments)},a._LogicalAnd=function(){return(a._LogicalAnd=a.asm.S).apply(null,arguments)},a._Max=function(){return(a._Max=a.asm.T).apply(null,arguments)},a._MaxPool=function(){return(a._MaxPool=a.asm.U).apply(null,arguments)},a._Maximum=function(){return(a._Maximum=a.asm.V).apply(null,arguments)},a._Mean=function(){return(a._Mean=a.asm.W).apply(null,arguments)},a._Min=function(){return(a._Min=a.asm.X).apply(null,arguments)},a._Minimum=function(){return(a._Minimum=a.asm.Y).apply(null,arguments)},a._Multiply=function(){return(a._Multiply=a.asm.Z).apply(null,arguments)},a._Neg=function(){return(a._Neg=a.asm._).apply(null,arguments)},a._NonMaxSuppressionV3=function(){return(a._NonMaxSuppressionV3=a.asm.$).apply(null,arguments)},a._NonMaxSuppressionV4=function(){return(a._NonMaxSuppressionV4=a.asm.aa).apply(null,arguments)},a._NonMaxSuppressionV5=function(){return(a._NonMaxSuppressionV5=a.asm.ba).apply(null,arguments)},a._NotEqual=function(){return(a._NotEqual=a.asm.ca).apply(null,arguments)},a._OneHot=function(){return(a._OneHot=a.asm.da).apply(null,arguments)},a._PadV2=function(){return(a._PadV2=a.asm.ea).apply(null,arguments)},a._Pow=function(){return(a._Pow=a.asm.fa).apply(null,arguments)},a._Prelu=function(){return(a._Prelu=a.asm.ga).apply(null,arguments)},a._Prod=function(){return(a._Prod=a.asm.ha).apply(null,arguments)},a._RealDiv=function(){return(a._RealDiv=a.asm.ia).apply(null,arguments)},a._Relu=function(){return(a._Relu=a.asm.ja).apply(null,arguments)},a._Relu6=function(){return(a._Relu6=a.asm.ka).apply(null,arguments)},a._ResizeBilinear=function(){return(a._ResizeBilinear=a.asm.la).apply(null,arguments)},a._Reverse=function(){return(a._Reverse=a.asm.ma).apply(null,arguments)},a._RotateWithOffset=function(){return(a._RotateWithOffset=a.asm.na).apply(null,arguments)},a._Round=function(){return(a._Round=a.asm.oa).apply(null,arguments)},a._Rsqrt=function(){return(a._Rsqrt=a.asm.pa).apply(null,arguments)},a._ScatterNd=function(){return(a._ScatterNd=a.asm.qa).apply(null,arguments)},a._SelectV2=function(){return(a._SelectV2=a.asm.ra).apply(null,arguments)},a._Sigmoid=function(){return(a._Sigmoid=a.asm.sa).apply(null,arguments)},a._Sin=function(){return(a._Sin=a.asm.ta).apply(null,arguments)},a._Softmax=function(){return(a._Softmax=a.asm.ua).apply(null,arguments)},a._Sqrt=function(){return(a._Sqrt=a.asm.va).apply(null,arguments)},a._Square=function(){return(a._Square=a.asm.wa).apply(null,arguments)},a._SquaredDifference=function(){return(a._SquaredDifference=a.asm.xa).apply(null,arguments)},a._Step=function(){return(a._Step=a.asm.ya).apply(null,arguments)},a._StridedSlice=function(){return(a._StridedSlice=a.asm.za).apply(null,arguments)},a._Sub=function(){return(a._Sub=a.asm.Aa).apply(null,arguments)},a._Sum=function(){return(a._Sum=a.asm.Ba).apply(null,arguments)},a._Tanh=function(){return(a._Tanh=a.asm.Ca).apply(null,arguments)},a._Tile=function(){return(a._Tile=a.asm.Da).apply(null,arguments)},a._TopK=function(){return(a._TopK=a.asm.Ea).apply(null,arguments)},a._Transpose=function(){return(a._Transpose=a.asm.Fa).apply(null,arguments)},a.__FusedMatMul=function(){return(a.__FusedMatMul=a.asm.Ga).apply(null,arguments)},a._malloc=function(){return(a._malloc=a.asm.Ha).apply(null,arguments)},a._free=function(){return(a._free=a.asm.Ia).apply(null,arguments)},a.stackSave=function(){return(se=a.stackSave=a.asm.Ja).apply(null,arguments)}),ie=a.stackRestore=function(){return(ie=a.stackRestore=a.asm.Ka).apply(null,arguments)},oe=a.stackAlloc=function(){return(oe=a.stackAlloc=a.asm.La).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function n(){te||(te=!0,a.calledRun=!0,!k&&(Q(L),Q(z),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),function(){if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)e=a.postRun.shift(),P.unshift(e);var e;Q(P)}()))}e=e||u,B>0||(function(){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)e=a.preRun.shift(),O.unshift(e);var e;Q(O)}(),B>0)||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),n()}),1)):n())}if(a.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?N(e):function(){return S(e,t,n,arguments)}},U=function e(){te||ue(),te||(U=e)},a.run=ue,a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return ue(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModule=r)})),j=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},q=class{refCount(e){return K("refCount")}incRef(e){return K("incRef")}timerAvailable(){return!0}time(e){return K("time")}read(e){return K("read")}readSync(e){return K("readSync")}numDataIds(){return K("numDataIds")}disposeData(e,t){return K("disposeData")}write(e,t,n){return K("write")}move(e,t,n,r,a){return K("move")}memory(){return K("memory")}floatPrecision(){return K("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return K("dispose")}};function K(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function X(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function Y(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function J(e,t,n){return Math.max(e,Math.min(t,n))}function Z(e){return e%2==0?e:e+1}function Q(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ee(e,t){let n=Math.random();return t*n+(1-n)*e}function te(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function ne(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function re(e,t,n=""){ne(le(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ae(e){ne(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function se(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Ie(e)&&!n)for(let r=0;r<e.length;++r)se(e[r],t,n);else t.push(e);return t}function ie(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function oe(e){return 0===e.length}function le(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ue(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function pe(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function de(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return X(t),t}function ce(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function fe(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function me(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ge(e,t){let n=t.length;return ne((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ne(e.every((e=>ue(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ye(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ge(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function be(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ve(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function we(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ke(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ie(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Se(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ce(e){return"string"==typeof e||e instanceof String}function Te(e){return"boolean"==typeof e}function $e(e){return"number"==typeof e}function _e(e){return Array.isArray(e)?_e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":$e(e)?"float32":Ce(e)?"string":Te(e)?"bool":"float32"}function Ee(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ae(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Fe(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Re(e,t,n){let r=new Array;if(1===t.length){let a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{let a=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=Re(e+t*i,s,n)}return r}function De(e,t){if(0===e.length)return t[0];let n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Re(0,e,t)}function Me(e,t){let n=Oe(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Oe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Le(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return De(e,new Float32Array(n));if("int32"===t)return De(e,new Int32Array(n));if("bool"===t)return De(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ze(e){e.forEach((t=>{ne(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Pe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Be(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function We(e){return e&&e.then&&"function"==typeof e.then}var Ve="tfjsflags",Ue=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(We(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=function(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);Ve in e&&e[Ve].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Ge(){return je}var He,je=null;function qe(){if(null==He){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}He=e}return He}function Ke(e,t){let n=function(){let e=qe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Xe="Abs",Ye="Acos",Je="Acosh",Ze="Add",Qe="AddN",et="All",tt="Any",nt="ArgMax",rt="ArgMin",at="Asin",st="Asinh",it="Atan",ot="Atanh",lt="Atan2",ut="AvgPool",ht="AvgPoolGrad",pt="AvgPool3D",dt="AvgPool3DGrad",ct="BatchMatMul",ft="BatchToSpaceND",mt="Bincount",gt="BroadcastTo",yt="Cast",bt="Ceil",xt="ClipByValue",vt="Complex",wt="ComplexAbs",kt="Concat",It="Conv2D",Nt="Conv2DBackpropFilter",St="Conv2DBackpropInput",Ct="Conv3D",Tt="Conv3DBackpropFilterV2",$t="Conv3DBackpropInputV2",_t="Cos",Et="Cosh",At="Cumsum",Ft="CropAndResize",Rt="DenseBincount",Dt="DepthToSpace",Mt="DepthwiseConv2dNative",Ot="DepthwiseConv2dNativeBackpropFilter",Lt="DepthwiseConv2dNativeBackpropInput",zt="Diag",Pt="Dilation2D",Bt="Dilation2DBackpropInput",Wt="Dilation2DBackpropFilter",Vt="RealDiv",Ut="Elu",Gt="EluGrad",Ht="Erf",jt="Equal",qt="Exp",Kt="ExpandDims",Xt="Expm1",Yt="FFT",Jt="Fill",Zt="FlipLeftRight",Qt="Floor",en="FloorDiv",tn="FusedBatchNorm",nn="GatherV2",rn="GatherNd",an="Greater",sn="GreaterEqual",on="Identity",ln="IFFT",un="Imag",hn="IsFinite",pn="IsInf",dn="IsNan",cn="LeakyRelu",fn="Less",mn="LessEqual",gn="LinSpace",yn="Log",bn="Log1p",xn="LogicalAnd",vn="LogicalNot",wn="LogicalOr",kn="LogSoftmax",In="LRN",Nn="LRNGrad",Sn="Max",Cn="Maximum",Tn="MaxPool",$n="MaxPoolGrad",_n="MaxPool3D",En="MaxPool3DGrad",An="MaxPoolWithArgmax",Fn="Mean",Rn="Min",Dn="Minimum",Mn="MirrorPad",On="Mod",Ln="Multinomial",zn="Multiply",Pn="Neg",Bn="NotEqual",Wn="NonMaxSuppressionV3",Vn="NonMaxSuppressionV4",Un="NonMaxSuppressionV5",Gn="OnesLike",Hn="OneHot",jn="Pack",qn="PadV2",Kn="Pool",Xn="Pow",Yn="Prelu",Jn="Prod",Zn="Range",Qn="Real",er="Reciprocal",tr="Relu",nr="Reshape",rr="ResizeNearestNeighbor",ar="ResizeNearestNeighborGrad",sr="ResizeBilinear",ir="ResizeBilinearGrad",or="Relu6",lr="Reverse",ur="Round",hr="Rsqrt",pr="ScatterNd",dr="Select",cr="Selu",fr="Slice",mr="Sin",gr="Sinh",yr="Sign",br="Sigmoid",xr="Softplus",vr="Sqrt",wr="Sum",kr="SpaceToBatchND",Ir="SplitV",Nr="Softmax",Sr="SquaredDifference",Cr="Square",Tr="Sub",$r="SparseToDense",_r="StridedSlice",Er="Tan",Ar="Tanh",Fr="Tile",Rr="TopK",Dr="Transform",Mr="Transpose",Or="Unique",Lr="Unpack",zr="UnsortedSegmentSum",Pr="ZerosLike",Br="Step",Wr="FromPixels",Vr="RotateWithOffset",Ur="_FusedMatMul",Gr="FusedConv2D",Hr="FusedDepthwiseConv2D",jr=Ke("kernelRegistry",(()=>new Map)),qr=Ke("gradRegistry",(()=>new Map));function Kr(e,t){let n=na(e,t);return jr.get(n)}function Xr(e){return qr.get(e)}function Yr(e){let t=jr.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Jr(e){let{kernelName:t,backendName:n}=e,r=na(t,n);jr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),jr.set(r,e)}function Zr(e){let{kernelName:t}=e;qr.has(t)&&Ge().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),qr.set(t,e)}function Qr(e,t){let n=na(e,t);if(!jr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);jr.delete(n)}function ea(e){if(!qr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);qr.delete(e)}function ta(e,t){Yr(e).forEach((e=>{Jr(Object.assign({},e,{backendName:t}))}))}function na(e,t){return`${t}_${e}`}var ra={};function aa(e,t){return"string"===t?la(e):sa([e],t)}function sa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=se(e)),Ge().getBool("DEBUG")&&ve(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ia(){return Ge().platform.now()}function oa(e,t){return Ge().platform.fetch(e,t)}function la(e,t="utf-8"){return t=t||"utf-8",Ge().platform.encode(e,t)}function ua(e,t="utf-8"){return t=t||"utf-8",Ge().platform.decode(e,t)}v(ra,{arraysEqual:()=>le,assert:()=>ne,assertNonNegativeIntegerDimensions:()=>ze,assertNonNull:()=>ae,assertShapesMatch:()=>re,bytesFromStringArray:()=>Se,bytesPerElement:()=>Ne,checkConversionForErrors:()=>ve,clamp:()=>J,computeStrides:()=>Fe,createScalarValue:()=>aa,createShuffledIndices:()=>de,decodeString:()=>ua,distSquared:()=>te,encodeString:()=>la,fetch:()=>oa,flatten:()=>se,getArrayFromDType:()=>xe,getTypedArrayFromDType:()=>be,hasEncodingLoss:()=>ke,indexToLoc:()=>Be,inferDtype:()=>_e,inferFromImplicitShape:()=>me,isBoolean:()=>Te,isFunction:()=>Ee,isInt:()=>ue,isNumber:()=>$e,isPromise:()=>We,isScalarShape:()=>oe,isString:()=>Ce,isTypedArray:()=>Ie,isValidDtype:()=>we,locToIndex:()=>Pe,makeOnesTypedArray:()=>Me,makeZerosNestedTypedArray:()=>Le,makeZerosTypedArray:()=>Oe,nearestDivisor:()=>Ae,nearestLargerEven:()=>Z,now:()=>ia,parseAxisParam:()=>ge,randUniform:()=>ee,repeatedTry:()=>fe,rightPad:()=>ce,shuffle:()=>X,shuffleCombo:()=>Y,sizeFromShape:()=>ie,sizeToSquarishShape:()=>pe,squeezeShape:()=>ye,sum:()=>Q,tanh:()=>he,toNestedArray:()=>De,toTypedArray:()=>sa});function ha(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var pa=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?ce(`${r}ms`,9):r.error,o=ce(e,25),l=t.rank,u=t.size,h=ce(t.shape.toString(),14),p="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};var da=20,ca=3,fa=7;function ma(e,t,n,r){let a=Fe(t),s=function(e,t,n,r){let a=ie(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?xa(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],ga(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=ba(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ga(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(fa))} + ${parseFloat(e[1].toFixed(fa))}j`:Ce(e)?`'${e}'`:"bool"===n?ya(e):parseFloat(e.toFixed(fa)).toString(),ce(r,t)}function ya(e){return 0===e?"false":"true"}function ba(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[ga(xa(e)[0],0,n)]}return"bool"===n?[ya(e[0])]:[e[0].toString()]}if(1===l){if(o>da){let t=ca*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-ca)*i,o*i));return"complex64"===n&&(r=xa(r),s=xa(s)),["["+r.map(((e,t)=>ga(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ga(e,a[o-ca+t],n))).join(", ")+"]"]}return["["+("complex64"===n?xa(e):Array.from(e)).map(((e,t)=>ga(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>da){for(let t=0;t<ca;t++){let r=t*p,s=r+p;d.push(...ba(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-ca;t<o;t++){let r=t*p,s=r+p;d.push(...ba(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*p,s=r+p;d.push(...ba(e.slice(r,s),u,n,h,a,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function xa(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var va=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ie(e),null!=n){let e=n.length;ne(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||xe(t,this.size),this.strides=Fe(e)}set(e,...t){0===t.length&&(t=[0]),ne(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return wa().makeTensor(this.values,this.shape,this.dtype)}},wa=null,ka=null;var Ia=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ie(e),this.strides=Fe(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ka.buffer(this.shape,this.dtype,e)}bufferSync(){return ka.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return De(this.shape,e)}arraySync(){return De(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=wa().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>ua(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=wa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ua(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await wa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(wa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ka.print(this,e)}clone(){return this.throwIfDisposed(),ka.clone(this)}toString(e=!1){return ma(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ka.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),wa().makeVariable(this,e,t,n)}};function Na(){return Ke("Tensor",(()=>Ia))}Object.defineProperty(Ia,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Na();var Sa=class extends Ia{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!le(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);wa().disposeTensor(this),this.dataId=e.dataId,wa().incRef(this,null)}dispose(){wa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Sa,Symbol.hasInstance,{value:e=>e instanceof Ia&&null!=e.assign&&e.assign instanceof Function});var Ca,Ta,$a,_a,Ea,Aa={};v(Aa,{assertTypesMatch:()=>Oa,getTensorsInContainer:()=>za,isTensorInList:()=>La,makeTypesMatch:()=>Ma}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ca||(Ca={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ta||(Ta={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}($a||($a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(_a||(_a={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ea||(Ea={}));var Fa={float32:_a,int32:Ta,bool:$a,complex64:Ea};function Ra(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Fa[e][t]}function Da(e){return Ra(e,"int32")}function Ma(e,t){if(e.dtype===t.dtype)return[e,t];let n=Ra(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Oa(e,t){ne(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function La(e,t){return t.some((t=>t.id===e.id))}function za(e){let t=[];return Pa(e,t,new Set),t}function Pa(e,t,n){if(null==e)return;if(e instanceof Ia)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),Pa(a,t,n))}}function Ba(e){return null!=e.kernelName}var Wa=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Va=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Wa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new pa)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=ia();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:ia()-i})}if(Ge().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{ha(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){Yr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Yr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof q||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Va.nextTensorId++}nextVariableId(){return Va.nextVariableId++}clone(e){let t=Ga.runKernel(on,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return Ga.runKernel(yt,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==Kr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Ba(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ba(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=Kr(t,this.backendName);ne(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>{if(null!=e.rank)return e;let{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=Ba(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=Xr(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(ne(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Ce(e[0])&&(a=e.map((e=>la(e))));let s=r.write(a,t,n),i=new Ia(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=Se(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a=new Ia(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Sa(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Sa||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*Ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Xr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Oe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=za(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(ne(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ne(a instanceof Ia,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Me(ie(e),"float32");return Ga.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!le(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Ha);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return ne(Ee(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{ne(t.every((e=>e instanceof Ia)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),ne(n.value instanceof Ia,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ne(Ee(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];ne(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ne(s.every((e=>e instanceof Ia)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=ia(),n=await this.backend.time(e);return n.wallMs=ia()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Wa;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Ua(){let e=qe();if(null==e._tfengine){let t=new Ue(e);e._tfengine=new Va(t)}return function(e){je=e}(e._tfengine.ENV),function(e){wa=e}((()=>e._tfengine)),e._tfengine}Va.nextTensorId=0,Va.nextVariableId=0;var Ga=Ua();function Ha(e,t){let n={a:e,b:t};return Ga.runKernel(Ze,n)}var ja={};function qa(){if("undefined"!=typeof navigator&&null!=navigator){let e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Ka(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}v(ja,{isBrowser:()=>Ka,isMobile:()=>qa});var Xa=Ge();function Ya(e,t){let n=e;if(Ie(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Ie(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ge().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ja(e,r,[]),r}function Ja(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ie(e))return void ne(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ne(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ne(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)Ja(e[t],r,n.concat(t))}function Za(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Qa(e,t,n,r="numeric"){if(e instanceof Ia)return Za(r,e.dtype,t,n),e;let a=_e(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Za(r,a,t,n),null==e||!Ie(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Ya(e,a);!Ie(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?sa(e,a):se(e,[],!0);return Ga.makeTensor(i,s,a)}function es(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Qa(e,`${t}[${a}]`,n,r)))}Xa.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Xa.registerFlag("IS_BROWSER",(()=>Ka())),Xa.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Xa.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Xa.registerFlag("PROD",(()=>!1)),Xa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Xa.getBool("DEBUG"))),Xa.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Xa.registerFlag("IS_TEST",(()=>!1)),Xa.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Xa.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var ts="__op";function ns(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ts;let a=(...e)=>{Ga.startScope(n);try{let t=r(...e);return We(t)&&console.error("Cannot return a Promise inside of tidy."),Ga.endScope(t),t}catch(e){throw Ga.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var rs=ns({complex_:function(e,t){let n=Qa(e,"real","complex"),r=Qa(t,"imag","complex");re(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Ga.runKernel(vt,a)}});function as(e,t,n,r){if(null==r&&(r=_e(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ie(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ze(t);let e=ie(t),r=ie(n);ne(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==ie(t.slice(e));ne(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!Ie(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?sa(e,r):se(e,[],!0),Ga.makeTensor(e,t,r)}function ss(e,t,n){return as(e,t,Ya(e,n),n)}var is={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},os=4;async function ls(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+os*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=os,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:hs(await Promise.all(r)),specs:n}}function us(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=ie(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=is[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=gs()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=ie(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+os))[0];a+=os;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=is[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=ss(e,l,"float32"),o=ss(n,l,"float32");r[i]=rs(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=ss(t,l,o))}return r}function hs(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var ps="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ds(e){return ps?Buffer.byteLength(e):new Blob([e]).size}function cs(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function fs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function ms(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ds(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ds(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function gs(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var ys=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ys.instance&&(ys.instance=new ys),ys.instance}static registerSaveRouter(e){ys.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ys.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ys.getHandlers(e,"save")}static getLoadHandlers(e,t){return ys.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?ys.getInstance().loadRouters:ys.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},bs=e=>ys.registerSaveRouter(e),xs=e=>ys.registerLoadRouter(e),vs=e=>ys.getSaveHandlers(e),ws=(e,t)=>ys.getLoadHandlers(e,t),ks="tensorflowjs",Is="models_store",Ns="model_info_store";function Ss(){if(!Ge().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Cs(e){let t=e.result;t.createObjectStore(Is,{keyPath:"modelPath"}),t.createObjectStore(Ns,{keyPath:"modelPath"})}var Ts=class{constructor(e){if(this.indexedDB=Ss(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(ks,1);r.onupgradeneeded=()=>Cs(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Is,"readonly"),r=t.objectStore(Is).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=ms(t),i=a.transaction(Ns,"readwrite"),o=i.objectStore(Ns),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Is,"readwrite");let l=r.objectStore(Is).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Ns);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Ts.URL_SCHEME="indexeddb://";var $s=e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ts.URL_SCHEME)?function(e){return new Ts(e)}(e.slice(Ts.URL_SCHEME.length)):null;ys.registerSaveRouter($s),ys.registerLoadRouter($s);var _s="/",Es="tensorflowjs_models",As="info",Fs="model_topology",Rs="weight_specs",Ds="weight_data",Ms="model_metadata";function Os(e){return{info:[Es,e,As].join(_s),topology:[Es,e,Fs].join(_s),weightSpecs:[Es,e,Rs].join(_s),weightData:[Es,e,Ds].join(_s),modelMetadata:[Es,e,Ms].join(_s)}}function Ls(e){let t=e.split(_s);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(_s)}var zs=class{constructor(e){if(!Ge().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Os(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=ms(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(ps)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(ps){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};zs.URL_SCHEME="localstorage://";var Ps=e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(zs.URL_SCHEME)?function(e){return new zs(e)}(e.slice(zs.URL_SCHEME.length)):null;ys.registerSaveRouter(Ps),ys.registerLoadRouter(Ps);var Bs="://",Ws=class{constructor(){this.managers={}}static getInstance(){return null==Ws.instance&&(Ws.instance=new Ws),Ws.instance}static registerManager(e,t){ne(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Bs)&&(e=e.slice(0,e.indexOf(Bs))),ne(e.length>0,(()=>"scheme must not be an empty string."));let n=Ws.getInstance();ne(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Vs(e){if(-1===e.indexOf(Bs))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ws.getSchemes().join(",")}`);return{scheme:e.split(Bs)[0],path:e.split(Bs)[1]}}async function Us(e,t,n=!1){ne(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=ys.getLoadHandlers(e);ne(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ne(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=ys.getSaveHandlers(t);ne(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ne(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=Vs(e).scheme,l=Vs(e).path,u=o===Vs(e).scheme,h=await a.load();n&&u&&await Ws.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await Ws.getManager(o).removeModel(l),p.modelArtifactsInfo}async function Gs(){let e=Ws.getSchemes(),t={};for(let n of e){let e=await Ws.getManager(n).listModels();for(let r in e){t[n+Bs+r]=e[r]}}return t}async function Hs(e){let t=Vs(e);return Ws.getManager(t.scheme).removeModel(t.path)}async function js(e,t){return Us(e,t,!1)}async function qs(e,t){return Us(e,t,!0)}if(Ge().get("IS_BROWSER")){Ge().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{Ws.registerManager(zs.URL_SCHEME,new class{constructor(){ne(Ge().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ne("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=Es+_s,n=_s+As;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Ls(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=Os(e=function(e){return e.startsWith(zs.URL_SCHEME)?e.slice(zs.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}})}catch(e){}try{Ws.registerManager(Ts.URL_SCHEME,new class{constructor(){this.indexedDB=Ss()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(ks,1);n.onupgradeneeded=()=>Cs(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Ns,"readonly"),s=a.objectStore(Ns).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Ts.URL_SCHEME)?e.slice(Ts.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(ks,1);r.onupgradeneeded=()=>Cs(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Ns,"readwrite"),o=i.objectStore(Ns),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Is,"readwrite");let r=a.objectStore(Is).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Ks,Xs=()=>k();function Ys(e,t="float32",n){return t=t||"float32",ze(e),new va(e,t,n)}Ge().get("IS_NODE")&&Ge().setPlatform("node",new class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ge().global.fetch?Ge().global.fetch(e,t):(null==Ks&&(Ks=Xs()),Ks(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Js=ns({cast_:function(e,t){let n=Qa(e,"x","cast");if(!we(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Ga.runKernel(yt,r,a)}});var Zs=ns({clone_:function(e){let t={x:Qa(e,"x","clone","string_or_numeric")};return Ga.runKernel(on,t)}});function Qs(e,t=!1){console.log(e.toString(t))}Ua(),function(e){ka=e}({buffer:Ys,cast:Js,clone:Zs,print:Qs});var ei={};v(ei,{browserFiles:()=>ai,browserHTTPRequest:()=>ci,concatenateArrayBuffers:()=>cs,copyModel:()=>js,decodeWeights:()=>us,encodeWeights:()=>ls,fromMemory:()=>gi,getLoadHandlers:()=>ws,getModelArtifactsInfoForJSON:()=>ms,getSaveHandlers:()=>vs,http:()=>di,isHTTPScheme:()=>hi,listModels:()=>Gs,loadWeights:()=>oi,moveModel:()=>qs,registerLoadRouter:()=>xs,registerSaveRouter:()=>bs,removeModel:()=>Hs,weightsLoaderFactory:()=>li,withSaveHandler:()=>yi});function ti(e){return new Promise((e=>setTimeout(e))).then(e)}var ni=class{constructor(e){if(!Ge().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ni.URL_SCHEME)&&(e=e.slice(ni.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);let a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await ti((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ti((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ms(e)}}}};ni.URL_SCHEME="downloads://";var ri=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{let a=new FileReader;a.onload=a=>{let s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});let o,l=s.weightsManifest;if(null==l)return void r(new Error(`weightManifest field is missing from file ${e.name}`));try{o=this.checkManifestAndWeightFiles(l,t)}catch(e){return void r(e)}let u=[],h=[],p=[];l.forEach((e=>{e.paths.forEach((e=>{h.push(e),p.push(null)})),u.push(...e.weights)})),l.forEach((e=>{e.paths.forEach((e=>{let t=new FileReader;t.onload=t=>{let r=t.target.result,a=h.indexOf(e);if(p[a]=r,-1===p.indexOf(null)){let e={modelTopology:i,weightSpecs:u,weightData:cs(p),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(o[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){let n=[],r=t.map((e=>fs(e.name))),a={};for(let s of e)s.paths.forEach((e=>{let s=fs(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}};function ai(e){return new ri(e)}function si(e,t,n,r){var a;ne(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){ne(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ne(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ne(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ii(e,t){null==t&&(t={});let n=null==t.fetchFunc?Ge().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await si(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await si(a,t.onProgress,.5,1)}async function oi(e,t="",n,r){return li((e=>ii(e,{requestInit:r})))(e,t,n)}function li(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=is[l]*ie(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(h(),i[n]=!0)})):h(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let h=await e(u),p={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=h[d+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(h[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=us(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),d+=n})),p}}ys.registerSaveRouter((e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ni.URL_SCHEME)?function(e="model"){return new ni(e)}(e.slice(ni.URL_SCHEME.length)):null));var ui=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ne("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ge().platform.fetch,ne(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ne(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:ms(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n,r,a=e.modelTopology,s=e.weightsManifest,i=e.generatedBy,o=e.convertedBy,l=e.format,u=e.signature,h=e.userDefinedMetadata;if(null==a&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);null!=s&&([n,r]=await this.loadWeights(s));let p={modelTopology:a,weightSpecs:n,weightData:r,generatedBy:i,convertedBy:o,format:l};null!=u&&(p.signature=u),null!=h&&(p.userDefinedMetadata=h);let d=e.modelInitializer;return d&&(p.modelInitializer=d),p}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,cs(await ii(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function hi(e){return null!=e.match(ui.URL_SCHEME_REGEX)}ui.URL_SCHEME_REGEX=/^https?:\/\//;var pi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>hi(e))):hi(e),n)return di(e,t)}return null};function di(e,t){return new ui(e,t)}function ci(e,t){return di(e,t)}ys.registerSaveRouter(pi),ys.registerLoadRouter(pi);var fi=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},mi=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function gi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new fi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new fi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new fi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function yi(e){return new mi(e)}var bi={};v(bi,{confusionMatrix:()=>Ii});var xi=ns({matMul_:function(e,t,n=!1,r=!1){let a=Qa(e,"a","matMul"),s=Qa(t,"b","matMul");[a,s]=Ma(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return Ga.runKernel(ct,i,o)}});var vi=ns({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:Qa(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Ga.runKernel(Hn,a,s)}});var wi=ns({transpose_:function(e,t){let n=Qa(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ne(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ne(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();let r={x:n},a={perm:t};return Ga.runKernel(Mr,r,a)}});var ki,Ii=ns({confusionMatrix_:function(e,t,n){let r=Qa(e,"labels","confusionMatrix"),a=Qa(t,"predictions","confusionMatrix");ne(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),ne(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),ne(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),ne(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),ne(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=vi(Js(r,"int32"),n),i=vi(Js(a,"int32"),n),o=wi(s),l=xi(o,i);return Js(l,"int32")}}),Ni={};function Si(e,t,n){if(ae(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Ya(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return as(e,t,r,n)}function Ci(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){let t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Kr(Wr,Ga.backendName)){let n={pixels:e},r={numChannels:t};return Ga.runKernel(Wr,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i?l=e.getContext("2d").getImageData(0,0,h,p).data:r||n?l=e.data:(s||a||o)&&(null==ki&&(ki=document.createElement("canvas").getContext("2d")),ki.canvas.width=h,ki.canvas.height=p,ki.drawImage(e,0,0,h,p),l=ki.getImageData(0,0,h,p).data),4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Si(u,[p,h,t],"int32")}function Ti(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function $i(e,t=3){let n=null;if(Ge().getBool("WRAP_TO_IMAGEBITMAP")&&Ti(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ci(n,t)}async function _i(e,t){let n=Qa(e,"img","toPixels");if(!(e instanceof Ia)){let e=n;n=Js(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}v(Ni,{fromPixels:()=>Ei,fromPixelsAsync:()=>$i,toPixels:()=>_i});var Ei=ns({fromPixels_:Ci}),Ai={};function Fi(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ie(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let h=[...Fe(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,h]}v(Ai,{prepareAndValidate:()=>Fi});var Ri={};function Di(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Mi(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Di(n,t,e)}function Oi(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:ie(t.shape)/o,sliceSize:i,strides:[...Fe(n.slice(0,a)),1],outputSize:ie(n)}}v(Ri,{calculateShapes:()=>Oi,validateInput:()=>Mi,validateUpdateShape:()=>Di});var Li={};function zi(e,t,n){let r=e.shape.length;ne(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ne(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)ne(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Pi(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Bi(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Wi(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Vi(e,t,n){return n<=e?n:n-(t-1)}function Ui(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Gi(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=Hi(i,l,u,r,e),p=ji(o,l,u,a,e),d=Wi(s,l,u,e)}else for(let t=0;t<u;t++)h[t]=Ki(i,r,s,e,t,l),p[t]=Xi(o,a,s,e,t,l),d[t]=qi(s,t,l);return{begin:h,end:p,strides:d}}function Hi(e,t,n,r,a){let s=[...a],i=Ui(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=Vi(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function ji(e,t,n,r,a){let s=[...a],i=Ui(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=Vi(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=J(0,s[e],a[e])}return s}function qi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ki(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=J(0,i,l-1),i}function Xi(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?J(0,i,l):J(-1,i,l-1),i}function Yi(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Ji(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Zi(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{ne(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(ne(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Qi(e,t,n,r,a,s,i,o,l){let u=t.slice(),h=n.slice(),p=r;null==r&&(p=new Array(u.length));let d=Pi(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let c=e.length-u.length,f=Pi(o),m=e.slice();f.forEach((e=>{u[e]=0,h[e]=1,m.splice(e,0,1)}));let{begin:g,end:y,strides:b}=Gi(m,d,c,u,h,p,a,s,i);u=g,h=y,p=b;let x=Pi(l);x.forEach((e=>{h[e]=u[e]+1,p[e]=1}));let v=Bi(u,h,p),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:p.every((e=>1===e)),$begin:u,$end:h,$strides:p,size:v,newShape:m,outShape:w}}v(Li,{assertParamsValid:()=>zi,computeFlatOffset:()=>Ji,computeOutShape:()=>Bi,getNormalizedAxes:()=>Gi,isSliceContinous:()=>Yi,maskToAxes:()=>Pi,parseSliceParams:()=>Zi,sliceInfo:()=>Qi,startForAxis:()=>Ki,startIndicesWithElidedDims:()=>Hi,stopForAxis:()=>Xi,stopIndicesWithElidedDims:()=>ji,stridesForAxis:()=>qi,stridesWithElidedDims:()=>Wi});var eo={};v(eo,{Serializable:()=>to,SerializationMap:()=>no,registerClass:()=>ro});var to=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},no=class{constructor(){this.classNameMap={}}static getMap(){return null==no.instance&&(no.instance=new no),no.instance}static register(e){no.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ro(e){ne(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ne("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ne(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),no.register(e)}var ao={};v(ao,{TEST_EPSILON_FLOAT16:()=>io,encodeStrings:()=>yo,expectArrayBuffersEqual:()=>go,expectArraysClose:()=>oo,expectArraysEqual:()=>po,expectNumbersClose:()=>co,expectPromiseToFail:()=>ho,expectValuesInRange:()=>mo,testEpsilon:()=>lo});var so=.001,io=.1;function oo(e,t,n){return null==n&&(n=lo()),uo(e,t,((e,t)=>fo(e,t,n)))}function lo(){return 32===Ga.backend.floatPrecision()?so:io}function uo(e,t,n){let r=!0;if((Ie(e)||Ie(t))&&(r=!1),Ie(e)&&Ie(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Ya(e),r=Ya(t);if(!le(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=Ie(e)?e:se(e),s=Ie(t)?t:se(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ho(e,t){e().then((()=>t.fail()),(()=>t()))}function po(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ce(e)||Ce(e[0])||Ce(t)||Ce(t[0])?uo(e,n,((e,t)=>e==t)):uo(e,t,((e,t)=>fo(e,t,0)))}function co(e,t,n){if(null==n&&(n=lo()),!fo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function fo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function mo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function go(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function yo(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?yo(n):e[t]=la(n)}return e}var bo="3.3.0";function xo(){Ge().set("PROD",!0)}function vo(){Ge().set("DEBUG",!0)}function wo(){Ge().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ko(e){Ge().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Io(){Ga.disposeVariables()}function No(){return Ga}function So(){return Ga.memory()}function Co(e){return Ga.profile(e)}function To(e,t){return Ga.tidy(e,t)}function $o(e){za(e).forEach((e=>e.dispose()))}function _o(e){return Ga.keep(e)}function Eo(e){return Ga.time(e)}function Ao(e){return Ga.setBackend(e)}function Fo(){return Ga.ready()}function Ro(){return Ga.backendName}function Do(e){Ga.removeBackend(e)}function Mo(e){return Ga.findBackend(e)}function Oo(e){return Ga.findBackendFactory(e)}function Lo(e,t,n=1){return Ga.registerBackend(e,t,n)}function zo(){return Ga.backend}function Po(e,t){Ge().setPlatform(e,t)}!function(e){e}(ko);var Bo=ns({add_:function(e,t){let n=Qa(e,"a","add"),r=Qa(t,"b","add");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(Ze,a)}});var Wo=ns({floorDiv_:function(e,t){let n=Qa(e,"a","floorDiv"),r=Qa(t,"b","floorDiv");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(en,a)}});var Vo=ns({div_:function(e,t){let n=Qa(e,"a","div"),r=Qa(t,"b","div");if([n,r]=Ma(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Wo(n,r);let a={a:n,b:r};return Ga.runKernel(Vt,a,{})}});var Uo=ns({mul_:function(e,t){let n=Qa(e,"a","mul"),r=Qa(t,"b","mul");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(zn,a)}});var Go=ns({abs_:function(e){let t=Qa(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ga.runKernel(wt,e)}{let e={x:t};return Ga.runKernel(Xe,e)}}});var Ho=ns({acos_:function(e){let t={x:Qa(e,"x","acos")};return Ga.runKernel(Ye,t)}});var jo=ns({acosh_:function(e){let t={x:Qa(e,"x","acosh")};return Ga.runKernel(Je,t)}});var qo=ns({addN_:function(e){ne(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ne(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Qa(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!le(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return Ga.runKernel(Qe,r)}});var Ko=ns({all_:function(e,t=null,n=!1){let r={x:Qa(e,"x","all","bool")},a={axis:t,keepDims:n};return Ga.runKernel(et,r,a)}});var Xo=ns({any_:function(e,t=null,n=!1){let r={x:Qa(e,"x","any","bool")},a={axis:t,keepDims:n};return Ga.runKernel(tt,r,a)}});var Yo=ns({argMax_:function(e,t=0){let n={x:Qa(e,"x","argMax")},r={axis:t};return Ga.runKernel(nt,n,r)}});var Jo=ns({argMin_:function(e,t=0){let n={x:Qa(e,"x","argMin")},r={axis:t};return Ga.runKernel(rt,n,r)}});var Zo=ns({asin_:function(e){let t={x:Qa(e,"x","asin")};return Ga.runKernel(at,t)}});var Qo=ns({asinh_:function(e){let t={x:Qa(e,"x","asinh")};return Ga.runKernel(st,t)}});var el=ns({atan_:function(e){let t={x:Qa(e,"x","atan")};return Ga.runKernel(it,t)}});var tl=ns({atan2_:function(e,t){let n=Qa(e,"a","atan2"),r=Qa(t,"b","atan2");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(lt,a)}});var nl=ns({atanh_:function(e){let t={x:Qa(e,"x","atanh")};return Ga.runKernel(ot,t)}});function rl(e,t,n,r,a="NHWC",s){return il(e,[...t,e[3]],n,s,r,null,null,ml(a))}function al(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=ul(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return il(e,o,n,r,a,s,!1,i)}function sl(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=hl(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return ol(e,o,n,r,a,!1,l,s)}function il(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=ul(n),[b,x]=ul(r),v=pl(c,b),w=pl(f,x),{padInfo:k,outHeight:I,outWidth:N}=function(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=ll(e,t,n));let s=e[0],i=e[1],o=dl((s-t+2*r)/n+1,a),l=dl((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=dl((t-s+d+c)/r+1,o),p=dl((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}(a,u,h,g,y,v,w,s,o),S=i?m*p:m;return"channelsFirst"===o?d=[l,S,I,N]:"channelsLast"===o&&(d=[l,I,N,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:N,outChannels:S,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function ol(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,v]=hl(n),[w,k,I]=hl(r),N=pl(f,w),S=pl(m,k),C=pl(g,I),{padInfo:T,outDepth:$,outHeight:_,outWidth:E}=function(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=ll(e,t,r));let i=e[0],o=e[1],l=e[2],u=dl((i-t+2*a)/r+1,s),h=dl((o-t+2*a)/r+1,s),p=dl((l-t+2*a)/r+1,s);return[u,h,p,n]}([t,n,r,1],o,1,a,e,h);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,v=Math.floor(m/2);p={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}(a,u,h,p,b,x,v,N,S,C,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,$,_,E]:"channelsLast"===i&&(c=[l,$,_,E,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:$,outHeight:_,outWidth:E,outChannels:A,padInfo:T,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:N,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function ll(e,t,n,r=1){let a=pl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ul(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function hl(e){return"number"==typeof e?[e,e,e]:e}function pl(e,t){return t<=1?e:e+(e-1)*(t-1)}function dl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function cl(e){let[t,n,r]=ul(e);return 1===t&&1===n&&1===r}function fl(e,t){return cl(e)||cl(t)}function ml(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}var gl=ns({reshape_:function(e,t){let n={x:Qa(e,"x","reshape","string_or_numeric")},r={shape:t};return Ga.runKernel(nr,n,r)}});var yl=ns({avgPool_:function(e,t,n,r,a){let s=Qa(e,"x","avgPool","float32");ne(fl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=gl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ne(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&ne(ue(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=Ga.runKernel(ut,l,u);return h=Js(h,s.dtype),o?gl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var bl=ns({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=Qa(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ne(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ne("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&ne(ue(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Ga.runKernel(pt,u,h);return p=Js(p,o.dtype),l?gl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var xl=ns({concat_:function(e,t=0){ne(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=es(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Zs(n[0]);let r=n,a={axis:t};return Ga.runKernel(kt,r,a)}});var vl=ns({sigmoid_:function(e){let t={x:Qa(e,"x","sigmoid")};return Ga.runKernel(br,t)}});var wl=ns({slice_:function(e,t,n){let r=Qa(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Ga.runKernel(fr,a,s)}});var kl=ns({tanh_:function(e){let t={x:Qa(e,"x","tanh")};return Ga.runKernel(Ar,t)}});var Il=ns({basicLSTMCell_:function(e,t,n,r,a,s){let i=Qa(e,"forgetBias","basicLSTMCell"),o=Qa(t,"lstmKernel","basicLSTMCell"),l=Qa(n,"lstmBias","basicLSTMCell"),u=Qa(r,"data","basicLSTMCell"),h=Qa(a,"c","basicLSTMCell"),p=Qa(s,"h","basicLSTMCell"),d=xl([u,p],1),c=xi(d,o),f=Bo(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=wl(f,[0,0],y),x=wl(f,[0,g],y),v=wl(f,[0,2*g],y),w=wl(f,[0,3*g],y),k=Bo(Uo(vl(b),kl(x)),Uo(h,vl(Bo(i,v))));return[k,Uo(kl(k),vl(w))]}});var Nl=ns({batchToSpaceND_:function(e,t,n){let r=Qa(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));ne(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ne(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ne(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return Ga.runKernel(ft,s,i)}});function Sl(e){let t;return t=0===e.rank||1===e.rank?gl(e,[1,1,1,e.size]):2===e.rank?gl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?gl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var Cl=ns({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Qa(e,"x","batchNorm"),u=Qa(t,"mean","batchNorm"),h=Qa(n,"variance","batchNorm");null!=a&&(i=Qa(a,"scale","batchNorm")),null!=r&&(o=Qa(r,"offset","batchNorm")),ne(u.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ne(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ne(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:Sl(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=Ga.runKernel(tn,p,d);return gl(c,l.shape)}});var Tl=ns({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Qa(e,"x","batchNorm"),u=Qa(t,"mean","batchNorm"),h=Qa(n,"variance","batchNorm");return null!=a&&(i=Qa(a,"scale","batchNorm")),null!=r&&(o=Qa(r,"offset","batchNorm")),ne(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),ne(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),ne(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=i&&ne(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&ne(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),Cl(l,u,h,o,i,s)}});var $l=ns({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Qa(e,"x","batchNorm"),u=Qa(t,"mean","batchNorm"),h=Qa(n,"variance","batchNorm");return null!=a&&(i=Qa(a,"scale","batchNorm")),null!=r&&(o=Qa(r,"offset","batchNorm")),ne(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),ne(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),ne(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=i&&ne(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&ne(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),Cl(l,u,h,o,i,s)}});var _l=ns({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Qa(e,"x","batchNorm"),u=Qa(t,"mean","batchNorm"),h=Qa(n,"variance","batchNorm");return null!=a&&(i=Qa(a,"scale","batchNorm")),null!=r&&(o=Qa(r,"offset","batchNorm")),ne(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),ne(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),ne(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=i&&ne(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&ne(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),Cl(l,u,h,o,i,s)}});var El=ns({bincount_:function(e,t,n){let r=Qa(e,"x","bincount"),a=Qa(t,"weights","bincount");ne("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ne(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ne(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return Ga.runKernel(mt,s,i)}});var Al=ns({broadcastTo_:function(e,t){let n=Qa(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=gl(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Zs(n);let i={x:n},o={reps:s};return Ga.runKernel(Fr,i,o)}});var Fl=ns({ceil_:function(e){let t={x:Qa(e,"x","ceil")};return Ga.runKernel(bt,t)}});var Rl=ns({clipByValue_:function(e,t,n){let r=Qa(e,"x","clipByValue");ne(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return Ga.runKernel(xt,a,s)}});var Dl=ns({concat1d_:function(e){return xl(e,0)}});var Ml=ns({concat2d_:function(e,t){return xl(e,t)}});var Ol=ns({concat3d_:function(e,t){return xl(e,t)}});var Ll=ns({concat4d_:function(e,t){return xl(e,t)}});var zl=ns({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Qa(e,"x","conv2d"),l=Qa(t,"filter","conv2d"),u=o,h=!1;3===o.rank&&(h=!0,u=gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ne(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ne(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&ne(ue(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));let p="NHWC"===a?u.shape[3]:u.shape[1];ne(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),ne(fl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ga.runKernel(It,d,c);return h?gl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Pl=ns({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=Qa(e,"x","conv1d"),l=Qa(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=gl(o,[1,o.shape[0],o.shape[1]])),ne(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ne(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&ne(ue(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),ne(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ne(fl(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),ne("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let p=gl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=gl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=zl(d,p,[1,n],r,"NHWC",[1,s],i);return gl(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var Bl=ns({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){ne(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=gl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ne(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ne(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ne(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];ne(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),ne(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&ne(ue(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Ga.runKernel(St,d,c);return u?gl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Wl=ns({conv2dTranspose_:function(e,t,n,r,a,s){let i=Qa(e,"x","conv2dTranspose"),o=Qa(t,"filter","conv2dTranspose");return Bl(n,i,o,r,a,"NHWC",s)}});var Vl=ns({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=Qa(e,"x","conv3d"),o=Qa(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ne(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ne(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ne(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ne(fl(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ne("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=Ga.runKernel(Ct,h,p);return u?gl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Ul=ns({conv3DBackpropInput_:function(e,t,n,r,a){ne(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=gl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];ne(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),ne(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ne(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ne(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ne(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=Ga.runKernel($t,h,p);return o?gl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Gl=ns({conv3dTranspose_:function(e,t,n,r,a){let s=Qa(e,"x","conv3dTranspose"),i=Qa(t,"filter","conv3dTranspose");return Ul(n,s,i,r,a)}});var Hl=ns({cos_:function(e){let t={x:Qa(e,"x","cos")};return Ga.runKernel(_t,t)}});var jl=ns({cosh_:function(e){let t={x:Qa(e,"x","cosh")};return Ga.runKernel(Et,t)}});var ql=ns({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:Qa(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Ga.runKernel(At,a,s)}});var Kl=ns({denseBincount_:function(e,t,n,r=!1){let a=Qa(e,"x","denseBincount"),s=Qa(t,"weights","denseBincount");ne("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),ne(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),ne(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ne(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return Ga.runKernel(Rt,i,o)}});var Xl=ns({depthToSpace_:function(e,t,n="NHWC"){let r=Qa(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ne(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ne(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ne(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return Ga.runKernel(Dt,o,l)}});var Yl=ns({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Qa(e,"x","depthwiseConv2d"),l=Qa(t,"filter","depthwiseConv2d"),u=o,h=!1;3===o.rank&&(h=!0,u=gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ne(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ne(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),ne(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&ne(ue(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));let p={x:u,filter:l},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},c=Ga.runKernel(Mt,p,d);return h?gl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Jl=ns({diag_:function(e){let t={x:Qa(e,"x","diag")};return Ga.runKernel(zt,t)}});var Zl=ns({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=Qa(e,"x","dilation2d"),o=Qa(t,"filter","dilation2d");ne(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ne(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ne("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=gl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=Ga.runKernel(Pt,h,p);return u?gl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function Ql(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function eu(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function tu(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}var nu=ns({equal_:function(e,t){let n=Qa(e,"a","equal"),r=Qa(t,"b","equal");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(jt,a)}});var ru=ns({where_:function(e,t,n){let r=Qa(t,"a","where"),a=Qa(n,"b","where"),s=Qa(e,"condition","where","bool"),i=tu(r.shape,a.shape),o=Al(r,i),l=Al(a,i);1===s.rank&&ne(s.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&re(s.shape,l.shape,"Error in where: ");let u={condition:s,t:o,e:l};return Ga.runKernel(dr,u)}});var au=ns({zerosLike_:function(e){let t={x:Qa(e,"x","zerosLike")};return Ga.runKernel(Pr,t)}});var su=ns({divNoNan_:function(e,t){let n=Qa(e,"a","div"),r=Qa(t,"b","div");[n,r]=Ma(n,r);let a=Vo(n,r),s=au(a),i=nu(r,s);return ru(i,s,a)}});var iu=ns({dot_:function(e,t){let n=Qa(e,"t1","dot"),r=Qa(t,"t2","dot");ne(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(ne(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=gl(n,[1,-1]),t=gl(r,[-1,1]),a=xi(e,t);return gl(a,[])}if(1===n.rank&&2===r.rank){let e=gl(n,[1,-1]),t=gl(r,[r.shape[0],r.shape[1]]),a=xi(e,t);return gl(a,[a.size])}if(2===n.rank&&1===r.rank){let e=gl(r,[-1,1]),t=xi(n,e);return gl(t,[t.size])}{let e=gl(r,[r.shape[0],r.shape[1]]);return xi(n,e)}}});var ou=ns({elu_:function(e){let t={x:Qa(e,"x","elu")};return Ga.runKernel(Ut,t)}});var lu=ns({erf_:function(e){let t=Qa(e,"x","erf");ne("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Js(t,"float32"));let n={x:t};return Ga.runKernel(Ht,n)}});var uu=ns({exp_:function(e){let t={x:Qa(e,"x","exp")};return Ga.runKernel(qt,t)}});var hu=ns({expandDims_:function(e,t=0){let n=Qa(e,"x","expandDims","string_or_numeric");ne(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return Ga.runKernel(Kt,r,a)}});var pu=ns({expm1_:function(e){let t={x:Qa(e,"x","expm1")};return Ga.runKernel(Xt,t)}});var du=ns({tile_:function(e,t){let n=Qa(e,"x","tile","string_or_numeric");ne(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return Ga.runKernel(Fr,r,a)}});var cu=ns({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=Ys([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=gl(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return du(hu(i,0),[n[0],1,1]);if(2===n.length)return du(hu(hu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return du(hu(hu(hu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function fu(e,t,n){let r={shape:e,value:t,dtype:n};return Ga.runKernel(Jt,{},r)}var mu=ns({floor_:function(e){let t={x:Qa(e,"x","floor")};return Ga.runKernel(Qt,t)}});var gu=ns({gather_:function(e,t,n=0,r=0){let a={x:Qa(e,"x","gather"),indices:Qa(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Ga.runKernel(nn,a,s)}});var yu=ns({greater_:function(e,t){let n=Qa(e,"a","greater"),r=Qa(t,"b","greater");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(an,a)}});var bu=ns({greaterEqual_:function(e,t){let n=Qa(e,"a","greaterEqual"),r=Qa(t,"b","greaterEqual");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(sn,a)}});var xu=ns({imag_:function(e){let t={input:Qa(e,"input","imag")};return Ga.runKernel(un,t)}});var vu=ns({isFinite_:function(e){let t={x:Qa(e,"x","isFinite")};return Ga.runKernel(hn,t)}});var wu=ns({isInf_:function(e){let t={x:Qa(e,"x","isInf")};return Ga.runKernel(pn,t)}});var ku=ns({isNaN_:function(e){let t={x:Qa(e,"x","isNaN")};return Ga.runKernel(dn,t)}});var Iu=ns({leakyRelu_:function(e,t=.2){let n={x:Qa(e,"x","leakyRelu")},r={alpha:t};return Ga.runKernel(cn,n,r)}});var Nu=ns({less_:function(e,t){let n=Qa(e,"a","less"),r=Qa(t,"b","less");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(fn,a)}});var Su=ns({lessEqual_:function(e,t){let n=Qa(e,"a","lessEqual"),r=Qa(t,"b","lessEqual");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(mn,a)}});function Cu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Ga.runKernel(gn,{},r)}var Tu=ns({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=Qa(e,"x","localResponseNormalization");ne(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),ne(ue(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=gl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=Ga.runKernel(In,l,u);return o?gl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var $u=ns({log_:function(e){let t={x:Qa(e,"x","log")};return Ga.runKernel(yn,t)}});var _u=ns({log1p_:function(e){let t={x:Qa(e,"x","log1p")};return Ga.runKernel(bn,t)}});function Eu(e){return ne(Ee(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Qa(t,"x","tf.grad","string_or_numeric"),a=null!=n?Qa(n,"dy","tf.grad"):null;return Ga.tidy((()=>{let{value:t,grads:n}=Ga.gradients((()=>e(r)),[r],a);return null!=a&&re(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ou(n),n[0]}))}}function Au(e){return ne(Ee(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{ne(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=es(t,"args","tf.grads","string_or_numeric"),a=null!=n?Qa(n,"dy","tf.grads"):null;return Ga.tidy((()=>{let{value:t,grads:n}=Ga.gradients((()=>e(...r)),r,a);return null!=a&&re(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ou(n),n}))}}function Fu(e){return ne(Ee(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{ne(t instanceof Ia,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),ne(null==n||n instanceof Ia,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=Ga.gradients((()=>e(t)),[t],n);return Ou(r),{grad:r[0],value:a}}}function Ru(e){return ne(Ee(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{ne(Array.isArray(t)&&t.every((e=>e instanceof Ia)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),ne(null==n||n instanceof Ia,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=Ga.gradients((()=>e(...t)),t,n);return null!=n&&re(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ou(r.grads),r}}function Du(e,t){ne(Ee(e),(()=>"The f passed in variableGrads(f) must be a function")),ne(null==t||Array.isArray(t)&&t.every((e=>e instanceof Sa)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Ga.registeredVariables)t.push(Ga.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;ne((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=Ga.gradients(e,t,null,!0);ne(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ne(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Mu(e){return Ga.customGrad(e)}function Ou(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Lu=ns({neg_:function(e){let t={x:Qa(e,"x","neg")};return Ga.runKernel(Pn,t)}});var zu=ns({softplus_:function(e){let t={x:Qa(e,"x","softplus")};return Ga.runKernel(xr,t)}});var Pu=ns({logSigmoid_:function(e){let t=Qa(e,"x","logSigmoid");return Mu((e=>({value:Lu(zu(Lu(e))),gradFunc:t=>Uo(t,vl(Lu(e)))})))(t)}});var Bu=ns({max_:function(e,t=null,n=!1){let r={x:Qa(e,"x","max")},a={reductionIndices:t,keepDims:n};return Ga.runKernel(Sn,r,a)}});var Wu=ns({sub_:function(e,t){let n=Qa(e,"a","sub"),r=Qa(t,"b","sub");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(Tr,a)}});var Vu=ns({sum_:function(e,t=null,n=!1){let r=Qa(e,"x","sum");"bool"===r.dtype&&(r=Js(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ga.runKernel(wr,a,s)}});var Uu=ns({logSoftmax_:function(e,t=-1){let n=Qa(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Mu(((e,n)=>{let r=Bu(e,t,!0),a=Wu(e,r),s=Wu(Js(a,"float32"),$u(Vu(uu(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=uu(r);return Wu(e,Uo(Vu(e,t,!0),a))}}}))(n)}});function Gu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Hu(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function ju(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function qu(e,t){return Hu(e,t.map((e=>1)),t)}function Ku(e,t,n){ne(Gu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Xu(e,t){if(Gu(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Yu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ju(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Zu=ns({logSumExp_:function(e,t=null,n=!1){let r=Qa(e,"x","logSumExp"),a=ge(t,r.shape),s=Bu(r,a,!0),i=Wu(r,s),o=uu(i),l=Vu(o,a),u=$u(l),h=Bo(gl(s,u.shape),u);if(n){let e=qu(h.shape,a);return gl(h,e)}return h}});var Qu=ns({logicalAnd_:function(e,t){let n=Qa(e,"a","logicalAnd","bool"),r=Qa(t,"b","logicalAnd","bool");tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(xn,a)}});var eh=ns({logicalNot_:function(e){let t={x:Qa(e,"x","logicalNot","bool")};return Ga.runKernel(vn,t)}});var th=ns({logicalOr_:function(e,t){let n=Qa(e,"a","logicalOr","bool"),r=Qa(t,"b","logicalOr","bool");tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(wn,a)}});var nh=ns({logicalXor_:function(e,t){let n=Qa(e,"a","logicalXor","bool"),r=Qa(t,"b","logicalXor","bool");return tu(n.shape,r.shape),Qu(th(e,t),eh(Qu(e,t)))}});var rh=ns({maxPool_:function(e,t,n,r,a){let s=Qa(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=gl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ne(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ne(fl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&ne(ue(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=Ga.runKernel(Tn,l,u);return o?gl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var ah=ns({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=Qa(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ne(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ne("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&ne(ue(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Ga.runKernel(_n,u,h);return l?gl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var sh=ns({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:Qa(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Ga.runKernel(An,s,i);return{result:o[0],indexes:o[1]}}});var ih=ns({maximum_:function(e,t){let n=Qa(e,"a","maximum"),r=Qa(t,"b","maximum");[n,r]=Ma(n,r),"bool"===n.dtype&&(n=Js(n,"int32"),r=Js(r,"int32")),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(Cn,a)}});var oh=ns({mean_:function(e,t=null,n=!1){let r={x:Qa(e,"x","mean")},a={axis:t,keepDims:n};return Ga.runKernel(Fn,r,a)}});var lh=ns({min_:function(e,t=null,n=!1){let r={x:Qa(e,"x","min")},a={axis:t,keepDims:n};return Ga.runKernel(Rn,r,a)}});var uh=ns({minimum_:function(e,t){let n=Qa(e,"a","minimum"),r=Qa(t,"b","minimum");[n,r]=Ma(n,r),"bool"===n.dtype&&(n=Js(n,"int32"),r=Js(r,"int32")),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(Dn,a)}});var hh=ns({mirrorPad_:function(e,t,n){ne("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Qa(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ne(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ne(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ne(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return Ga.runKernel(Mn,i,s)}});var ph=ns({mod_:function(e,t){let n=Qa(e,"a","mod"),r=Qa(t,"b","mod");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(On,a)}});var dh=ns({square_:function(e){let t=Qa(e,"x","square");return Ga.runKernel("Square",{x:t},{})}});var ch=ns({moments_:function(e,t=null,n=!1){let r=ge(t,(e=Qa(e,"x","moments")).shape),a=oh(e,r,n),s=a.shape;n||(s=qu(a.shape,r));let i=dh(Wu(Js(e,"float32"),gl(a,s)));return{mean:a,variance:oh(i,r,n)}}});var fh=ns({multiRNNCell_:function(e,t,n,r){let a=Qa(t,"data","multiRNNCell"),s=es(n,"c","multiRNNCell"),i=es(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}});var mh=ns({multinomial_:function(e,t,n,r=!1){let a=Qa(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?gl(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Ga.runKernel(Ln,o,l);return 1===i?gl(u,[u.size]):u}});var gh=ns({notEqual_:function(e,t){let n=Qa(e,"a","notEqual"),r=Qa(t,"b","notEqual");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(Bn,a)}});function yh(e,t="float32"){if("complex64"===t){let t=yh(e,"float32"),n=yh(e,"float32");return rs(t,n)}let n=Oe(ie(e),t);return Ga.makeTensor(n,e,t)}function bh(e,t="float32"){if("complex64"===t){let t=bh(e,"float32"),n=yh(e,"float32");return rs(t,n)}let n=Me(ie(e),t);return Ga.makeTensor(n,e,t)}var xh=ns({onesLike_:function(e){let t={x:Qa(e,"x","onesLike")};return Ga.runKernel(Gn,t)}});var vh=ns({outerProduct_:function(e,t){let n=Qa(e,"v1","outerProduct"),r=Qa(t,"v2","outerProduct");ne(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=gl(n,[-1,1]),s=gl(r,[1,-1]);return xi(a,s)}});var wh=ns({pad_:function(e,t,n=0){let r=Qa(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Ga.runKernel(qn,s,a)}});var kh=ns({pad1d_:function(e,t,n=0){return ne(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),wh(e,[t],n)}});var Ih=ns({pad2d_:function(e,t,n=0){return ne(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wh(e,t,n)}});var Nh=ns({pad3d_:function(e,t,n=0){return ne(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wh(e,t,n)}});var Sh=ns({pad4d_:function(e,t,n=0){return ne(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wh(e,t,n)}});var Ch=ns({spaceToBatchND_:function(e,t,n){let r=Qa(e,"x","spaceToBatchND");ne(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ne(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ne(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return Ga.runKernel(kr,a,s)}});var Th=ns({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let i=Qa(e,"x","maxPool"),o=i,l=!1;3===i.rank&&(l=!0,o=gl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ne(fl(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let u,h=al(o.shape,t,s,a,r),p=[h.dilationHeight,h.dilationWidth];u="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];let d=1===p[0]&&1===p[1],[c,f]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],p,u),m=d?r:"valid",g=d?o:Ch(o,p,c),y=("avg"===n?()=>yl(g,t,s,m):()=>rh(g,t,s,m))(),b=d?y:Nl(y,p,f);return l?gl(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});var $h=ns({pow_:function(e,t){let n=Qa(e,"base","pow"),r=Qa(t,"exp","pow");[n,r]=Ma(n,r);let a={a:n,b:r};return Ga.runKernel(Xn,a)}});var _h=ns({prelu_:function(e,t){let n={x:Qa(e,"x","prelu"),alpha:Qa(t,"alpha","prelu")};return Ga.runKernel(Yn,n)}});var Eh=ns({prod_:function(e,t=null,n=!1){let r=Qa(e,"x","prod");"bool"===r.dtype&&(r=Js(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ga.runKernel(Jn,a,s)}});var Ah=ns({rand_:function(e,t,n){let r=ie(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Ga.makeTensor(a,e,n)}}),Fh=w(A()),Rh=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Fh.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var Dh=ns({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Fh.alea(a.toString()),this.randn=new Rh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=Ys(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Mh=ns({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Rh(t,n,r,!1,a),i=Ys(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Oh=ns({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=Ys(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Fh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Lh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Ga.runKernel(Zn,{},a)}var zh=ns({real_:function(e){let t={input:Qa(e,"input","real")};return Ga.runKernel(Qn,t)}});var Ph=ns({reciprocal_:function(e){let t={x:Qa(e,"x","reciprocal")};return Ga.runKernel(er,t)}});var Bh=ns({relu_:function(e){let t={x:Qa(e,"x","relu")};return Ga.runKernel(tr,t)}});var Wh=ns({relu6_:function(e){let t={x:Qa(e,"x","relu6")};return Ga.runKernel(or,t)}});var Vh=ns({reverse_:function(e,t){let n={x:Qa(e,"x","reverse")},r={dims:t};return Ga.runKernel(lr,n,r)}});var Uh=ns({reverse1d_:function(e){let t=Qa(e,"x","reverse");return ne(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Vh(t,0)}});var Gh=ns({reverse2d_:function(e,t){let n=Qa(e,"x","reverse");return ne(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Vh(n,t)}});var Hh=ns({reverse3d_:function(e,t){let n=Qa(e,"x","reverse");return ne(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Vh(n,t)}});var jh=ns({reverse4d_:function(e,t){let n=Qa(e,"x","reverse");return ne(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Vh(n,t)}});var qh=ns({round_:function(e){let t={x:Qa(e,"x","round")};return Ga.runKernel(ur,t)}});var Kh=ns({rsqrt_:function(e){let t={x:Qa(e,"x","rsqrt")};return Ga.runKernel(hr,t)}});function Xh(e,t){if((Ie(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ie(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return as(e,[],[],t)}var Yh=ns({selu_:function(e){let t={x:Qa(e,"x","selu")};return Ga.runKernel(cr,t)}});var Jh=ns({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=Qa(e,"x","separableConv2d"),l=Qa(t,"depthwiseFilter","separableConv2d"),u=Qa(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ne(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),ne(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ne(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ne(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ne(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];ne(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Yl(h,l,r,a,i,s),m=zl(f,u,1,"valid",i);return p?gl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Zh=async function(e,t){let n=Qa(e,"x","setdiff1d"),r=Qa(t,"y","setdiff1d");ne(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ne(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ne(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new va([o],n.dtype),u=new va([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var Qh=ns({sign_:function(e){let t={x:Qa(e,"x","sign")};return Ga.runKernel(yr,t)}});var ep=ns({sin_:function(e){let t={x:Qa(e,"x","sin")};return Ga.runKernel(mr,t)}});var tp=ns({sinh_:function(e){let t={x:Qa(e,"x","sinh")};return Ga.runKernel(gr,t)}});var np=ns({slice1d_:function(e,t,n){let r=Qa(e,"x","slice1d");return ne(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),wl(r,[t],[n])}});var rp=ns({slice2d_:function(e,t,n){let r=Qa(e,"x","slice2d");return ne(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),wl(r,t,n)}});var ap=ns({slice3d_:function(e,t,n){let r=Qa(e,"x","slice3d");return ne(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),wl(r,t,n)}});var sp=ns({slice4d_:function(e,t,n){let r=Qa(e,"x","slice4d");return ne(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),wl(r,t,n)}});var ip=ns({softmax_:function(e,t=-1){let n=Qa(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Ga.runKernel(Nr,r,a)}});var op=ns({fft_:function(e){ne("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ga.runKernel(Yt,t)}});var lp=ns({ifft_:function(e){ne("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ga.runKernel(ln,t)}});var up=ns({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=gl(e,[r,n]);t=lp(a)}else{let a=[r,2*(n-1)],s=gl(zh(e),[r,n]),i=gl(xu(e),[r,n]),o=Vh(wl(s,[0,1],[r,n-2]),1),l=Uo(Vh(wl(i,[0,1],[r,n-2]),1),Xh(-1)),u=xl([s,o],1),h=xl([i,l],1),p=gl(rs(u,h),[a[0],a[1]]);t=lp(p)}if(t=zh(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=gl(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var hp=ns({split_:function(e,t,n=0){let r={x:Qa(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Ga.runKernel(Ir,r,a)}});var pp=ns({rfft_:function(e,t){ne("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=wl(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=xl([e,yh(a)],e.shape.length-1),r=t}else n=e;let s=au(n),i=gl(rs(n,s),[a,r]),o=op(i),l=Math.floor(r/2)+1,u=zh(o),h=xu(o),p=hp(u,[l,r-l],u.shape.length-1),d=hp(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,gl(rs(p[0],d[0]),c)}});var dp=ns({sqrt_:function(e){let t={x:Qa(e,"x","sqrt")};return Ga.runKernel(vr,t)}});var cp=ns({squaredDifference_:function(e,t){let n=Qa(e,"a","squaredDifference"),r=Qa(t,"b","squaredDifference");[n,r]=Ma(n,r),tu(n.shape,r.shape);let a={a:n,b:r};return Ga.runKernel(Sr,a,{})}});var fp=ns({squeeze_:function(e,t){let n=Qa(e,"x","squeeze");return gl(n,ye(n.shape,t).newShape)}});var mp=ns({stack_:function(e,t=0){let n=es(e,"tensors","stack","string_or_numeric");ne(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ne(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return Ga.runKernel(jn,r,a)}});var gp=ns({step_:function(e,t=0){let n={x:Qa(e,"x","step")},r={alpha:t};return Ga.runKernel(Br,n,r)}});var yp=ns({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:Qa(e,"x","stridedSlice")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ga.runKernel(_r,u,h)}});var bp=ns({tan_:function(e){let t={x:Qa(e,"x","tan")};return Ga.runKernel(Er,t)}});function xp(e,t){ae(e);let n=Ya(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return as(e,null,n,t)}function vp(e,t,n){if(ae(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Ya(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return as(e,t,r,n)}function wp(e,t,n){if(ae(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Ya(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return as(e,t,r,n)}function kp(e,t,n){if(ae(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Ya(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return as(e,t,r,n)}function Ip(e,t,n){if(ae(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Ya(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return as(e,t=t||r,r,n)}var Np=ns({topk_:function(e,t=1,n=!0){let r=Qa(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Ga.runKernel(Rr,s,i);return{values:o,indices:l}}});var Sp=ns({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Rh(t,n,r,!0,a),i=Ys(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Cp=ns({unique_:function(e,t=0){let n=Qa(e,"x","unique","string_or_numeric");ne(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=Ga.runKernel(Or,r,a);return{values:s,indices:i}}});var Tp=ns({unsortedSegmentSum_:function(e,t,n){let r=Qa(e,"x","unsortedSegmentSum"),a=Qa(t,"segmentIds","unsortedSegmentSum","int32");ne(ue(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return Ga.runKernel(zr,s,i)}});var $p=ns({unstack_:function(e,t=0){let n=Qa(e,"x","unstack","string_or_numeric");ne(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return Ga.runKernel(Lr,r,a)}});function _p(e,t=!0,n,r){return Ga.makeVariable(e,t,n,r)}function Ep(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=Ys(e,"int32"),a=Ys([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var Ap=async function(e){let t=Qa(e,"condition","whereAsync","bool"),n=await t.data(),r=Ep(t.shape,n);return e!==t&&t.dispose(),r};var Fp=async function(e,t,n){let r=Qa(e,"tensor","boolMask"),a=Qa(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;ne(i>0,(()=>"mask cannot be scalar")),re(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=gl(r,u),p=gl(a,[-1]),d=await Ap(p),c=fp(d,[1]),f=gu(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f};function Rp(e,t,n=null){if(0===e.rank)return Go(e);if(1!==e.rank&&null===n)return Rp(gl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Vu(Go(e),n);if(t===1/0)return Bu(Go(e),n);if(t===-1/0)return lh(Go(e),n);if("euclidean"===t||2===t)return dp(Vu($h(Go(e),Xh(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Bu(Vu(Go(e),n[0]),n[1]-1);if(t===1/0)return Bu(Vu(Go(e),n[1]),n[0]);if(t===-1/0)return lh(Vu(Go(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return dp(Vu(dh(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Dp=ns({norm_:function(e,t="euclidean",n=null,r=!1){let a=Rp(e=Qa(e,"x","norm"),t,n),s=a.shape;if(r){let t=ge(n,e.shape);s=qu(a.shape,t)}return gl(a,s)}});var Mp=ns({movingAverage_:function(e,t,n,r,a=!0){let s=Qa(e,"v","movingAverage"),i=Qa(t,"x","movingAverage"),o=Qa(n,"decay","movingAverage");Oa(s,i),ne(le(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=Xh(1),u=Wu(l,o),h=Uo(Wu(i,s),u);if(a){ne(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Qa(r,"step","movingAverage");h=Vo(h,Wu(l,$h(o,e)))}return Bo(s,h)}});var Op=ns({scatterND_:function(e,t,n){let r=Qa(e,"indices","scatterND","int32"),a=Qa(t,"updates","scatterND");Mi(a,r,n);let s={indices:r,updates:a},i={shape:n};return Ga.runKernel(pr,s,i)}});var Lp=ns({sparseToDense_:function(e,t,n,r=0){let a=Qa(e,"sparseIndices","sparseToDense","int32"),s=Qa(t,"sparseValues","sparseToDense"),i=Qa(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Ga.runKernel($r,o,l)}});var zp=ns({gatherND_:function(e,t){let n=Qa(t,"indices","gatherND","int32"),r={params:Qa(e,"x","gatherND"),indices:n};return Ga.runKernel(rn,r)}});var Pp=ns({dropout_:function(e,t,n,r){let a=Qa(e,"x","dropout");if(ne("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),ne(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ia?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(le(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Vo(mu(Bo(Oh(s,0,1,"float32",r),i)),i);return Uo(a,o)}});function Bp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Wp(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return xp(a,"float32")}var Vp=async function(e,t,n=1){let r=Qa(e,"predictions","inTopK"),a=Qa(t,"targets","inTopK");ne(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),ne(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),re(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];ne(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=be("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),h[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),ss(h,a.shape,"bool")},Up={};v(Up,{conv2d:()=>Xp,depthwiseConv2d:()=>Zp,matMul:()=>Qp});var Gp=ns({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=gl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=gl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ne(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ne(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ne(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];ne(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ne(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),null!=i&&ne(ue(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Ga.runKernel(Nt,p,d)}});function Hp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Uo(e,gp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function jp(e,t){let n=t,r=eu(e.shape,t.shape);return r.length>0&&(n=Vu(n,r)),gl(n,e.shape)}function qp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Bh(e);if("elu"===t)return ou(e);if("relu6"===t)return Wh(e);if("prelu"===t)return _h(e,n);if("leakyrelu"===t)return Iu(e,r);throw new Error(`Unknown fused activation ${t}.`)}var Kp=(e,t)=>!(e>0)||"linear"===t;var Xp=ns({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Kp(Ga.state.gradientDepth,l)){let p=zl(e,t,n,r,a,s,i);return null!=o&&(p=Bo(p,o)),qp(p,l,u,h)}let p=Qa(e,"x","conv2d"),d=Qa(t,"filter","conv2d"),c=p,f=!1;3===p.rank&&(f=!0,c=gl(p,[1,p.shape[0],p.shape[1],p.shape[2]])),ne(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),ne(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&ne(ue(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),ne(c.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${c.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),ne(fl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ne("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));let m,g,y=il(c.shape,d.shape,n,s,r,i);null!=o&&(m=Qa(o,"bias","fused conv2d"),[m]=Ma(m,p),tu(y.outShape,m.shape)),null!=u&&(g=Qa(u,"prelu weights","fused conv2d"));let b=(e,t)=>{let[a,i,o,u]=t,h=Hp(e,o,l);ne(cl(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let p=[Bl(i.shape,h,a,n,r),Gp(i,h,a.shape,n,r)];if(null!=u){let e=jp(u,h);p.push(e)}return p},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Mu(((e,t,n)=>{let r=Ga.runKernel(Gr,x,v);return n([t,e,r]),f&&(r=gl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):Mu(((e,t,n,r)=>{let a=Ga.runKernel(Gr,x,v);return r([t,e,a,n]),f&&(a=gl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Yp=ns({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=gl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=gl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Ga.runKernel(Ot,u,h)}});var Jp=ns({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=gl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=Ga.runKernel(Lt,u,h);return l?gl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Zp=ns({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Kp(Ga.state.gradientDepth,l)){let p=Yl(e,t,n,r,a,s,i);return null!=o&&(p=Bo(p,o)),qp(p,l,u,h)}let p=Qa(e,"x","depthwiseConv2d"),d=Qa(t,"filter","depthwiseConv2d"),c=p,f=!1;3===p.rank&&(f=!0,c=gl(p,[1,p.shape[0],p.shape[1],p.shape[2]])),ne(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),ne(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),ne(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),ne(fl(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&ne(ue(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));let m,g,y=il(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=Qa(o,"bias","fused conv2d"),[m]=Ma(m,p),tu(y.outShape,m.shape)),null!=u&&(g=Qa(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{ne(cl(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,h]=t,p=Hp(e,u,l),d=Jp(o.shape,p,a,n,r,s,i),c=Yp(o,p,a.shape,n,r,s,i);if(null!=h){return[d,c,jp(m,p)]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Mu(((e,t,n)=>{let r=Ga.runKernel(Hr,x,v);return n([t,e,r]),f&&(r=gl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):Mu(((e,t,n,r)=>{let a=Ga.runKernel(Hr,x,v);return r([t,e,a,n]),f&&(a=gl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Qp=ns({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Kp(Ga.state.gradientDepth,s)){let l=xi(e,t,n,r);return null!=a&&(l=Bo(l,a)),qp(l,s,i,o)}let l=Qa(e,"a","fused matMul"),u=Qa(t,"b","fused matMul");[l,u]=Ma(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ie(f),y=ie(m);ne(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),ne(le(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),ne(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,v=l.shape.slice(0,-2).concat([d,c]),w=gl(l,n?[g,h,d]:[g,d,h]),k=gl(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=Qa(a,"bias","fused matMul"),[b]=Ma(b,l),tu(v,b.shape)),null!=i&&(x=Qa(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=Hp(gl(e,h.shape),h,s);if(n||r?!n&&r?(i=xi(d,u,!1,!1),o=xi(d,l,!0,!1)):n&&!r?(i=xi(u,d,!1,!0),o=xi(l,d,!1,!1)):(i=xi(u,d,!0,!0),o=xi(d,l,!0,!0)):(i=xi(d,u,!1,!0),o=xi(l,d,!0,!1)),null!=a){return[i,o,jp(p,d)]}return[i,o]},N={a:w,b:k,bias:b,preluActivationWeights:x},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Mu(((e,t,n)=>{let r=Ga.runKernel(Ur,N,S);return n([e,t,r]),{value:gl(r,v),gradFunc:I}}))(w,k):Mu(((e,t,n,r)=>{let a=Ga.runKernel(Ur,N,S);return r([e,t,a,n]),{value:gl(a,v),gradFunc:I}}))(w,k,b)}});var ed=ns({hammingWindow_:function(e){return Wp(e,.54,.46)}});var td=ns({hannWindow_:function(e){return Wp(e,.5,.5)}});var nd=ns({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(wl(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=xl([wl(e,s,t-r),fu([r],a)]);i.push(o),s+=n}return 0===i.length?vp([],[0,t]):gl(xl(i),[i.length,t])}});var rd=ns({stft_:function(e,t,n,r,a=td){null==r&&(r=Bp(t));let s=nd(e,t,n),i=Uo(s,a(t)),o=[];for(let e=0;e<s.shape[0];e++)o.push(pp(wl(i,[e,0],[1,t]),r));return xl(o)}});var ad=ns({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=Qa(e,"image","cropAndResize"),o=Qa(t,"boxes","cropAndResize","float32"),l=Qa(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ne(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ne(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ne(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ne(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ne(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ne("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return Ga.runKernel(Ft,h,p)}});var sd=ns({flipLeftRight_:function(e){let t=Qa(e,"image","flipLeftRight","float32");ne(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Ga.runKernel(Zt,n,{})}});var id=ns({rotateWithOffset_:function(e,t,n=0,r=.5){let a=Qa(e,"image","rotateWithOffset","float32");ne(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return Ga.runKernel(Vr,s,i)}});function od(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),ne(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ne(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ne(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ne(1===t.rank,(()=>"scores must be a 1D tensor")),ne(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ne(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var ld=ns({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Qa(e,"boxes","nonMaxSuppression"),i=Qa(t,"scores","nonMaxSuppression"),o=od(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Ga.runKernel(Wn,{boxes:s,scores:i},l)}});function ud(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||hd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function hd(e,t){return e>t?1:e<t?-1:0}function pd(e,t,n,r,a){return fd(e,t,n,r,a,0)}function dd(e,t,n,r,a,s){return fd(e,t,n,r,a,0,!1,s,!0)}function cd(e,t,n,r,a,s){return fd(e,t,n,r,a,s,!0)}function fd(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(yd);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=md(e,s,p[n]);if(i>=r){o=!0;break}if(t.score=t.score*gd(r,h,i),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&ud(u,t,yd))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function md(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function gd(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function yd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var bd=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Qa(e,"boxes","nonMaxSuppressionAsync"),i=Qa(t,"scores","nonMaxSuppressionAsync"),o=od(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=pd(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),xp(p,"int32")};var xd=ns({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Qa(e,"boxes","nonMaxSuppression"),o=Qa(t,"scores","nonMaxSuppression"),l=od(i,o,n,r,a,s),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=Ga.runKernel(Un,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}});var vd=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Qa(e,"boxes","nonMaxSuppressionAsync"),o=Qa(t,"scores","nonMaxSuppressionAsync"),l=od(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=cd(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:xp(d,"int32"),selectedScores:xp(c)}};var wd=ns({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Qa(e,"boxes","nonMaxSuppression"),o=Qa(t,"scores","nonMaxSuppression"),l=od(i,o,n,r,a,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=Ga.runKernel(Vn,u,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var kd=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Qa(e,"boxes","nonMaxSuppressionAsync"),o=Qa(t,"scores","nonMaxSuppressionAsync"),l=od(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=dd(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:xp(f,"int32"),validOutputs:Xh(m,"int32")}};var Id=ns({resizeBilinear_:function(e,t,n=!1,r=!1){let a=Qa(e,"images","resizeBilinear");ne(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),ne(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ne(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=gl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ga.runKernel(sr,o,l);return i?gl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Nd=ns({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=Qa(e,"images","resizeNearestNeighbor");ne(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),ne(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ne("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ne(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=gl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ga.runKernel(rr,o,l);return i?gl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Sd=ns({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=Qa(e,"image","transform","float32"),o=Qa(t,"transforms","transform","float32");ne(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ne(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ne(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Ga.runKernel(Dr,l,u)}});var Cd=ns({bandPart_:function(e,t,n){ne(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ne(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=Qa(e,"a","bandPart");ne(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=gl(Lh(0,s,1,"int32"),[-1,1]),l=Lh(0,i,1,"int32"),u=Wu(o,l),h=Qu(Su(u,Xh(+t,"int32")),bu(u,Xh(-n,"int32"))),p=yh([s,i],r.dtype);return gl(mp($p(gl(r,[-1,s,i])).map((e=>ru(h,e,p)))),a)}});var Td=ns({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ne(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)ne(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=hp(e,e.shape[0],0).map((e=>fp(e,[0])));ne(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ga.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=Uo(Vu(Uo(n[r],e)),n[r]);e=Wu(e,t)}return Vo(e,Dp(e,"euclidean"))})));return t?mp(n,0):n}});function $d(e,t=!1){return Ga.tidy((()=>{ne(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=cu(n),s=Zs(e),i=vp([[1]],[1,1]),o=Zs(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Ga.tidy((()=>{let t=wl(s,[e,e],[n-e,1]),l=Dp(t),u=wl(s,[e,e],[1,1]),h=ru(yu(u,0),vp([[-1]]),vp([[1]])),p=Wu(u,Uo(h,l)),d=Vo(t,p);o=1===d.shape[0]?Zs(i):xl([i,wl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=Lu(Vo(xi(h,p),l)),f=wl(s,[e,0],[n-e,r]),m=Uo(c,o),g=wi(o);if(0===e)s=Wu(f,xi(m,xi(g,f)));else{let t=Wu(f,xi(m,xi(g,f)));s=xl([wl(s,[0,0],[e,r]),t],0)}let y=wi(m),b=wl(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Wu(b,xi(xi(b,o),y));else{let t=Wu(b,xi(xi(b,o),y));a=xl([wl(a,[0,0],[n,e]),t],1)}return[o,s,a]})),$o([t,l,u])}return!t&&n>r&&(a=wl(a,[0,0],[n,r]),s=wl(s,[0,0],[r,r])),[a,s]}))}var _d,Ed=ns({qr_:function(e,t=!1){if(ne(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return $d(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=$p(gl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=$d(e,t);a.push(n),s.push(r)})),[gl(mp(a,0),e.shape),gl(mp(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(_d||(_d={}));var Ad=ns({computeWeightedLoss_:function(e,t,n=_d.SUM_BY_NONZERO_WEIGHTS){let r=Qa(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Qa(t,"weights","computeWeightedLoss"));let s=null==a?r:Uo(r,a);if(n===_d.NONE)return s;if(n===_d.SUM)return Vu(s);if(n===_d.MEAN){if(null==a)return oh(s);{let e=r.size/a.size,t=Vo(Vu(s),Vu(a));return e>1?Vo(t,Xh(e)):t}}if(n===_d.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Vo(Vu(s),Xh(r.size));{let e=Uo(a,bh(r.shape)),t=Js(Vu(gh(e,Xh(0))),"float32");return Vo(Vu(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var Fd=ns({absoluteDifference_:function(e,t,n,r=_d.SUM_BY_NONZERO_WEIGHTS){let a=Qa(e,"labels","absoluteDifference"),s=Qa(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Qa(n,"weights","absoluteDifference")),re(a.shape,s.shape,"Error in absoluteDifference: ");let o=Go(Wu(a,s));return Ad(o,i,r)}});var Rd=ns({cosineDistance_:function(e,t,n,r,a=_d.SUM_BY_NONZERO_WEIGHTS){let s=Qa(e,"labels","cosineDistance"),i=Qa(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Qa(r,"weights","cosineDistance")),re(s.shape,i.shape,"Error in cosineDistance: ");let l=Xh(1),u=Wu(l,Vu(Uo(s,i),n,!0));return Ad(u,o,a)}});var Dd=ns({hingeLoss_:function(e,t,n,r=_d.SUM_BY_NONZERO_WEIGHTS){let a=Qa(e,"labels","hingeLoss"),s=Qa(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Qa(n,"weights","hingeLoss")),re(a.shape,s.shape,"Error in hingeLoss: ");let o=Xh(1);a=Wu(Uo(Xh(2),a),o);let l=Bh(Wu(o,Uo(a,s)));return Ad(l,i,r)}});var Md=ns({huberLoss_:function(e,t,n,r=1,a=_d.SUM_BY_NONZERO_WEIGHTS){let s=Qa(e,"labels","huberLoss"),i=Qa(t,"predictions","huberLoss"),o=null;null!=n&&(o=Qa(n,"weights","huberLoss")),re(s.shape,i.shape,"Error in huberLoss: ");let l=Xh(r),u=Go(Wu(i,s)),h=uh(u,l),p=Wu(u,h),d=Bo(Uo(Xh(.5),dh(h)),Uo(l,p));return Ad(d,o,a)}});var Od=ns({logLoss_:function(e,t,n,r=1e-7,a=_d.SUM_BY_NONZERO_WEIGHTS){let s=Qa(e,"labels","logLoss"),i=Qa(t,"predictions","logLoss"),o=null;null!=n&&(o=Qa(n,"weights","logLoss")),re(s.shape,i.shape,"Error in logLoss: ");let l=Xh(1),u=Xh(r),h=Lu(Uo(s,$u(Bo(i,u)))),p=Uo(Wu(l,s),$u(Bo(Wu(l,i),u))),d=Wu(h,p);return Ad(d,o,a)}});var Ld=ns({meanSquaredError_:function(e,t,n,r=_d.SUM_BY_NONZERO_WEIGHTS){let a=Qa(e,"labels","meanSquaredError"),s=Qa(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Qa(n,"weights","meanSquaredError")),re(a.shape,s.shape,"Error in meanSquaredError: ");let o=cp(a,s);return Ad(o,i,r)}});var zd=ns({sigmoidCrossEntropy_:function(e,t,n,r=0,a=_d.SUM_BY_NONZERO_WEIGHTS){let s=Qa(e,"multiClassLabels","sigmoidCrossEntropy"),i=Qa(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Qa(n,"weights","sigmoidCrossEntropy")),re(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=Xh(r),t=Xh(1),n=Xh(.5);s=Bo(Uo(s,Wu(t,e)),Uo(n,e))}let l=function(e,t){let n=Qa(e,"labels","sigmoidCrossEntropyWithLogits"),r=Qa(t,"logits","sigmoidCrossEntropyWithLogits");re(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Bh(r),s=Uo(r,n),i=_u(uu(Lu(Go(r))));return Bo(Wu(a,s),i)}(s,i);return Ad(l,o,a)}});var Pd=ns({softmaxCrossEntropy_:function(e,t,n,r=0,a=_d.SUM_BY_NONZERO_WEIGHTS){let s=Qa(e,"onehotLabels","softmaxCrossEntropy"),i=Qa(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Qa(n,"weights","softmaxCrossEntropy")),re(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=Xh(r),t=Xh(1),n=Xh(s.shape[1]);s=Bo(Uo(s,Wu(t,e)),Vo(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Mu(((e,t,r)=>{let a=Zu(t,[n],!0),s=Wu(Js(t,"float32"),a);r([e,s]);let i=Lu(Uo(s,e));return{value:Vu(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=qu(e.shape,[n]);return[Uo(gl(e,s),Wu(Js(r,"float32"),uu(a))),Uo(gl(e,s),Wu(uu(a),Js(r,"float32")))]}}}))(e,t)}(s,i);return Ad(l,o,a)}}),Bd={fft:op,ifft:lp,rfft:pp,irfft:up},Wd={hammingWindow:ed,hannWindow:td,frame:nd,stft:rd},Vd={flipLeftRight:sd,resizeNearestNeighbor:Nd,resizeBilinear:Id,rotateWithOffset:id,cropAndResize:ad,nonMaxSuppression:ld,nonMaxSuppressionAsync:bd,nonMaxSuppressionWithScore:xd,nonMaxSuppressionWithScoreAsync:vd,nonMaxSuppressionPadded:wd,nonMaxSuppressionPaddedAsync:kd,transform:Sd},Ud={bandPart:Cd,gramSchmidt:Td,qr:Ed},Gd={absoluteDifference:Fd,computeWeightedLoss:Ad,cosineDistance:Rd,hingeLoss:Dd,huberLoss:Md,logLoss:Od,meanSquaredError:Ld,sigmoidCrossEntropy:zd,softmaxCrossEntropy:Pd},Hd=class extends to{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return $o(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Du(e,t)}dispose(){null!=this.iterations_&&$o(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Xh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Hd,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var jd=class extends Hd{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ga.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ga.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:To((()=>au(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:To((()=>au(r).variable(false)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;To((()=>{let e=Bo(Uo(s,this.rho),Uo(dh(a),1-this.rho)),t=Uo(Vo(dp(Bo(i,this.epsilon)),dp(Bo(s,this.epsilon))),a),n=Bo(Uo(i,this.rho),Uo(dh(t),1-this.rho));s.assign(e),i.assign(n);let o=Bo(Uo(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&($o(this.accumulatedGrads.map((e=>e.variable))),$o(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};jd.className="Adadelta",ro(jd);var qd=class extends Hd{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ga.registeredVariables[t];if(null==this.accumulatedGrads[n]){let e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:To((()=>fu(r.shape,this.initialAccumulatorValue).variable(e)))}}let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;To((()=>{let e=Bo(s,dh(a));s.assign(e);let t=Bo(Uo(Vo(a,dp(Bo(e,Ga.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&$o(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};qd.className="Adagrad",ro(qd);var Kd=class extends Hd{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],To((()=>{this.accBeta1=Xh(t).variable(),this.accBeta2=Xh(n).variable()})),null==r&&(this.epsilon=Ga.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);To((()=>{let n=Wu(1,this.accBeta1),r=Wu(1,this.accBeta2);t.forEach(((t,a)=>{let s=Ga.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:To((()=>au(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:To((()=>au(s).variable(false)))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=Bo(Uo(o,this.beta1),Uo(i,1-this.beta1)),h=Bo(Uo(l,this.beta2),Uo(dh(i),1-this.beta2)),p=Vo(u,n),d=Vo(h,r);o.assign(u),l.assign(h);let c=Bo(Uo(Vo(p,Bo(dp(d),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(Uo(this.accBeta1,this.beta1)),this.accBeta2.assign(Uo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&$o(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&$o(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),To((()=>{this.accBeta1.assign($h(this.beta1,this.iterations_+1)),this.accBeta2.assign($h(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Kd.className="Adam",ro(Kd);var Xd=class extends Hd{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],To((()=>{this.iteration=Xh(0).variable(),this.accBeta1=Xh(t).variable()})),null==r&&(this.epsilon=Ga.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);To((()=>{let n=Wu(1,this.accBeta1),r=Vo(-this.learningRate,Bo(Uo(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=Ga.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:au(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:au(s).variable(false)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=Bo(Uo(o,this.beta1),Uo(i,1-this.beta1)),h=Uo(l,this.beta2),p=Go(i),d=ih(h,p);o.assign(u),l.assign(d);let c=Bo(Uo(Vo(r,n),Vo(u,Bo(d,this.epsilon))),s);s.assign(c)})),this.iteration.assign(Bo(this.iteration,1)),this.accBeta1.assign(Uo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&$o(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&$o(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Xd.className="Adamax",ro(Xd);var Yd=class extends Hd{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Ga.registeredVariables[t];To((()=>{let e=Bo(Uo(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=_o(Xh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Yd.className="SGD",ro(Yd);var Jd=class extends Yd{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Xh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ga.registeredVariables[t];if(null==this.accumulations[n]){let e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:To((()=>au(r).variable(e)))}}let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&To((()=>{let e,t=Bo(Uo(this.m,a),s);e=this.useNesterov?Bo(Uo(this.c,Bo(s,Uo(t,this.m))),r):Bo(Uo(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&$o(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Jd.className="Momentum",ro(Jd);var Zd=class extends Hd{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ga.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ga.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:To((()=>au(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:To((()=>au(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:To((()=>au(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;To((()=>{let e=Bo(Uo(i,this.decay),Uo(dh(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=Bo(Uo(t,this.decay),Uo(s,1-this.decay)),l=Vo(Uo(s,this.learningRate),dp(Wu(e,Bo(dh(a),this.epsilon)))),u=Bo(Uo(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=Wu(r,u);r.assign(h)}else{let e=Bo(Uo(i,this.decay),Uo(dh(s),1-this.decay)),t=Bo(Uo(o,this.momentum),Vo(Uo(s,this.learningRate),dp(Bo(e,this.epsilon))));i.assign(e),o.assign(t);let n=Wu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&$o(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&$o(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&$o(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Zd.className="RMSProp",ro(Zd);var Qd=class{static sgd(e){return new Yd(e)}static momentum(e,t,n=!1){return new Jd(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Zd(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Kd(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new jd(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Xd(e,t,n,r,a)}static adagrad(e,t=.1){return new qd(e,t)}},ec={sgd:Qd.sgd,momentum:Qd.momentum,adadelta:Qd.adadelta,adagrad:Qd.adagrad,rmsprop:Qd.rmsprop,adamax:Qd.adamax,adam:Qd.adam},tc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function nc(){return new Promise((e=>tc((()=>e()))))}var rc={};function ac(e,t){let n=e[0].length;e.forEach(((e,t)=>{ne(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ne(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)ne(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function sc(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}v(rc,{ERF_A1:()=>yc,ERF_A2:()=>bc,ERF_A3:()=>xc,ERF_A4:()=>vc,ERF_A5:()=>wc,ERF_P:()=>gc,PARALLELIZE_THRESHOLD:()=>ic,SELU_SCALE:()=>mc,SELU_SCALEALPHA:()=>fc,applyActivation:()=>qp,assertAndGetBroadcastShape:()=>tu,assertAxesAreInnerMostDims:()=>Ku,assertParamsConsistent:()=>ac,assignToTypedArray:()=>_c,axesAreInnerMostDims:()=>Gu,calculateShapes:()=>Oi,combineLocations:()=>Hu,complexWithEvenIndex:()=>Cc,complexWithOddIndex:()=>Tc,computeConv2DInfo:()=>il,computeConv3DInfo:()=>ol,computeDefaultPad:()=>ll,computeDilation2DInfo:()=>rl,computeOptimalWindowSize:()=>oc,computeOutAndReduceShapes:()=>ju,computeOutShape:()=>sc,computePool2DInfo:()=>al,computePool3DInfo:()=>sl,convertConv2DDataFormat:()=>ml,eitherStridesOrDilationsAreOne:()=>fl,expandShapeToKeepDim:()=>qu,exponent:()=>Ac,exponents:()=>Ec,fromStringArrayToUint8:()=>zc,fromUint8ToStringArray:()=>Lc,getAxesPermutation:()=>Xu,getBroadcastDims:()=>Ql,getComplexWithIndex:()=>$c,getFusedBiasGradient:()=>jp,getFusedDyActivation:()=>Hp,getImageCenter:()=>lc,getInnerMostAxes:()=>Ju,getPermuted:()=>hc,getReductionAxes:()=>eu,getReshaped:()=>uc,getReshapedPermuted:()=>pc,getSliceBeginCoords:()=>dc,getSliceSize:()=>cc,getUndoAxesPermutation:()=>Yu,log:()=>Ic,mergeRealAndImagArrays:()=>Nc,prepareAndValidate:()=>Fi,prepareSplitSize:()=>Fc,segment_util:()=>Rc,shouldFuse:()=>Kp,slice_util:()=>Li,splitRealAndImagArrays:()=>Sc,tupleValuesAreOne:()=>cl,upcastType:()=>Ra,validateInput:()=>Mi,validateUpdateShape:()=>Di,warn:()=>kc});var ic=30;function oc(e){return e<=ic?e:Ae(e,Math.floor(Math.sqrt(e)))}function lc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function uc(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function hc(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function pc(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function dc(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function cc(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var fc=1.7580993408473768,mc=1.0507009873554805,gc=.3275911,yc=.254829592,bc=-.284496736,xc=1.421413741,vc=-1.453152027,wc=1.061405429;function kc(...e){Ge().getBool("IS_TEST")||console.warn(...e)}function Ic(...e){Ge().getBool("IS_TEST")||console.log(...e)}function Nc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Sc(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Cc(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Tc(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function $c(e,t){return{real:e[2*t],imag:e[2*t+1]}}function _c(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ec(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Ac(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Fc(e,t,n=0){let r=[];if("number"==typeof t)ne(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{ne(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}ne(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}var Rc={};function Dc(e,t){let n,r=!1;for(e<=ic?(n=e,r=!0):n=Ae(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ae(e,n+1);return n}function Mc(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Oc(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function Lc(e){try{return e.map((e=>ua(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function zc(e){return e.map((e=>la(e)))}v(Rc,{collectGatherOpShapeInfo:()=>Oc,computeOutShape:()=>Mc,segOpComputeOptimalWindowSize:()=>Dc});var Pc={};v(Pc,{nonMaxSuppressionV3Impl:()=>pd,nonMaxSuppressionV4Impl:()=>dd,nonMaxSuppressionV5Impl:()=>cd,whereImpl:()=>Ep});var Bc={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,gp(Js(n,"float32"),-1))}}},Wc={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=dh(Js(n,"float32")),r=dp(Wu(Xh(1),t));return Lu(Vo(e,r))}}}},Vc={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=dp(Wu(dh(Js(n,"float32")),1));return Vo(e,t)}}}},Uc={kernelName:Ze,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=e,r=eu(n.shape,a);return r.length>0&&(t=Vu(t,r)),gl(t,n.shape)},b:()=>{let t=e,n=eu(r.shape,a);return n.length>0&&(t=Vu(t,n)),gl(t,r.shape)}}}},Gc={kernelName:Qe,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Hc={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>au(n)}}},jc={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>au(n)}}},qc={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,dp(Wu(Xh(1),dh(Js(n,"float32")))))}}},Kc={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=dp(Bo(Xh(1),dh(Js(n,"float32"))));return Vo(e,t)}}}},Xc={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=Bo(dh(n),dh(r)),s=Uo(e,Vo(r,t)),i=eu(n.shape,a);return i.length>0&&(s=Vu(s,i)),gl(s,n.shape)},b:()=>{let t=Bo(dh(n),dh(r)),s=Lu(Uo(e,Vo(n,t))),i=eu(r.shape,a);return i.length>0&&(s=Vu(s,i)),gl(s,r.shape)}}}},Yc={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,Bo(dh(Js(n,"float32")),1))}}},Jc={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,Wu(Xh(1),dh(Js(n,"float32"))))}}};var Zc=ns({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Qa(e,"dy","avgPool3dGrad"),o=Qa(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=gl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ne(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ne(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=s&&ne(ue(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Ga.runKernel(dt,p,d);return h?gl(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Qc={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Zc(e,r,a,s,i,o)}}};var ef=ns({avgPoolGrad_:function(e,t,n,r,a){let s=Qa(e,"dy","avgPoolGrad"),i=Qa(t,"input","avgPoolGrad");ne(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=gl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=gl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ne(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ne(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=Ga.runKernel(ht,h,p);return u?gl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),tf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>ef(e,r,a,s,i)}}},nf={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>xi(e,a,!1,!1),b:()=>xi(e,r,!0,!1)}:s&&!i?{a:()=>xi(a,e,!1,!0),b:()=>xi(r,e,!1,!1)}:{a:()=>xi(a,e,!0,!0),b:()=>xi(e,r,!0,!0)}:{a:()=>xi(e,a,!1,!0),b:()=>xi(r,e,!0,!1)}}},rf={kernelName:ft,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Ch(e,r,a)}}},af={kernelName:gt,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Vu(e,o,!0)}}},sf={kernelName:yt,gradFunc:e=>({x:()=>e.clone()})},of={kernelName:bt,gradFunc:e=>({x:()=>au(e)})},lf={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>ru(Qu(bu(r,a),Su(r,s)),e,au(e))}}},uf={kernelName:wt,inputsToSave:["x"],gradFunc:Bc.gradFunc},hf={kernelName:kt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=ge(a,t[0].shape)[0],i=r.map((e=>e[s]));return hp(e,i,s).map((e=>()=>e))}},pf={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return ne(cl(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Bl(r.shape,e,a,i,o,l),filter:()=>Gp(r,e,a.shape,i,o,l)}}},df={kernelName:St,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>zl(e,a,s,i,o,1,l),filter:()=>Gp(e,r,a.shape,s,i,o,l)}}};var cf=ns({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=gl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=gl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ne(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),ne(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ne(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ne(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),ne(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Ga.runKernel(Tt,o,l)}}),ff={kernelName:Ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;ne(cl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Ul(i.shape,e,o,a,s),filter:()=>cf(i,e,o.shape,a,s)}}},mf={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(Lu(ep(Js(n,"float32"))),e)}}},gf={kernelName:Et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(tp(Js(n,"float32")),e)}}},yf={kernelName:At,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Xu([a],r.rank),n=ql(e,a,s,!i);return null!=t&&(n=wi(n,t)),n}}}},bf={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ne(cl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return ne(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ne(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ne(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ne(fl(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&ne(ue(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Jp(l.shape,e,u,a,s,r,i),filter:()=>Yp(l,e,u.shape,a,s,r,i)}}},xf={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Ga.runKernel(Bt,s,n),filter:()=>Ga.runKernel(Wt,i,n)}}},vf={kernelName:Ut,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Ga.runKernel(Gt,r)}}},wf={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Uo(uu(Lu(dh(n))),2/Math.sqrt(Math.PI));return{x:()=>Uo(e,r)}}},kf={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,n)}}},If={kernelName:Kt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>gl(e,n.shape)}}},Nf={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,uu(n))}}},Sf={kernelName:Qt,gradFunc:e=>({x:()=>au(e)})},Cf={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=Vo(e,Js(r,"float32")),s=eu(n.shape,a);return s.length>0?gl(Vu(t,s),n.shape):t},b:()=>{let t=Uo(e,Js(n,"float32")),s=eu(r.shape,a);s.length>0&&(t=gl(Vu(t,s),r.shape));let i=dh(r);return Lu(Vo(t,Js(i,"float32")))}}}},Tf={kernelName:tn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?Xh(1):o,u=eu(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=Wu(a,s),d=Uo(e,l),c=Kh(Bo(i,Xh(r))),f=Uo(Uo(Uo(c,c),c),Xh(-.5));return{x:()=>1===s.rank?gl(Uo(Uo(e,du(gl(c,[1,1,1,s.shape[0]]),h)),l),a.shape):gl(Uo(Uo(e,c),l),a.shape),mean:()=>{let e=Uo(Uo(c,Xh(-1)),d);return 1===s.rank&&(e=Vu(e,u)),gl(e,s.shape)},variance:()=>{let e=Uo(Uo(f,p),d);return 1===s.rank&&(e=Vu(e,u)),gl(e,s.shape)},scale:()=>{let t=Uo(p,c),n=Uo(e,t);return 1===s.rank&&(n=Vu(n,u)),gl(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Vu(t,u)),gl(t,s.shape)}}}},$f={kernelName:nn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=ge(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=_f(0,l),d=_f(l+1,l+1+h),c=Ef([o,[n],u]),f=gl(e,c),m=gl(a,[n]),g=Ef([[l],p,d]),y=wi(f,g),b=Tp(y,m,r.shape[i]),x=Yu(g);return b=wi(b,x),b},indices:()=>a}}};function _f(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ef(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Af={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>au(n),b:()=>au(r)}}},Ff={kernelName:on,gradFunc:e=>({x:()=>Js(e,"float32")})},Rf={kernelName:hn,gradFunc:e=>({x:()=>au(e)})},Df={kernelName:pn,gradFunc:e=>({x:()=>au(e)})},Mf={kernelName:dn,gradFunc:e=>({x:()=>au(e)})},Of={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=yu(r,0);return{x:()=>ru(s,e,Uo(e,a))}}},Lf={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,Bo(n,1))}}},zf={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,Js(n,"float32"))}}},Pf={kernelName:kn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=uu(r);return Wu(e,Uo(Vu(e,a,!0),t))}}}};var Bf=ns({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Ga.runKernel(Nn,o,l)}}),Wf={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>Bf(r,a,e,s,i,o,l)}}};function Vf(e,t,n,r){return t.rank<n.rank&&(t=gl(t,qu(t.shape,r))),e.rank<n.rank&&(e=gl(e,qu(e.shape,r))),{x:()=>Uo(e,Js(nu(n,t),e.dtype))}}var Uf={kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=Vf(e,t[1],s,ge(a,s.shape));return{x:()=>i.x()}}},Gf={kernelName:Cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Uo(e,Js(bu(n,r),"float32")),b:()=>Uo(e,Js(Nu(n,r),"float32"))}}};var Hf=ns({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Qa(e,"dy","maxPool3dGrad"),l=Qa(t,"input","maxPool3dGrad"),u=Qa(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=gl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=gl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=gl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ne(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),ne(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),ne(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&ne(ue(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Ga.runKernel(En,f,m);return c?gl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),jf={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Hf(e,r,a,s,i,o,l)}}};var qf=ns({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Qa(e,"dy","maxPoolGrad"),l=Qa(t,"input","maxPoolGrad"),u=Qa(n,"output","maxPoolGrad");ne(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ne(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ne(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&ne(ue(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Ga.runKernel($n,h,p)}}),Kf={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>qf(e,r,a,s,i,o)}}},Xf={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ge(a,r.shape),i=ie(ju(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=gl(e,t);return Vo(Uo(n,bh(r.shape,"float32")),i)}}}},Yf={kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=Vf(e,i,s,ge(a,s.shape));return{x:()=>o.x()}}},Jf={kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Uo(e,Js(Su(n,r),"float32")),b:()=>Uo(e,Js(yu(n,r),"float32"))}}},Zf={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>wl(e,s,r.shape)}}},Qf={kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=eu(n.shape,a);return t.length>0?gl(Vu(e,t),n.shape):e},b:()=>{let t=Uo(e,Lu(mu(Vo(n,r)))),s=eu(r.shape,a);return s.length>0?gl(Vu(t,s),r.shape):t}}}},em={kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=Uo(e,Js(r,"float32")),s=eu(n.shape,a);return s.length>0?gl(Vu(t,s),n.shape):t},b:()=>{let t=Uo(e,Js(n,"float32")),s=eu(r.shape,a);return s.length>0?gl(Vu(t,s),r.shape):t}}}},tm={kernelName:Pn,gradFunc:e=>({x:()=>Lu(e)})},nm={kernelName:Hn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>yh(n.shape,"float32")}}},rm={kernelName:Gn,gradFunc:e=>({x:()=>au(e)})},am={kernelName:jn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return $p(e,r).map((e=>()=>e))}},sm={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>wl(e,s,r.shape)}}},im={kernelName:Xn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=tu(s.shape,i.shape);return{a:()=>{let t=Js(i,"float32"),n=Uo(e,Uo(t,$h(s,Wu(t,Xh(1))))),r=eu(s.shape,o);return r.length>0&&(n=Vu(n,r)),gl(n,s.shape)},b:()=>{let t=yu(s,0),n=ru(t,$u(s),au(s)),r=Uo(e,Uo(a,n)),l=eu(i.shape,o);return l.length>0&&(r=Vu(r,l)),gl(r,i.shape)}}}},om={kernelName:Yn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=yu(n,0);return{x:()=>ru(a,e,Uo(e,r)),alpha:()=>{let t=ru(a,au(e),Uo(e,n)),s=eu(r.shape,e.shape);return s.length>0&&(t=Vu(t,s)),gl(t,r.shape)}}}},lm={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=Vo(e,Js(r,"float32")),s=eu(n.shape,a);return s.length>0?gl(Vu(t,s),n.shape):t},b:()=>{let t=Uo(e,Js(n,"float32")),s=eu(r.shape,a);s.length>0&&(t=gl(Vu(t,s),r.shape));let i=dh(r);return Lu(Vo(t,Js(i,"float32")))}}}},um={kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,Lu(dh(n)))}}},hm={kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Uo(Su(n,6),gp(n));return{x:()=>Uo(e,Js(r,"float32"))}}},pm={kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,Js(gp(n),"float32"))}}},dm={kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>gl(e,n.shape)}}},cm={kernelName:sr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ga.runKernel(ir,a,n)}}},fm={kernelName:rr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ga.runKernel(ar,a,n)}}},mm={kernelName:lr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ge(r,e.shape);return{x:()=>Vh(e,a)}}},gm={kernelName:ur,gradFunc:e=>({x:()=>au(e)})},ym={kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Lu(Vo(e,Uo($h(n,1.5),2)))}}},bm={kernelName:dr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Js(au(n),"float32"),t:()=>Uo(e,Js(n,e.dtype)),e:()=>Uo(e,Js(eh(n),e.dtype))}}},xm={kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=yu(n,Xh(0)),r=Xh(fc),a=Xh(mc),s=Uo(e,a),i=Uo(Uo(e,r),uu(Js(n,"float32")));return ru(t,s,i)}}}},vm={kernelName:br,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,Uo(n,Wu(Xh(1),n)))}}},wm={kernelName:yr,gradFunc:e=>({x:()=>au(e)})},km={kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(Hl(Js(n,"float32")),e)}}},Im={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(jl(Js(n,"float32")),e)}}},Nm={kernelName:fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Zi(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>wh(e,u)}}},Sm={kernelName:Nr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=Uo(e,r);return{logits:()=>Wu(s,Uo(Vu(s,[a],true),r))}}},Cm={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,vl(n))}}},Tm={kernelName:kr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Nl(e,r,a)}}},$m={kernelName:Ir,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>xl(e,r)}}},_m={kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,Uo(dp(Js(n,"float32")),2))}}},Em={kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,Uo(Js(n,"float32"),2))}}},Am={kernelName:Sr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xh(2);return{a:()=>Uo(e,Uo(a,Wu(n,r))),b:()=>Uo(e,Uo(a,Wu(r,n)))}}},Fm={kernelName:Br,gradFunc:e=>({x:()=>au(e)})},Rm={kernelName:Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(n.shape,r.shape);return{a:()=>{let t=e,r=eu(n.shape,a);return r.length>0&&(t=Vu(t,r)),gl(t,n.shape)},b:()=>{let t=e,n=eu(r.shape,a);return n.length>0&&(t=Vu(t,n)),gl(Lu(t),r.shape)}}}},Dm={kernelName:wr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ge(s,r.shape).forEach((e=>{a[e]=1}));let i=gl(e,a),o=Uo(i,bh(r.shape,"float32"));return{x:()=>o}}},Mm={kernelName:Er,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vo(e,dh(Hl(n)))}}},Om={kernelName:Ar,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(Wu(Xh(1),dh(n)),e)}}},Lm={kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=au(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Bo(t,wl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Bo(t,wl(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Bo(t,wl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Bo(t,wl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},zm={kernelName:Mr,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Yu(a);return{x:()=>wi(e,s)}}},Pm={kernelName:Lr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>mp(e,a)}}},Bm={kernelName:zr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=ih(t,au(t)),r=gu(e,n),a=bu(t,Xh(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=hu(a,e+1);a=Qu(a,bh(r.shape,"bool"));let i=au(r);return ru(a,r,i)}(e,n)}}};var Wm={kernelName:Pr,gradFunc:e=>({x:()=>au(e)})},Vm=[Bc,Wc,Vc,Uc,Gc,Hc,jc,qc,Kc,Xc,Yc,Jc,Qc,tf,nf,rf,af,sf,of,lf,uf,hf,df,pf,ff,mf,gf,yf,bf,xf,lm,vf,wf,kf,If,Nf,Cf,Sf,Tf,$f,Af,Ff,Rf,Df,Mf,Of,Lf,zf,Pf,Wf,Uf,Uf,Gf,jf,Kf,Xf,Yf,Jf,Zf,Qf,em,tm,nm,rm,am,sm,sm,im,om,um,hm,pm,dm,cm,fm,mm,gm,ym,bm,xm,vm,wm,km,Im,Nm,Sm,Cm,Tm,Tm,$m,$m,_m,Am,Em,Fm,Rm,Dm,Mm,Om,Lm,zm,Pm,Bm,Wm];for(let e of Vm)Zr(e);Na().prototype.abs=function(){return this.throwIfDisposed(),Go(this)},Na().prototype.acos=function(){return this.throwIfDisposed(),Ho(this)},Na().prototype.acosh=function(){return this.throwIfDisposed(),jo(this)},Na().prototype.add=function(e){return this.throwIfDisposed(),Bo(this,e)},Na().prototype.all=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)},Na().prototype.any=function(e,t){return this.throwIfDisposed(),Xo(this,e,t)},Na().prototype.argMax=function(e){return this.throwIfDisposed(),Yo(this,e)},Na().prototype.argMin=function(e){return this.throwIfDisposed(),Jo(this,e)},Na().prototype.asScalar=function(){return this.throwIfDisposed(),ne(1===this.size,(()=>"The array must have only 1 element.")),gl(this,[])},Na().prototype.asType=function(e){return this.throwIfDisposed(),Js(this,e)},Na().prototype.as1D=function(){return this.throwIfDisposed(),gl(this,[this.size])},Na().prototype.as2D=function(e,t){return this.throwIfDisposed(),gl(this,[e,t])},Na().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),gl(this,[e,t,n])},Na().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),gl(this,[e,t,n,r])},Na().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),gl(this,[e,t,n,r,a])},Na().prototype.asin=function(){return this.throwIfDisposed(),Zo(this)},Na().prototype.asinh=function(){return this.throwIfDisposed(),Qo(this)},Na().prototype.atan=function(){return this.throwIfDisposed(),el(this)},Na().prototype.atan2=function(e){return this.throwIfDisposed(),tl(this,e)},Na().prototype.atanh=function(){return this.throwIfDisposed(),nl(this)},Na().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),yl(this,e,t,n,r)},Na().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)},Na().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Cl(this,e,t,n,r,a)},Na().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Al(this,e)},Na().prototype.cast=function(e){return this.throwIfDisposed(),Js(this,e)},Na().prototype.ceil=function(){return this.throwIfDisposed(),Fl(this)},Na().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Rl(this,e,t)},Na().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ia&&(e=[e]),xl([this,...e],t)},Na().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Pl(this,e,t,n,r,a,s)},Na().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Wl(this,e,t,n,r,a)},Na().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),zl(this,e,t,n,r,a,s)},Na().prototype.cos=function(){return this.throwIfDisposed(),Hl(this)},Na().prototype.cosh=function(){return this.throwIfDisposed(),jl(this)},Na().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ql(this,e,t,n)},Na().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Xl(this,e,t)},Na().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Yl(this,e,t,n,r,a,s)},Na().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Zl(this,e,t,n,r,a)},Na().prototype.divNoNan=function(e){return this.throwIfDisposed(),su(this,e)},Na().prototype.div=function(e){return this.throwIfDisposed(),Vo(this,e)},Na().prototype.dot=function(e){return this.throwIfDisposed(),iu(this,e)},Na().prototype.elu=function(){return this.throwIfDisposed(),ou(this)},Na().prototype.equal=function(e){return this.throwIfDisposed(),nu(this,e)},Na().prototype.erf=function(){return this.throwIfDisposed(),lu(this)},Na().prototype.exp=function(){return this.throwIfDisposed(),uu(this)},Na().prototype.expandDims=function(e){return this.throwIfDisposed(),hu(this,e)},Na().prototype.expm1=function(){return this.throwIfDisposed(),pu(this)},Na().prototype.fft=function(){return this.throwIfDisposed(),op(this)},Na().prototype.flatten=function(){return this.throwIfDisposed(),gl(this,[this.size])},Na().prototype.floor=function(){return this.throwIfDisposed(),mu(this)},Na().prototype.floorDiv=function(e){return this.throwIfDisposed(),Wo(this,e)},Na().prototype.gather=function(e,t){return this.throwIfDisposed(),gu(this,e,t)},Na().prototype.greaterEqual=function(e){return this.throwIfDisposed(),bu(this,e)},Na().prototype.greater=function(e){return this.throwIfDisposed(),yu(this,e)},Na().prototype.ifft=function(){return this.throwIfDisposed(),lp(this)},Na().prototype.irfft=function(){return this.throwIfDisposed(),up(this)},Na().prototype.isFinite=function(){return this.throwIfDisposed(),vu(this)},Na().prototype.isInf=function(){return this.throwIfDisposed(),wu(this)},Na().prototype.isNaN=function(){return this.throwIfDisposed(),ku(this)},Na().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Iu(this,e)},Na().prototype.lessEqual=function(e){return this.throwIfDisposed(),Su(this,e)},Na().prototype.less=function(e){return this.throwIfDisposed(),Nu(this,e)},Na().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Tu(this,e,t,n,r)},Na().prototype.logSigmoid=function(){return this.throwIfDisposed(),Pu(this)},Na().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Uu(this,e)},Na().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Zu(this,e,t)},Na().prototype.log=function(){return this.throwIfDisposed(),$u(this)},Na().prototype.log1p=function(){return this.throwIfDisposed(),_u(this)},Na().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Qu(this,e)},Na().prototype.logicalNot=function(){return this.throwIfDisposed(),eh(this)},Na().prototype.logicalOr=function(e){return this.throwIfDisposed(),th(this,e)},Na().prototype.logicalXor=function(e){return this.throwIfDisposed(),nh(this,e)},Na().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),xi(this,e,t,n)},Na().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),rh(this,e,t,n,r)},Na().prototype.max=function(e,t){return this.throwIfDisposed(),Bu(this,e,t)},Na().prototype.maximum=function(e){return this.throwIfDisposed(),ih(this,e)},Na().prototype.mean=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},Na().prototype.min=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},Na().prototype.minimum=function(e){return this.throwIfDisposed(),uh(this,e)},Na().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),hh(this,e,t)},Na().prototype.mod=function(e){return this.throwIfDisposed(),ph(this,e)},Na().prototype.mul=function(e){return this.throwIfDisposed(),Uo(this,e)},Na().prototype.neg=function(){return this.throwIfDisposed(),Lu(this)},Na().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Dp(this,e,t,n)},Na().prototype.notEqual=function(e){return this.throwIfDisposed(),gh(this,e)},Na().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),vi(this,e,t,n)},Na().prototype.onesLike=function(){return this.throwIfDisposed(),xh(this)},Na().prototype.pad=function(e,t){return this.throwIfDisposed(),wh(this,e,t)},Na().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Th(this,e,t,n,r,a)},Na().prototype.pow=function(e){return this.throwIfDisposed(),$h(this,e)},Na().prototype.prelu=function(e){return this.throwIfDisposed(),_h(this,e)},Na().prototype.prod=function(e,t){return this.throwIfDisposed(),Eh(this,e,t)},Na().prototype.reciprocal=function(){return this.throwIfDisposed(),Ph(this)},Na().prototype.relu=function(){return this.throwIfDisposed(),Bh(this)},Na().prototype.relu6=function(){return this.throwIfDisposed(),Wh(this)},Na().prototype.reshapeAs=function(e){return this.throwIfDisposed(),gl(this,e.shape)},Na().prototype.reshape=function(e){return this.throwIfDisposed(),gl(this,e)},Na().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Id(this,e,t,n)},Na().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Nd(this,e,t,n)},Na().prototype.reverse=function(e){return this.throwIfDisposed(),Vh(this,e)},Na().prototype.rfft=function(){return this.throwIfDisposed(),pp(this)},Na().prototype.round=function(){return this.throwIfDisposed(),qh(this)},Na().prototype.rsqrt=function(){return this.throwIfDisposed(),Kh(this)},Na().prototype.selu=function(){return this.throwIfDisposed(),Yh(this)},Na().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Jh(this,e,t,n,r,a,s)},Na().prototype.sigmoid=function(){return this.throwIfDisposed(),vl(this)},Na().prototype.sign=function(){return this.throwIfDisposed(),Qh(this)},Na().prototype.sin=function(){return this.throwIfDisposed(),ep(this)},Na().prototype.sinh=function(){return this.throwIfDisposed(),tp(this)},Na().prototype.slice=function(e,t){return this.throwIfDisposed(),wl(this,e,t)},Na().prototype.softmax=function(e){return this.throwIfDisposed(),ip(this,e)},Na().prototype.softplus=function(){return this.throwIfDisposed(),zu(this)},Na().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Ch(this,e,t)},Na().prototype.split=function(e,t){return this.throwIfDisposed(),hp(this,e,t)},Na().prototype.sqrt=function(){return this.throwIfDisposed(),dp(this)},Na().prototype.square=function(){return this.throwIfDisposed(),dh(this)},Na().prototype.squaredDifference=function(e){return this.throwIfDisposed(),cp(this,e)},Na().prototype.squeeze=function(e){return this.throwIfDisposed(),fp(this,e)},Na().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ia?[this,e]:[this,...e];return mp(n,t)},Na().prototype.step=function(e){return this.throwIfDisposed(),gp(this,e)},Na().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),yp(this,e,t,n,r,a,s,i,o)},Na().prototype.sub=function(e){return this.throwIfDisposed(),Wu(this,e)},Na().prototype.sum=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},Na().prototype.tan=function(){return this.throwIfDisposed(),bp(this)},Na().prototype.tanh=function(){return this.throwIfDisposed(),kl(this)},Na().prototype.tile=function(e){return this.throwIfDisposed(),du(this,e)},Na().prototype.toBool=function(){return this.throwIfDisposed(),Js(this,"bool")},Na().prototype.toFloat=function(){return this.throwIfDisposed(),Js(this,"float32")},Na().prototype.toInt=function(){return this.throwIfDisposed(),Js(this,"int32")},Na().prototype.topk=function(e,t){return this.throwIfDisposed(),Np(this,e,t)},Na().prototype.transpose=function(e){return this.throwIfDisposed(),wi(this,e)},Na().prototype.unique=function(e){return this.throwIfDisposed(),Cp(this,e)},Na().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Tp(this,e,t)},Na().prototype.unstack=function(e){return this.throwIfDisposed(),$p(this,e)},Na().prototype.where=function(e,t){return this.throwIfDisposed(),ru(e,this,t)},Na().prototype.zerosLike=function(){return this.throwIfDisposed(),au(this)};var Um,Gm={};function Hm(){return null==Um&&(Um=zo().epsilon()),Um}v(Gm,{maxNorm:()=>Cg,minMaxNorm:()=>_g,nonNeg:()=>$g,unitNorm:()=>Tg});var jm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jm.prototype)}},qm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qm.prototype)}},Km=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Km.prototype)}},Xm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xm.prototype)}},Ym=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ym.prototype)}};function Jm(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function Zm(e,t){if(!e)throw new Ym(t)}function Qm(e,t){let n=0;for(let r of e)r===t&&n++;return n}function eg(e){return 1===e.length?e[0]:e}function tg(e){return Array.isArray(e)?e:[e]}function ng(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function rg(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var ag={};function sg(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ig(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>ig(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?ig(t):e[n]=t.value)}}}function og(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in ag)a=ag[s];else if(a=t[s],null==a)throw new Km(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new Km(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in ag?[i,o]=ag.className:l in t&&([i,o]=t[l]),null==i)throw new Km(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(ag))e[t]=ag[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},ag);for(let e of Object.keys(n))ag[e]=n[e];ig(s.config);let r=o(i,s.config,n,a);return ag=Object.assign({},t),r}{let e=Object.assign({},ag);for(let e of Object.keys(n))ag[e]=n[e];let t=new i(s.config);return ag=Object.assign({},e),t}}}function lg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ug(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function hg(e){if(null==e)throw new Km(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function pg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Km(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function dg(e,t,n=0,r=1/0){return Zm(n>=0),Zm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function cg(e,t){Array.isArray(e)?(ra.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>cg(e,`element ${n+1} of ${t}`)))):ra.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${fg(e)}.`))}function fg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>fg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function mg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function gg(e,t){return To((()=>dp(Vu(Uo(e,e),t,!0))))}var yg=class extends eo.Serializable{getConfig(){return{}}},bg=class extends yg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return To((()=>{let t=gg(e,this.axis),n=Rl(t,0,this.maxValue);return Uo(e,Vo(n,Bo(Hm(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};bg.className="MaxNorm",eo.registerClass(bg);var xg=class extends yg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return To((()=>Vo(e,Bo(Hm(),gg(e,this.axis)))))}getConfig(){return{axis:this.axis}}};xg.className="UnitNorm",eo.registerClass(xg);var vg=class extends yg{apply(e){return Bh(e)}};vg.className="NonNeg",eo.registerClass(vg);var wg=class extends yg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return To((()=>{let t=gg(e,this.axis),n=Bo(Uo(this.rate,Rl(t,this.minValue,this.maxValue)),Uo(1-this.rate,t));return Uo(e,Vo(n,Bo(Hm(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};wg.className="MinMaxNorm",eo.registerClass(wg);var kg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ig(e){return sg(e)}function Ng(e,t={}){return og(e,eo.SerializationMap.getMap().classNameMap,t,"constraint")}function Sg(e){if(null==e)return null;if("string"==typeof e){return Ng({className:e in kg?kg[e]:e,config:{}})}return e instanceof yg?e:Ng(e)}function Cg(e){return new bg(e)}function Tg(e){return new xg(e)}function $g(){return new vg}function _g(e){return new wg(e)}var Eg={};v(Eg,{constant:()=>Py,glorotNormal:()=>jy,glorotUniform:()=>Hy,heNormal:()=>qy,heUniform:()=>Ky,identity:()=>Uy,leCunNormal:()=>Xy,leCunUniform:()=>Yy,ones:()=>zy,orthogonal:()=>Jy,randomNormal:()=>Wy,randomUniform:()=>By,truncatedNormal:()=>Vy,varianceScaling:()=>Gy,zeros:()=>Ly});var Ag=["channelsFirst","channelsLast"],Fg=["nearest","bilinear"],Rg=["valid","same","causal"],Dg=["max","avg"],Mg=["sum","mul","concat","ave"],Og=new Map;function Lg(e){pg(Ag,"DataFormat",e)}function zg(e){pg(Rg,"PaddingMode",e)}function Pg(e){pg(Dg,"PoolMode",e)}var Bg=[],Wg="/";function Vg(e,t){Bg.push(e);try{let e=t();return Bg.pop(),e}catch(e){throw Bg.pop(),e}}function Ug(e){if(!jg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Bg.length?"":Bg.join(Wg)+Wg)+e}function Gg(e){if(!jg(e))throw new Error("Not a valid tensor name: '"+e+"'");Og.has(e)||Og.set(e,0);let t=Og.get(e);if(Og.set(e,Og.get(e)+1),t>0){let n=`${e}_${t}`;return Og.set(n,1),n}return e}var Hg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jg(e){return!!e.match(Hg)}function qg(e){return e===parseInt(e.toString(),10)}function Kg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Xg(e){return xp(e=Array.isArray(e)?new Float32Array(e):e)}function Yg(e){return lh(Xg(e)).dataSync()[0]}function Jg(e){return Bu(Xg(e)).dataSync()[0]}function Zg(e,t){if(t<e)throw new Km(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Qg(e,t){return e.asType(t)}function ey(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function ty(e,t,n){return To((()=>{switch(e.rank){case 1:return np(e,t,n);case 2:return rp(e,[t,0],[n,e.shape[1]]);case 3:return ap(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return sp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return wl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return wl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Km(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ny(e,t,n){return To((()=>{switch(e.rank){case 1:return np(e,t,n);case 2:return rp(e,[0,t],[e.shape[0],n]);case 3:return ap(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return sp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Km(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ry(e,t,n,r){return To((()=>{switch(e.rank){case 1:return np(e,t,n);case 2:switch(r){case 1:return ty(e,t,n);case 2:return ny(e,t,n);default:throw new Km(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ty(e,t,n);case 2:return ap(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ny(e,t,n);default:throw new Km(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ty(e,t,n);case 2:return sp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return sp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ny(e,t,n);default:throw new Km(`The axis is not within the rank of the tensor ${r}`)}default:throw new Km(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ay(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),xl(e,t)}function sy(e,t){switch(e.rank){case 1:return Dl([e,t]);case 2:return Ml([e,t],0);case 3:return Ol([e,t],0);case 4:return Ll([e,t],0);default:throw new Km(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function iy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Km(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return du(e,t)}function oy(e,t=0,n=1,r,a){return Mh(e,t,n,r,a)}function ly(e,t,n,r){if(e.rank<2||t.rank<2)throw new Xm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Xm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){let a=!1,s=!1;return Up.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?py(e.rank,r,"channelsLast"):null,activation:n})}{let a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(h).reshape([l,-1]);let p=[...a,...u],d=!1,c=!1;return Up.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?py(e.rank,r,"channelsLast"):null,activation:n}).reshape(p)}}function uy(e,t,n){return To((()=>(t=Array.isArray(t)?xp(t,"int32"):t.toInt(),gu(e,t,n))))}function hy(e){return Uo(e,e)}function py(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Km(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Km(`Unsupported input rank by biasAdd: ${t.rank}`)}function dy(e,t,n){return To((()=>(null==n&&(n="channelsLast"),Lg(n),e.add(py(e.rank,t,n)))))}function cy(e,t,n,r){return To((()=>Pp(e,t,n,r)))}function fy(e,t,n=!1){return n?e():t()}var my=["fanIn","fanOut","fanAvg"],gy=["normal","uniform","truncatedNormal"];var yy=class extends eo.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},by=class extends yy{apply(e,t){return yh(e,t)}};by.className="Zeros",eo.registerClass(by);var xy=class extends yy{apply(e,t){return bh(e,t)}};xy.className="Ones",eo.registerClass(xy);var vy=class extends yy{constructor(e){if(super(),"object"!=typeof e)throw new Km(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Km(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return To((()=>Uo(Xh(this.value),bh(e,t))))}getConfig(){return{value:this.value}}};vy.className="Constant",eo.registerClass(vy);var wy=class extends yy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Oh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};wy.className="RandomUniform",eo.registerClass(wy);var ky=class extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xm(`randomNormal does not support dType ${t}.`);return oy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ky.className="RandomNormal",eo.registerClass(ky);var Iy=class extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xm(`truncatedNormal does not support dType ${t}.`);return Sp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Iy.className="TruncatedNormal",eo.registerClass(Iy);var Ny=class extends yy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return To((()=>{if(2!==e.length||e[0]!==e[1])throw new Km("Identity matrix initializer can only be used for 2D square matrices.");return Uo(this.gain,cu(e[0]))}))}getConfig(){return{gain:this.gain}}};Ny.className="Identity",eo.registerClass(Ny);var Sy=class extends yy{constructor(e){if(super(),e.scale<0)throw new Km(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){pg(my,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){pg(gy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(Lg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=Kg(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=Kg(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=Kg(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xm(`${this.getClassName()} does not support dType ${t}.`);return Sp(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Oh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Sy.className="VarianceScaling",eo.registerClass(Sy);var Cy=class extends Sy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sy.className}};Cy.className="GlorotUniform",eo.registerClass(Cy);var Ty=class extends Sy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sy.className}};Ty.className="GlorotNormal",eo.registerClass(Ty);var $y=class extends Sy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sy.className}};$y.className="HeNormal",eo.registerClass($y);var _y=class extends Sy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sy.className}};_y.className="HeUniform",eo.registerClass(_y);var Ey=class extends Sy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sy.className}};Ey.className="LeCunNormal",eo.registerClass(Ey);var Ay=class extends Sy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sy.className}};Ay.className="LeCunNormal",eo.registerClass(Ay);var Fy=class extends yy{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Xm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return To((()=>{if(e.length<2)throw new Xm("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=oy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Ud.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Uo(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Fy.className="Orthogonal",eo.registerClass(Fy);var Ry={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Dy(e,t={}){return og(e,eo.SerializationMap.getMap().classNameMap,t,"initializer")}function My(e){return sg(e)}function Oy(e){if("string"==typeof e){let t=e in Ry?Ry[e]:e;if("GlorotNormal"===t)return new Ty;if("GlorotUniform"===t)return new Cy;if("HeNormal"===t)return new $y;if("HeUniform"===t)return new _y;if("LeCunNormal"===t)return new Ey;if("LeCunUniform"===t)return new Ay;{let e={};return e.className=t,e.config={},Dy(e)}}return e instanceof yy?e:Dy(e)}function Ly(){return new by}function zy(){return new xy}function Py(e){return new vy(e)}function By(e){return new wy(e)}function Wy(e){return new ky(e)}function Vy(e){return new Iy(e)}function Uy(e){return new Ny(e)}function Gy(e){return new Sy(e)}function Hy(e){return new Cy(e)}function jy(e){return new Ty(e)}function qy(e){return new $y(e)}function Ky(e){return new _y(e)}function Xy(e){return new Ey(e)}function Yy(e){return new Ay(e)}function Jy(e){return new Fy(e)}var Zy={};v(Zy,{Layer:()=>yb,RNN:()=>Uv,RNNCell:()=>Gv,activation:()=>hk,add:()=>xk,alphaDropout:()=>uI,average:()=>vk,averagePooling1d:()=>_k,averagePooling2d:()=>Fk,averagePooling3d:()=>Mk,avgPool1d:()=>Ek,avgPool2d:()=>Rk,avgPool3d:()=>Ok,avgPooling1d:()=>Ak,avgPooling2d:()=>Dk,avgPooling3d:()=>Lk,batchNormalization:()=>Ck,bidirectional:()=>tI,concatenate:()=>wk,conv1d:()=>nk,conv2d:()=>rk,conv2dTranspose:()=>ak,conv3d:()=>sk,convLstm2d:()=>Jk,convLstm2dCell:()=>Zk,cropping2D:()=>ok,dense:()=>pk,depthwiseConv2d:()=>uk,dot:()=>Sk,dropout:()=>dk,elu:()=>Yw,embedding:()=>bk,flatten:()=>fk,gaussianDropout:()=>lI,gaussianNoise:()=>oI,globalAveragePooling1d:()=>zk,globalAveragePooling2d:()=>Pk,globalMaxPool1d:()=>rI,globalMaxPool2d:()=>aI,globalMaxPooling1d:()=>Bk,globalMaxPooling2d:()=>Wk,gru:()=>Hk,gruCell:()=>jk,input:()=>jx,inputLayer:()=>Xw,layerNormalization:()=>Tk,leakyReLU:()=>Zw,lstm:()=>qk,lstmCell:()=>Kk,masking:()=>hI,maxPool1d:()=>sI,maxPool2d:()=>iI,maxPooling1d:()=>Vk,maxPooling2d:()=>Uk,maxPooling3d:()=>Gk,maximum:()=>kk,minimum:()=>Ik,multiply:()=>Nk,permute:()=>yk,prelu:()=>Qw,reLU:()=>Jw,repeatVector:()=>mk,reshape:()=>gk,rnn:()=>Qk,separableConv2d:()=>ik,simpleRNN:()=>Xk,simpleRNNCell:()=>Yk,softmax:()=>ek,spatialDropout1d:()=>ck,stackedRNNCells:()=>eI,thresholdedReLU:()=>tk,timeDistributed:()=>nI,upSampling2d:()=>lk,zeroPadding2d:()=>$k});var Qy=0;function eb(){return Qy++}var tb={};function nb(e=""){return e in tb||(tb[e]=0),tb[e]+=1,e+tb[e].toString()}function rb(e){return Array.isArray(e)&&Array.isArray(e[0])}function ab(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function sb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Km(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ib(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Km(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ob(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var lb="Variable",ub=class{constructor(e,t="float32",n=lb,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=eb(),n=null==n?lb:n,this.originalName=Ug(n),this.name=Gg(this.originalName),this.trainable_=r,this.constraint=a,this.val=_p(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function hb(e){return e.map((e=>e.read()))}function pb(e){e.forEach((e=>{e[0].write(e[1])}))}var db=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},cb=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=eb(),null!=s&&(this.originalName=Ug(s),this.name=Gg(this.originalName)),this.rank=t.length}},fb=0,mb=class{constructor(e,t){this.callArgs=t,this.id=fb++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},gb=0,yb=class extends eo.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=gb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=ng(e)+"_"+nb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new qm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Km(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return eg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return eg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new jm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new jm(`Layer ${this.name} is not connected, no input to return.`);return eg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new jm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new jm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return eg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=tg(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=tg(this.inputSpec);if(e.length!==t.length)throw new Km(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Km(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Km(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Km(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Km(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Km(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Km(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=tg(e),r=!0;for(let e of n)if(!(e instanceof cb)){r=!1;break}let a=!0;for(let e of n)if(e instanceof cb){a=!1;break}if(r===a)throw new Km("Arguments to apply() must be all SymbolicTensors or all Tensors");return Vg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of tg(e))t.push(n.shape);this.build(eg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=tg(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=eg(s),null!=this.activityRegularizer)throw new Xm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=tg(e);let t=[];for(let n of e)t.push(n.shape);return eg(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new cb(s,n,this,tg(e),t,this.name,r))):new cb(s,a,this,tg(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new Xm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new jm(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new jm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ob(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hb(e?this.trainableWeights:this.weights)}setWeights(e){To((()=>{let t=this.weights;if(t.length!==e.length)throw new Km(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=hb(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!ra.arraysEqual(s.shape,o.shape))throw new Km(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}pb(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Km(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Oy("zeros"));let o=r.apply(t,n),l=new ub(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=tg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=tg(e);t=tg(t),n=tg(n),r=tg(r),a=ab(a),s=ab(s);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new mb({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function bb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=bb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var xb,vb=class extends yb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:nb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Km("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Km("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Km("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new cb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new mb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Km(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function wb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Km("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new vb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function kb(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];$o(r)}}function Ib(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}vb.className="InputLayer",eo.registerClass(vb),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(xb||(xb={}));var Nb=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Sb=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},Cb=class extends Nb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=To((()=>Bo(this.totals[e],Uo(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:To((()=>{let n=Uo(Vo(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),_o(t[e])})))}},Tb=class extends Nb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},$b=class extends Nb{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ra.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ra.now();return(...a)=>{let s=ra.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await kb(n),r.push(this.yield(e,t,n))),r.push(nc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await kb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await kb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(nc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await kb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await kb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(nc()):ra.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await kb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await kb(e),await this.trainEnd(e))}};function _b(e,t){return null==e&&(e={}),e instanceof Nb?[e]:Array.isArray(e)&&e[0]instanceof Nb?e:tg(e).map((e=>new $b(e,t)))}var Eb=class{constructor(){}static registerCallbackConstructor(e,t){ra.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Eb.checkForDuplicate(t),null==Eb.constructors[e]&&(Eb.constructors[e]=[]),Eb.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Eb.constructors)Eb.constructors[+t].forEach((t=>{if(t===e)throw new Km("Duplicate callback constructor.")}))}static clear(){Eb.constructors={}}static createCallbacks(e){let t=[];for(let n in Eb.constructors){let r=+n;e>=r&&t.push(...Eb.constructors[r])}return t.map((e=>new e))}};function Ab(e,t,n,r,a,s,i,o,l){let u=new Tb,h=[new Cb,...Eb.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new Sb(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function Fb(e,t={},n=!1){return og(e,eo.SerializationMap.getMap().classNameMap,t,"layer",n)}function Rb(e,t){return To((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));let n=Vu(hy(e),t,!0),r=fu(n.shape,Hm()),a=dp(ih(n,r));return Vo(e,a)}))}function Db(e,t){return To((()=>oh(hy(Wu(t,e)),-1)))}function Mb(e,t){return To((()=>oh(Go(Wu(t,e)),-1)))}function Ob(e,t){return To((()=>{let n=Wu(e,t),r=Rl(Go(e),Hm(),Number.MAX_VALUE),a=Go(Vo(n,r));return Uo(100,oh(a,-1))}))}function Lb(e,t,n=!1){return To((()=>{if(n)t=ip(t);else{let e=Vu(t,t.shape.length-1,!0);t=Vo(t,e)}return t=Rl(t,Hm(),1-Hm()),Lu(Vu(Uo(e.toFloat(),$u(t)),t.shape.length-1))}))}function zb(e,t,n=!1){return To((()=>{let r=mu(function(e){let t=[Kg(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=Rl(t,Hm(),1-Hm())).shape;return Lb(vi(r,a[a.length-1]).reshape(a),t,n)}))}function Pb(e,t){return To((()=>{let n;return n=Rl(t,Hm(),1-Hm()),n=$u(Vo(n,Wu(1,n))),oh(function(e,t){if(!ra.arraysEqual(e.shape,t.shape))throw new Km(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return To((()=>{let n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Bb(e,t){return To((()=>{let n=Rb(e,-1),r=Rb(t,-1),a=Uo(n,r);return Lu(Vu(a,-1))}))}Eb.constructors={};var Wb={meanSquaredError:Db,meanAbsoluteError:Mb,meanAbsolutePercentageError:Ob,meanSquaredLogarithmicError:function(e,t){return To((()=>{let n=Rl(t,Hm(),Number.MAX_VALUE),r=$u(Bo(1,n)),a=Rl(e,Hm(),Number.MAX_VALUE),s=$u(Bo(1,a));return oh(hy(Wu(r,s)),-1)}))},squaredHinge:function(e,t){return To((()=>{let n=ih(0,Wu(1,Uo(e,t)));return oh(hy(n),-1)}))},hinge:function(e,t){return To((()=>{let n=ih(0,Wu(1,Uo(e,t)));return oh(n,-1)}))},categoricalHinge:function(e,t){return To((()=>{let n=Vu(Uo(e,t),-1),r=Bu(Uo(Wu(1,e),t),-1);return ih(0,Bo(1,Wu(r,n)))}))},logcosh:function(e,t){return To((()=>{let n=Math.log(2),r=Wu(t,e),a=Wu(Bo(r,zu(Uo(-2,r))),n);return oh(a,-1)}))},categoricalCrossentropy:Lb,sparseCategoricalCrossentropy:zb,binaryCrossentropy:Pb,kullbackLeiblerDivergence:function(e,t){return To((()=>{let n=Rl(e,Hm(),1),r=Rl(t,Hm(),1);return Vu(Uo(e,$u(Vo(n,r))),-1)}))},poisson:function(e,t){return To((()=>{let n=$u(Bo(Hm(),t));return oh(Wu(t,Uo(e,n)),-1)}))},cosineProximity:Bb};function Vb(e){if("string"==typeof e){if(e in Wb)return Wb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Km(t)}return e}function Ub(e,t){return To((()=>{let n=Uo(.5,xh(t)),r=Qg(yu(t,n),e.dtype);return oh(nu(e,r),-1)}))}function Gb(e,t){return To((()=>Qg(nu(Yo(e,-1),Yo(t,-1)),"float32")))}function Hb(e,t){return To((()=>Qu(e.equal(1),t.equal(1)).sum().cast("float32")))}function jb(e,t){return To((()=>{let n=Hb(e,t),r=function(e,t){return To((()=>Qu(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(r);return ru(yu(a,0),n.div(a),0).cast("float32")}))}function qb(e,t){return To((()=>{let n=Hb(e,t),r=function(e,t){return To((()=>Qu(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),a=n.add(r);return ru(yu(a,0),n.div(a),0).cast("float32")}))}function Kb(e,t){return Pb(e,t)}function Xb(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),nu(e,t).asType("float32")}var Yb=Lb,Jb=zb,Zb={binaryAccuracy:Ub,categoricalAccuracy:Gb,precision:jb,categoricalCrossentropy:Yb,sparseCategoricalCrossentropy:Jb,mse:Db,MSE:Db,mae:Mb,MAE:Mb,mape:Ob,MAPE:Ob,cosine:Bb};function Qb(e){if("string"==typeof e&&e in Zb)return Zb[e];if("string"!=typeof e&&null!=e)return e;throw new Km(`Unknown metric ${e}`)}function ex(e){if(Zm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(Wb))if(Wb[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Zb))if(Zb[n]===e){t=n;break}return void 0!==t?t:e.name}}var tx=1048576;function nx(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!rx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>tx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${tx}.`)}}function rx(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!rx(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!rx(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ax(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Output shape","Param #"];if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),sx(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?ix(o[e],n,r):ox(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?ob(e.collectedTrainableWeights):ob(e.trainableWeights),t}(e),u=ob(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function sx(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ix(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}sx([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function ox(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let s=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}let i=e.name,o=e.getClassName(),l=0===s.length?"":s[0];sx([`${i} (${o})`,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)sx(["","","",s[e]],t,r)}function lx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function ux(e,t){if(null===e)return null;if("string"==typeof e)return rg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];lx(t,a,r)?n.push(r):n.push(ux(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=rg(n);t[e]=ux(r,e)}}return t}}function hx(e,t){if(null==e)return null;if("string"==typeof e)return ng(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];lx(t,a,r)?n.push(r):n.push(hx(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=ng(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?hx(r,n):r}return t}}var px="3.3.0";var dx=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof dx)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Km(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Js(t,e.dtype)}catch(n){throw new Km(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof cb){if(null==this.id2Value[e.id])throw new Km(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new Km(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof cb){if(null==this.id2Value[e.id])throw new Km(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new Km(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&$o(this.id2Mask)}},cx={},fx={};function mx(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p,d=o.join(",")+"|"+t.names().join(",");if(null==cx[d]){let e=function(e,t){ra.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=yx(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=yx(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:gx(r)}}(i,t);h=e.sorted,p=e.recipientCounts,cx[d]=h,fx[d]=p}h=cx[d],p={},a||Object.assign(p,fx[d]);let c=new dx(t);for(let e=0;e<h.length;++e){if(null!=r){let e=So().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=h[e],i=s.sourceLayer;if(i instanceof vb)continue;let u=[],d=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),d.push(r),null!=r&&(m=!0),a||(p[e.name]--,0===p[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=d[0]);let g=tg(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,d));let b=bx(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||$o(f)}return c.disposeMasks(),s?l:l[0]}function gx(e){let t={};for(let n in e)t[n]=e[n].size;return t}function yx(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function bx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var xx=class extends yb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=nb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ug(this.inputs).length!==this.inputs.length)throw new Km(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ug(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Zm(0===n,"input layer has >1 nodes"),Zm(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof vb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new qm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(xx.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let h=i.slice().reverse();for(let e of h){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let p={};for(let e in t){let r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}let d={};for(let e in r){let t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(lg);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof xx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(p).map((e=>parseInt(e,10))).sort(lg);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of p[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new qm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new qm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new mb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Km("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new Km(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Km(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new Km(`${e.length} of ${r} weights are not set: ${e}`)}pb(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${px}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=hx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return To((()=>{e=tg(e);let n=new dx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return mx(this.outputs,n,t)}))}computeMask(e,t){return To((()=>{let n;return e=tg(e),n=null==t?Jm(null,e.length):tg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=ab(e);if(t.length!==this.inputLayers.length)throw new Km(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(lg);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=ab(t.computeOutputShape(eg(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];Zm(t in n),a.push(n[t])}return eg(a)}runInternalGraph(e,t){null==t&&(t=Jm(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(lg);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=tg(t.call(e,u)),l=tg(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=tg(t.call(r,u)),l=tg(t.computeMask(r,i));if(t.activityRegularizer)throw new Xm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){Zm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof xx?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=xx.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Km(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Km("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new Km(`No such layer: ${e}`)}calculateLosses(){return To((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=xx.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=xx.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[xx.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=xx.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=xx.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(eg(r),n)}function l(e){let n=e.name,s=Fb(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Km(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,h=t.layers;for(let e of h)l(e);for(;!hg(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];Zm(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];Zm(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Km("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){To((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function vx(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function wx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=To((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){let t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());$o(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),xp(a,"float32")}return null}function kx(e,t){return Uo(e,t)}function Ix(e,t){let n,r,a=t;n=a.xs,r=a.ys,ra.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=Nx("input",e.inputNames,n),i=Nx("output",e.outputNames,r),o=s[0].shape[0];ra.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ra.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ra.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ra.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Nx(e,t,n){if(n instanceof Ia)return[n];if(Array.isArray(n))return ra.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new Km(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function Sx(e,t,n){let r=null!=n.batchesPerEpoch;if(ra.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ra.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ra.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ra.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ra.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(Cx(n.validationData))ra.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new Xm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let h=_b(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=Ab(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=Ix(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=vx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await wx(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);$o(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,_o(n)}await d.onBatchEnd(p,s),Ib(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=Cx(n.validationData)?tg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):tg(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Cx(e){return"function"==typeof e.iterator}function Tx(e){ra.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function $x(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ty(e,t,n-t))):ty(e,t,n-t)}function _x(e,t){return To((()=>null==e?null:Array.isArray(e)?e.map((e=>_x(e,t))):uy(e,"int32"===t.dtype?t:t.toInt())))}function Ex(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Ax(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,h;e.isTraining=!0;try{let p=null==r.batchSize?32:r.batchSize;Tx(p);let d=!1,c=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,p);a=c[0],s=c[1],h=c[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Xm("validationData including sample weights is not supported yet."):new Km(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];let t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];l=$x(a,e,t),a=$x(a,0,e),u=$x(s,e,t),s=$x(s,0,e),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);let g=a.concat(s).concat(h);e.checkTrainableWeightsConsistency();let y,b,x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();m?(e.makeTestFunction(),y=e.testFunction,b=v.slice().concat(v.map((e=>"val_"+e)))):(y=null,f=[],b=v.slice());let w=_b(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,h,p,d,c,f){null==a&&(a=32),null==s&&(s=1),null==h&&(h=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new Km("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=Zg(0,y)),null==i&&(i=1);let{callbackList:b,history:x}=Ab(o,i,s,d,y,c,a,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);let s={};if(null!=c)throw new Xm("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Xm("batch shuffling is not implemneted yet");h&&ra.shuffle(g);let i=xp(g),o=Ex(y,a);for(let h=0;h<o.length;++h){let p={};if(await b.onBatchBegin(h,p),To((()=>{let d=o[h][0],c=o[h][1],f=ty(i,d,c-d);p.batch=h,p.size=c-d;let g=_x(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];p[t]=n,_o(n)}if(h===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];_o(a),s["val_"+n]=a}}})),await b.onBatchEnd(h,p),Ib(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,g,v,p,r.epochs,r.verbose,w,y,f,r.shuffle,b,r.initialEpoch,null,null)}finally{e.isTraining=!1,Rx(a,t),Rx(s,n),Rx(l,i),Rx(u,o),null!=h&&$o(h)}}function Fx(e){let t=[];e instanceof Ia&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(ey(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Rx(e,t){if(null==e)return;let n=[];if(t instanceof Ia)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof Ia)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Dx(e){return Array.isArray(e)}function Mx(e){return!function(e){return e instanceof Ia}(e)&&!Dx(e)}function Ox(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Dx(e)&&e.length>0)t=!0;else if(Mx(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Km(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Mx(e)){s=[];for(let n of t){if(null==e[n])throw new Km(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Dx(e)){if(e.length!==t.length)throw new Km(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new Km(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Fx(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new Km(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l>=0&&o!==l)throw new Km(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function Lx(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Km(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Km(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new Km(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new Km(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var zx=class extends xx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Km("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");ax(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>ec.adagrad(.01),Adadelta:()=>ec.adadelta(1,.95,Hm()),Adam:()=>ec.adam(.001,.9,.999,Hm()),Adamax:()=>ec.adamax(.002,.9,.999,Hm(),0),RMSProp:()=>ec.rmsprop(.001,.9,0,Hm()),SGD:()=>ec.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Km(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Hd))throw new Km("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Km(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>Vb(e)))}else{let n=Vb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Km(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Vb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Vg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Vg("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===Pb?-1!==["accuracy","acc"].indexOf(i)?r=Ub:-1!==["crossentropy","ce"].indexOf(i)&&(r=Kb):this.lossFunctions[e]===zb?-1!==["accuracy","acc"].indexOf(i)?r=Xb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Jb):-1!==["accuracy","acc"].indexOf(i)?r=Gb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Yb),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=Qb(i),n=""+ex(i);let t;Vg(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;Tx(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction;return eg(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Rx(a[0],e),Rx(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new Xm("Verbose mode is not implemented yet.");ra.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=To((()=>{if(t.value){let{xs:n,ys:r}=Ix(e,t.value),i=n.concat(r),u=To((()=>a(i)));if($o(i),0===l)for(let e=0;e<u.length;++e)s.push(Xh(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=To((()=>Bo(s[e],Uo(h,t)))),l>0&&$o(n)}$o(u),o+=h,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=Vo(s[e],o),$o(t)}return eg(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Km(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Km(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Km("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new dx;if(e instanceof Ia&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Km(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new Km(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=mx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Jm(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Km(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return To((()=>{let r=this.checkNumSamples(e);if(n)throw new Xm("Verbose predictLoop() is not implemented yet.");let a=Ex(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)To((()=>{let n=a[t][0],r=a[t][1],s=$x(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new dx(i);return mx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return eg(s.map((e=>xl(e,0))))}))}predict(e,t={}){let n=Fx(e);Lx(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return Tx(e),this.predictLoop(n,e)}finally{Rx(n,e)}}predictOnBatch(e){Lx(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new qm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===zb?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){let r=ug(e.map((e=>e.shape[0])));r.sort();let a=ug(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new Km(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Km(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!ra.arraysEqual(r,a))throw new Km(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Ox(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ox(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[Db,Pb,Lb];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Lb&&1===s.shape[s.shape.length-1])throw new Km(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new Km(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Km(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=vx(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await wx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return To((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Xm("Verbose mode is not implemented yet.");if(null!=a)throw new Xm("steps mode in testLoop() is not implemented yet");{let r=Ex(s,n),a=xp(Zg(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=ty(a,s,o-s),u=_x(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push(Xh(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=Bo(i[e],Uo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Vo(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;Qm(e,r)>1&&(a+=`_${Qm(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new dx(e),l=mx(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=kx(n,a[e]));let s=oh(n);t.push(s),i=0===e?n:Bo(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=oh(t(r[a],l[a]))}_o(n),s.push(n)}return i=oh(i),this.calculateLosses().forEach((e=>{i=Bo(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>To((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new dx(s),o=mx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=oh(r(a[e],o[e]));t=0===e?s:Bo(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=oh(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return Ax(this,e,t,n)}async fitDataset(e,t){return Sx(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return $o(s),eg(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=So().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-So().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ng(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ng(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ng(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ng(ex(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ng(ex(e))));{let e={};for(let t in this.metrics)e[t]=ng(ex(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=Fb(ux(e.optimizer_config));if("string"==typeof e.loss)t=rg(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>rg(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=rg(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>rg(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=rg(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=ei.getSaveHandlers(e);if(0===t.length)throw new Km(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Km(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Km("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await ei.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${px}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await ei.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=ei.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){let e=!0;nx(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){nx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};zx.className="Model",eo.registerClass(zx);var Px=class extends zx{};async function Bx(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=Fb(ux(n),t);if(null!=e.weightsManifest){let t=await ei.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),$o(t)}return r}async function Wx(e,t){if(null==t&&(t={}),"string"==typeof e){let n=ei.getLoadHandlers(e,t);if(0===n.length)n.push(ei.browserHTTPRequest(e,t));else if(n.length>1)throw new Km(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Km("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Fb(ux(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Km("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=ei.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),$o(e),$o(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Px.className="Functional",eo.registerClass(Px);var Vx=class extends zx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:nb("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Km(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof Vx||e instanceof zx;if(n){if(t=e,1!==t.outputs.length)throw new Km("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new Km("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Km("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=wb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new Km(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Km("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=bb(this.outputs[0])}this.inboundNodes=[],new mb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Jm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ib(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Km("Legacy serialization format not supported yet.");a=t}else ra.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Vx))throw new Xm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=Fb(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Km("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Km("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function Ux(e){return new zx(e)}function Gx(e){return new Vx(e)}function Hx(e,t){return null==t&&(t={}),Wx(e,t)}function jx(e){return wb(e)}function qx(e,t){Eb.registerCallbackConstructor(e,t)}Vx.className="Sequential",eo.registerClass(Vx);var Kx=class extends eo.Serializable{getConfig(){return{}}},Xx=class extends Kx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Xm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ou(e)}(e,t)}};Xx.className="elu",eo.registerClass(Xx);var Yx=class extends Kx{apply(e){return Yh(e)}};Yx.className="selu",eo.registerClass(Yx);var Jx=class extends Kx{apply(e){return Bh(e)}};Jx.className="relu",eo.registerClass(Jx);var Zx=class extends Kx{apply(e){return To((()=>uh(6,Bh(e))))}};Zx.className="relu6",eo.registerClass(Zx);var Qx=class extends Kx{apply(e){return e}};Qx.className="linear",eo.registerClass(Qx);var ev=class extends Kx{apply(e){return vl(e)}};ev.className="sigmoid",eo.registerClass(ev);var tv=class extends Kx{apply(e){return function(e){return To((()=>{let t=Bo(.5,Uo(.2,e));return Rl(t,0,1)}))}(e)}};tv.className="hardSigmoid",eo.registerClass(tv);var nv=class extends Kx{apply(e){return zu(e)}};nv.className="softplus",eo.registerClass(nv);var rv=class extends Kx{apply(e){return function(e){return To((()=>Vo(e,Go(e).add(1))))}(e)}};rv.className="softsign",eo.registerClass(rv);var av=class extends Kx{apply(e){return kl(e)}};av.className="tanh",eo.registerClass(av);var sv=class extends Kx{apply(e,t=-1){return ip(e,t)}};sv.className="softmax",eo.registerClass(sv);var iv=class extends Kx{apply(e,t=-1){return Uu(e,t)}};iv.className="logSoftmax",eo.registerClass(iv);var ov=class extends Kx{apply(e,t=1){return To((()=>vl(e.mul(t)).mul(e)))}};function lv(e){return e.getClassName()}function uv(e,t={}){return og(e,eo.SerializationMap.getMap().classNameMap,t,"activation")}function hv(e){if(null==e){let e={className:"linear",config:{}};return uv(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},uv(t)}return e instanceof Kx?e:uv(e)}function pv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}ov.className="swish",eo.registerClass(ov);var dv=class extends eo.Serializable{},cv=class extends dv{constructor(e){super(),pv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return To((()=>{let t=yh([1]);return this.hasL1&&(t=Bo(t,Vu(Uo(this.l1,Go(e))))),this.hasL2&&(t=Bo(t,Vu(Uo(this.l2,hy(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};cv.className="L1L2",eo.registerClass(cv);var fv={l1l2:"L1L2"};function mv(e){return sg(e)}function gv(e,t={}){return og(e,eo.SerializationMap.getMap().classNameMap,t,"regularizer")}function yv(e){if(null==e)return null;if("string"==typeof e){return gv({className:e in fv?fv[e]:e,config:{}})}return e instanceof dv?e:gv(e)}var bv=class extends yb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=sb(e);let n=Bh(e);return null!=this.maxValue&&(n=Rl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};bv.className="ReLU",eo.registerClass(bv);var xv=class extends yb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=sb(e);return Iu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};xv.className="LeakyReLU",eo.registerClass(xv);var vv=class extends yb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Oy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yv(e.alphaRegularizer),this.alphaConstraint=Sg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Km(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=ib(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new db({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=sb(e),_h(e,this.alpha.read())}getConfig(){let e={alphaInitializer:My(this.alphaInitializer),alphaRegularizer:mv(this.alphaRegularizer),alphaConstraint:Ig(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};vv.className="PReLU",eo.registerClass(vv);var wv=class extends yb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Xm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=sb(e);return ou(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};wv.className="ELU",eo.registerClass(wv);var kv=class extends yb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=sb(e);return n.mul(Qg(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};kv.className="ThresholdedReLU",eo.registerClass(kv);var Iv=class extends yb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new sv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=sb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Nv(e,t,n){if("number"==typeof e)return Jm(e,t);if(e.length!==t)throw new Km(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!qg(a))throw new Km(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Sv(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Cv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Jg([n-t,0]);else{if("same"!==r)throw new Km(`Unsupport padding mode: ${r}.`);e*=t}return e}function Tv(e,t){return To((()=>(Lg(t),"channelsFirst"===t?wi(e,[0,2,3,1]):e)))}function $v(e,t){return To((()=>(Lg(t),"channelsFirst"===t?wi(e,[0,2,3,4,1]):e)))}function _v(e,t,n,r=[1,1],a="valid",s,i,o=null){return To((()=>{if(null==s&&(s="channelsLast"),Lg(s),3!==e.rank&&4!==e.rank)throw new Km(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Km(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Tv(e,s);if("causal"===a)throw new Xm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Up.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=wi(l,[0,3,1,2])),l}))}Iv.className="Softmax",eo.registerClass(Iv);var Ev=class extends yb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ev.verifyArgs(t),this.rank=e,cg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Xm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Nv(t.kernelSize,e,"kernelSize"),this.strides=Nv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,zg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Lg(this.dataFormat),this.activation=hv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Oy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Sg(t.biasConstraint),this.biasRegularizer=yv(t.biasRegularizer),this.activityRegularizer=yv(t.activityRegularizer),this.dilationRate=Nv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Km(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Km(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Km(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Zm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!dg(e.kernelSize,"number",1,3))throw new Km(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:lv(this.activation),useBias:this.useBias,biasInitializer:My(this.biasInitializer),biasRegularizer:mv(this.biasRegularizer),activityRegularizer:mv(this.activityRegularizer),biasConstraint:Ig(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Av=class extends Ev{constructor(e,t){super(e,t),this.kernel=null,Av.verifyArgs(t),this.filters=t.filters,cg(this.filters,"filters"),this.kernelInitializer=Oy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Sg(t.kernelConstraint),this.kernelRegularizer=yv(t.kernelRegularizer)}build(e){e=ib(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Km(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return To((()=>{e=sb(e);let t,n=null==this.bias?null:this.bias.read(),r=mg(this.activation.getClassName());if(null!=r&&2===this.rank)t=_v(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return To((()=>{if(null==s&&(s="channelsLast"),Lg(s),3!==e.shape.length)throw new Km(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Km(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Km(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=wi(e,[0,2,1])),"causal"===a)throw new Xm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Pl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=dy(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=_v(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Xm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return To((()=>{if(null==s&&(s="channelsLast"),Lg(s),4!==e.rank&&5!==e.rank)throw new Km(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Km(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=$v(e,s);if("causal"===a)throw new Xm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Vl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=dy(o,n)),"channelsFirst"===s&&(o=wi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ib(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=Sv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:My(this.kernelInitializer),kernelRegularizer:mv(this.kernelRegularizer),kernelConstraint:Ig(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Km(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Fv=class extends Av{constructor(e){super(2,e),Fv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!dg(e.kernelSize,"number",1,2))throw new Km(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Fv.className="Conv2D",eo.registerClass(Fv);var Rv=class extends Av{constructor(e){super(3,e),Rv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Km(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Rv.className="Conv3D",eo.registerClass(Rv);var Dv=class extends Fv{constructor(e){if(super(e),this.inputSpec=[new db({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Km(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ib(e)).length)throw new Km("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Km("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new db({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return To((()=>{let t=sb(e);if(4!==t.shape.length)throw new Km(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,Cv(i,h,l,this.padding),Cv(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=wi(t,[0,2,3,1]));let c=Wl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=wi(c,[0,3,1,2])),null!=this.bias&&(c=dy(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=ib(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Cv(a[n],o,s,this.padding),a[r]=Cv(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Dv.className="Conv2DTranspose",eo.registerClass(Dv);var Mv=class extends Av{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Km("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Km("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Km(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Oy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yv(t.depthwiseRegularizer),this.depthwiseConstraint=Sg(t.depthwiseConstraint),this.pointwiseInitializer=Oy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yv(t.pointwiseRegularizer),this.pointwiseConstraint=Sg(t.pointwiseConstraint)}build(e){if((e=ib(e)).length<this.rank+2)throw new Km(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Km(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new db({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return To((()=>{let t;if(e=sb(e),1===this.rank)throw new Xm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=wi(e,[0,2,3,1])),t=Jh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=dy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=wi(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=My(this.depthwiseInitializer),e.pointwiseInitializer=My(this.pointwiseInitializer),e.depthwiseRegularizer=mv(this.depthwiseRegularizer),e.pointwiseRegularizer=mv(this.pointwiseRegularizer),e.depthwiseConstraint=Ig(this.depthwiseConstraint),e.pointwiseConstraint=Ig(this.pointwiseConstraint),e}};Mv.className="SeparableConv";var Ov=class extends Mv{constructor(e){super(2,e)}};Ov.className="SeparableConv2D",eo.registerClass(Ov);var Lv=class extends Av{constructor(e){super(1,e),Lv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!dg(e.kernelSize,"number",1,1))throw new Km(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Lv.className="Conv1D",eo.registerClass(Lv);var zv=class extends yb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return To((()=>{if(e=sb(e),"channelsLast"===this.dataFormat){let t=ry(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ry(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=ry(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ry(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};zv.className="Cropping2D",eo.registerClass(zv);var Pv=class extends yb{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){pg(Fg,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return To((()=>{let t=sb(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=wi(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return wi(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Pv.className="UpSampling2D",eo.registerClass(Pv);var Bv=class extends Ev{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Oy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Sg(e.depthwiseConstraint),this.depthwiseRegularizer=yv(e.depthwiseRegularizer)}build(e){if((e=ib(e)).length<4)throw new Km(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Km(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return To((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return To((()=>{null==a&&(a="channelsLast"),Lg(a);let i=Tv(e,a);if(4!==e.rank)throw new Km(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Km(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Yl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=wi(i,[0,3,1,2])),i}))}(e=sb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=dy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Sv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Sv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=My(this.depthwiseInitializer),e.depthwiseRegularizer=mv(this.depthwiseRegularizer),e.depthwiseConstraint=Ig(this.depthwiseRegularizer),e}};function Wv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Km("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Vv(e,t,n,r=!1,a,s,i=!1,o=!1){return To((()=>{let l=t.shape.length;if(l<3)throw new Km(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Zg(2,l));if(t=wi(t,u),null!=s)throw new Xm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===l-1&&(a=hu(a,-1)),a=wi(a,u)),r&&(t=Vh(t,0),null!=a&&(a=Vh(a,0)));let h,p,d,c=[],f=n,m=t.shape[0],g=$p(t);null!=a&&(p=$p(a));for(let t=0;t<m;++t){let n=g[t],r=To((()=>e(n,f)));if(null==a)h=r[0],f=r[1];else{let e=To((()=>{let e=p[t],n=xh(e).sub(e);return{output:r[0].mul(e).add(f[0].mul(n)),newStates:f.map(((t,a)=>r[1][a].mul(e).add(t.mul(n))))}}));h=e.output,f=e.newStates}o&&c.push(h)}return o&&(d=mp(c,1)),[h,d,f]}))}Bv.className="DepthwiseConv2D",eo.registerClass(Bv);var Uv=class extends yb{constructor(e){let t;if(super(e),null==e.cell)throw new Km("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Jv({cells:e.cell}):e.cell,null==t.stateSize)throw new Km("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new db({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Zg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){rb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return To((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Xm("Constants support is not implemented in RNN yet.");rb(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new db({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ra.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Km(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new db({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){To((()=>{if(!this.stateful)throw new jm("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new Km("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yh([n,e]))):this.states_=[yh([n,this.cell.stateSize])];else if(null==e)$o(this.states_),null!=this.keptStates&&($o(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yh([n,e]))):this.states_[0]=yh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Km(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):$o(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ra.arraysEqual(r.shape,s))throw new Km(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>_o(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=Wv(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new db({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof cb){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return To((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=sb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Km(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=Vv(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return To((()=>{let t=yh(e.shape);return t=Vu(t,[1,2]),t=ey(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?iy(t,[1,e]):t)):this.cell.stateSize>1?[iy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Uv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=Fb(t.cell,n);return new e(Object.assign(t,{cell:r}))}};Uv.className="RNN",eo.registerClass(Uv);var Gv=class extends yb{},Hv=class extends Gv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cg(this.units,"units"),this.activation=hv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yv(e.kernelRegularizer),this.recurrentRegularizer=yv(e.recurrentRegularizer),this.biasRegularizer=yv(e.biasRegularizer),this.kernelConstraint=Sg(e.kernelConstraint),this.recurrentConstraint=Sg(e.recurrentConstraint),this.biasConstraint=Sg(e.biasConstraint),this.dropout=Yg([1,Jg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Jg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ib(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return To((()=>{if(2!==e.length)throw new Km(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zv({ones:()=>xh(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zv({ones:()=>xh(n),rate:this.recurrentDropout,training:r}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=ly(null!=s?Uo(e,s):e,this.kernel.read()),null!=this.bias&&(a=dy(a,this.bias.read())),null!=i&&(n=Uo(n,i));let o=Bo(a,ly(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:lv(this.activation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:mv(this.kernelRegularizer),recurrentRegularizer:mv(this.recurrentRegularizer),biasRegularizer:mv(this.biasRegularizer),activityRegularizer:mv(this.activityRegularizer),kernelConstraint:Ig(this.kernelConstraint),recurrentConstraint:Ig(this.recurrentConstraint),biasConstraint:Ig(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Hv.className="SimpleRNNCell",eo.registerClass(Hv);var jv=class extends Uv{constructor(e){e.cell=new Hv(e),super(e)}call(e,t){return To((()=>{null!=this.cell.dropoutMask&&($o(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($o(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};jv.className="SimpleRNN",eo.registerClass(jv);var qv=class extends Gv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Km("GRUCell does not support reset_after parameter set to true.");this.units=e.units,cg(this.units,"units"),this.activation=hv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yv(e.kernelRegularizer),this.recurrentRegularizer=yv(e.recurrentRegularizer),this.biasRegularizer=yv(e.biasRegularizer),this.kernelConstraint=Sg(e.kernelConstraint),this.recurrentConstraint=Sg(e.recurrentConstraint),this.biasConstraint=Sg(e.biasConstraint),this.dropout=Yg([1,Jg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Jg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=ib(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return To((()=>{if(2!==e.length)throw new Km(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zv({ones:()=>xh(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zv({ones:()=>xh(r),rate:this.recurrentDropout,training:n,count:3}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Uo(e,o[0]));let u=ly(e,this.kernel.read());this.useBias&&(u=dy(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Uo(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=hp(h,[2*this.units,this.units],h.rank-1),c=ly(r,p),[f,m,g]=hp(u,3,u.rank-1),[y,b]=hp(c,2,c.rank-1);a=this.recurrentActivation.apply(Bo(f,y)),s=this.recurrentActivation.apply(Bo(m,b));let x=ly(Uo(s,r),d);i=this.activation.apply(Bo(g,x));let v=Bo(Uo(a,r),Uo(Bo(1,Lu(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:lv(this.activation),recurrentActivation:lv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:mv(this.kernelRegularizer),recurrentRegularizer:mv(this.recurrentRegularizer),biasRegularizer:mv(this.biasRegularizer),activityRegularizer:mv(this.activityRegularizer),kernelConstraint:Ig(this.kernelConstraint),recurrentConstraint:Ig(this.recurrentConstraint),biasConstraint:Ig(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};qv.className="GRUCell",eo.registerClass(qv);var Kv=class extends Uv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qv(e),super(e)}call(e,t){return To((()=>{null!=this.cell.dropoutMask&&($o(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($o(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Kv.className="GRU",eo.registerClass(Kv);var Xv=class extends Gv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cg(this.units,"units"),this.activation=hv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yv(e.kernelRegularizer),this.recurrentRegularizer=yv(e.recurrentRegularizer),this.biasRegularizer=yv(e.biasRegularizer),this.kernelConstraint=Sg(e.kernelConstraint),this.recurrentConstraint=Sg(e.recurrentConstraint),this.biasConstraint=Sg(e.biasConstraint),this.dropout=Yg([1,Jg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Jg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=ib(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends yy{apply(t,n){let a=e.apply([r]),s=(new xy).apply([r]),i=e.apply([2*r]);return sy(sy(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return To((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new Km(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zv({ones:()=>xh(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zv({ones:()=>xh(r),rate:this.recurrentDropout,training:n,count:4}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Uo(e,u[0]));let p=ly(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Uo(r,h[0])),p=Bo(p,ly(r,this.recurrentKernel.read())),this.useBias&&(p=dy(p,this.bias.read()));let[d,c,f,m]=hp(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=Bo(Uo(i,a),Uo(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=Uo(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:lv(this.activation),recurrentActivation:lv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mv(this.kernelRegularizer),recurrentRegularizer:mv(this.recurrentRegularizer),biasRegularizer:mv(this.biasRegularizer),activityRegularizer:mv(this.activityRegularizer),kernelConstraint:Ig(this.kernelConstraint),recurrentConstraint:Ig(this.recurrentConstraint),biasConstraint:Ig(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Xv.className="LSTMCell",eo.registerClass(Xv);var Yv=class extends Uv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Xv(e),super(e)}call(e,t){return To((()=>{null!=this.cell.dropoutMask&&($o(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($o(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Yv.className="LSTM",eo.registerClass(Yv);var Jv=class extends Gv{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return To((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;rb(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Vg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(Fb(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return hb(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}pb(t)}};function Zv(e){let{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>cy(t(),n),i=()=>fy(s,t,r);return!a||a<=1?_o(i().clone()):Array(a).fill(void 0).map(i).map((e=>_o(e.clone())))}Jv.className="StackedRNNCells",eo.registerClass(Jv);var Qv=class extends Uv{constructor(e){if(e.unroll)throw new Xm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Xm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new db({ndim:5})]}call(e,t){return To((()=>{if(null!=this.cell.dropoutMask&&($o(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($o(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Km("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return To((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=yh([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){To((()=>{if(!this.stateful)throw new jm("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Km("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yh(a))):this.states_=[yh(a)];else if(null==e)$o(this.states_),null!=this.keptStates&&($o(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yh(a))):this.states_[0]=yh(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Km(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):$o(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!ra.arraysEqual(n.shape,r))throw new Km(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>_o(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=Sv(l,r[0],a,s[0],i[0]),p=Sv(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};Qv.className="ConvRNN2D";var ew=class extends Xv{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,cg(this.filters,"filters"),this.kernelSize=Nv(n,2,"kernelSize"),this.kernelSize.forEach((e=>cg(e,"kernelSize"))),this.strides=Nv(r||1,2,"strides"),this.strides.forEach((e=>cg(e,"strides"))),this.padding=a||"valid",zg(this.padding),this.dataFormat=s||"channelsLast",Lg(this.dataFormat),this.dilationRate=Nv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>cg(e,"dilationRate")))}build(e){var t;e=ib(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Km(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends yy{apply(e,t){return ay([n.apply([r]),bh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return To((()=>{if(3!==e.length)throw new Km(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zv({ones:()=>xh(r),rate:this.dropout,training:n,count:4}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Uo(t[n],e):e,l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zv({ones:()=>xh(a),rate:this.recurrentDropout,training:n,count:4}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,v]=hp(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?hp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),h=this.inputConv(h,x,I,this.padding),p=this.inputConv(p,v,N,this.padding);let[S,C,T,$]=hp(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,$);let _=this.recurrentActivation.apply(Bo(l,c)),E=this.recurrentActivation.apply(Bo(u,f)),A=Bo(Uo(E,s),Uo(_,this.activation.apply(Bo(h,m)))),F=Uo(this.recurrentActivation.apply(Bo(p,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let a=zl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?dy(a,n,this.dataFormat):a}recurrentConv(e,t){return zl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};ew.className="ConvLSTM2DCell",eo.registerClass(ew);var tw=class extends Qv{constructor(e){let t=new ew(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};tw.className="ConvLSTM2D",eo.registerClass(tw);var nw=class extends yb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return fy((()=>cy(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};nw.className="Dropout",eo.registerClass(nw);var rw=class extends nw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};rw.className="SpatialDropout1D",eo.registerClass(rw);var aw=class extends yb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,cg(this.units,"units"),this.activation=hv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Sg(e.kernelConstraint),this.biasConstraint=Sg(e.biasConstraint),this.kernelRegularizer=yv(e.kernelRegularizer),this.biasRegularizer=yv(e.biasRegularizer),this.activityRegularizer=yv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=ib(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=ib(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n,r=sb(e),a=mg(this.activation.getClassName());return null!=a?n=ly(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=ly(r,this.kernel.read()),null!=this.bias&&(n=dy(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:lv(this.activation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:mv(this.kernelRegularizer),biasRegularizer:mv(this.biasRegularizer),activityRegularizer:mv(this.activityRegularizer),kernelConstraint:Ig(this.kernelConstraint),biasConstraint:Ig(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};aw.className="Dense",eo.registerClass(aw);var sw=class extends yb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ib(e);for(let t of e.slice(1))if(null==t)throw new Km(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Kg(e,1)]}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Km(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Kg(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};sw.className="Flatten",eo.registerClass(sw);var iw=class extends yb{constructor(e){super(e),this.supportsMasking=!0,this.activation=hv(e.activation)}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e);return this.activation.apply(n)}))}getConfig(){let e={activation:lv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};iw.className="Activation",eo.registerClass(iw);var ow=class extends yb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return To((()=>function(e,t){return To((()=>{if(2!==e.shape.length)throw new Km(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return iy(ey(e,1),[1,t,1])}))}(e=sb(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};ow.className="RepeatVector",eo.registerClass(ow);var lw=class extends yb{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Km("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=Kg(e);if(null!==s){if(0===a||i%a!=0)throw new Km(n);r[s]=i/a}else if(i!==a)throw new Km(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};lw.className="Reshape",eo.registerClass(lw);var uw=class extends yb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Zg(1,e.dims.length+1);if(!ra.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new db({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=ib(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return wi(sb(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};uw.className="Permute",eo.registerClass(uw);var hw=class extends yb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=sb(e);return Xo(gh(n,this.maskValue),-1)}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e),r=Xo(gh(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}};hw.className="Masking",eo.registerClass(hw);var pw=class extends yb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(tg(e.inputLength))}this.inputDim=e.inputDim,cg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,cg(this.outputDim,"outputDim"),this.embeddingsInitializer=Oy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yv(e.embeddingsRegularizer),this.activityRegularizer=yv(e.activityRegularizer),this.embeddingsConstraint=Sg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return To((()=>this.maskZero?(e=sb(e),gh(e,au(e))):null))}computeOutputShape(e){if(e=ib(e),null==this.inputLength)return[...e,this.outputDim];let t=tg(this.inputLength);if(t.length!==e.length-1)throw new Km(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Km(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e);return"int32"!==n.dtype&&(n=Qg(n,"int32")),uy(this.embeddings.read(),n.as1D()).reshape(ib(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:My(this.embeddingsInitializer),embeddingsRegularizer:mv(this.embeddingsRegularizer),activityRegularizer:mv(this.activityRegularizer),embeddingsConstraint:Ig(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};pw.className="Embedding",eo.registerClass(pw);var dw=class extends yb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Xm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Km("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ib(e)]),e.length<2)throw new Km(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=ug(t),t.length>1)throw new Km(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ug(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return To((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=Jg(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=ey(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=r.reshape([a].concat(Kg(e.slice(1))));i=wi(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){let a=Zg(1,e).concat([0]);t.push(wi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=wi(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){let e=[a-1].concat(Zg(0,a-1));r=wi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=ug(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return To((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Km("`mask` should be an Array");if(!Array.isArray(e))throw new Km("`inputs` should be an Array");if(t.length!==e.length)throw new Km(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:hu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Qu(n,t[e]);return n}))}},cw=class extends dw{constructor(e){super(e)}mergeFunction(e){return To((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Bo(t,e[n]);return t}))}};cw.className="Add",eo.registerClass(cw);var fw=class extends dw{constructor(e){super(e)}mergeFunction(e){return To((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Uo(t,e[n]);return t}))}};fw.className="Multiply",eo.registerClass(fw);var mw=class extends dw{constructor(e){super(e)}mergeFunction(e){return To((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Bo(t,e[n]);return Uo(1/e.length,t)}))}};mw.className="Average",eo.registerClass(mw);var gw=class extends dw{constructor(e){super(e)}mergeFunction(e){return To((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ih(t,e[n]);return t}))}};gw.className="Maximum",eo.registerClass(gw);var yw=class extends dw{constructor(e){super(e)}mergeFunction(e){return To((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=uh(t,e[n]);return t}))}};yw.className="Minimum",eo.registerClass(yw);var bw=class extends dw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Km("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(ra.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Km("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return To((()=>ay(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Km("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Km("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Km("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Km(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return To((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(xh(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(hu(t[n],-1)):r.push(t[n]);let a=xl(r,this.axis);return Ko(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function xw(e,t){for(;e<0;)e+=t;return e}bw.className="Concatenate",eo.registerClass(bw);var vw=class extends dw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ra.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Xm("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Km(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Km(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>xw(t,e[n].shape.length))):[xw(this.axes,n.shape.length),xw(this.axes,r.shape.length)],this.normalize&&(n=Rb(n,t[0]),r=Rb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Xm("batchDot is not implemented for tensors of 4D or higher rank yet");if(ra.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ra.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Xm("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return To((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[xw(this.axes,e.length),xw(this.axes,t.length)],n}computeOutputShape(e){ra.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Xm("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};vw.className="Dot",eo.registerClass(vw);var ww=class extends yb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e);return fy((()=>oy(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}};ww.className="GaussianNoise",eo.registerClass(ww);var kw=class extends yb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return To((()=>{this.invokeCallHook(e,t);let n=sb(e);return this.rate>0&&this.rate<1?fy((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return n.mul(oy(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};kw.className="GaussianDropout",eo.registerClass(kw);var Iw=class extends yb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||sb(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return To((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return fy((()=>{let t=sb(e),r=-1.7580993408473766,a=bu(Oh(n),this.rate);a=Qg(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)}),(()=>sb(e)),t.training||!1)}return e}))}};function Nw(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Tl(e,t,n,r,a,s);else if(3===e.rank)i=$l(e,t,n,r,a,s);else{if(4!==e.rank)throw new Xm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=_l(e,t,n,r,a,s)}return i}function Sw(e,t,n,r,a=.001){return ra.arraysEqual(r.slice().sort(),Zg(0,e.rank-1))?function(e,t,n,r,a=.001){return To((()=>{let s=ch(e,r),i=s.mean,o=s.variance;return[Nw(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return To((()=>{let s=ch(e,r),i=s.mean,o=s.variance,l=[];for(let t of Zg(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=i.reshape(l),h=o.reshape(l),p=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[Nw(e,u,h,d,p,a),i,o]}))}(e,t,n,r,a)}Iw.className="AlphaDropout",eo.registerClass(Iw);var Cw=class extends yb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Oy(e.betaInitializer||"zeros"),this.gammaInitializer=Oy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Oy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Oy(e.movingVarianceInitializer||"ones"),this.betaConstraint=Sg(e.betaConstraint),this.gammaConstraint=Sg(e.gammaConstraint),this.betaRegularizer=yv(e.betaRegularizer),this.gammaRegularizer=yv(e.gammaRegularizer)}build(e){e=ib(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Km(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new db({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return To((()=>{let n=null!=t.training&&t.training,r=sb(e),a=r.shape,s=a.length,i=Zg(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Jm(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!ra.arraysEqual(u,Zg(0,s).slice(0,s-1));if(!n)return(()=>{if(h){let e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,a=this.scale?this.gamma.read().reshape(l):null;return Nw(r,e,t,n,a,this.epsilon)}return Nw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[p,d,c]=Sw(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{To((()=>{let r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum)})(),p}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:My(this.betaInitializer),gammaInitializer:My(this.gammaInitializer),movingMeanInitializer:My(this.movingMeanInitializer),movingVarianceInitializer:My(this.movingVarianceInitializer),betaRegularizer:mv(this.betaRegularizer),gammaRegularizer:mv(this.gammaRegularizer),betaConstraint:Ig(this.betaConstraint),gammaConstraint:Ig(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Cw.className="BatchNormalization",eo.registerClass(Cw);var Tw=class extends yb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Oy(e.betaInitializer||"zeros"),this.gammaInitializer=Oy(e.gammaInitializer||"ones"),this.betaRegularizer=yv(e.betaRegularizer),this.gammaRegularizer=yv(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=ib(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==ug(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){let n=sb(e),r=n.shape,a=r.length;return To((()=>{let{mean:e,variance:t}=ch(n,this.axis,!0),s=Jm(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e,o=i(this.gamma.read()),l=i(this.beta.read()),u=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),h.push(1)):(u.push(1),h.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(h),l=l.tile(h),Nw(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:My(this.betaInitializer),gammaInitializer:My(this.gammaInitializer),betaRegularizer:mv(this.betaRegularizer),gammaRegularizer:mv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Tw.className="LayerNormalization",eo.registerClass(Tw);var $w=class extends yb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Km(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Km(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Km(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new db({ndim:4})]}computeOutputShape(e){let t,n;return e=ib(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return To((()=>function(e,t,n){return To((()=>{if(4!==e.rank)throw new Km(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new Km("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new Km(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],wh(e,r)}))}(sb(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function _w(e,t,n,r,a,s){return To((()=>{Lg(a),Pg(s),zg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Tv(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?rh(e,t,n,o):yl(e,t,n,o),"channelsFirst"===a&&(i=wi(i,[0,3,1,2])),i}))}function Ew(e,t,n,r,a,s){return To((()=>{Lg(a),Pg(s),zg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=$v(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?ah(e,t,n,o):bl(e,t,n,o),"channelsFirst"===a&&(i=wi(i,[0,4,1,2,3])),i}))}$w.className="ZeroPadding2D",eo.registerClass($w);var Aw=class extends yb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Km(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(cg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Km(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}cg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,zg(this.padding),this.inputSpec=[new db({ndim:3})]}computeOutputShape(e){let t=Sv((e=ib(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return To((()=>{this.invokeCallHook(e,t),e=ey(sb(e),2);let n=this.poolingFunction(sb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return fp(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Fw=class extends Aw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Lg(a),zg(r),_w(e,t,n,r,a,"max")}};Fw.className="MaxPooling1D",eo.registerClass(Fw);var Rw=class extends Aw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Lg(a),zg(r),_w(e,t,n,r,a,"avg")}};Rw.className="AveragePooling1D",eo.registerClass(Rw);var Dw=class extends yb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Km(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];cg(this.poolSize,"poolSize"),cg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lg(this.dataFormat),zg(this.padding),this.inputSpec=[new db({ndim:4})]}computeOutputShape(e){e=ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Sv(t,this.poolSize[0],this.padding,this.strides[0]),n=Sv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return To((()=>(this.invokeCallHook(e,t),this.poolingFunction(sb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Mw=class extends Dw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Lg(a),zg(r),_w(e,t,n,r,a,"max")}};Mw.className="MaxPooling2D",eo.registerClass(Mw);var Ow=class extends Dw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Lg(a),zg(r),_w(e,t,n,r,a,"avg")}};Ow.className="AveragePooling2D",eo.registerClass(Ow);var Lw=class extends yb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Km(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];cg(this.poolSize,"poolSize"),cg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lg(this.dataFormat),zg(this.padding),this.inputSpec=[new db({ndim:5})]}computeOutputShape(e){e=ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Sv(t,this.poolSize[0],this.padding,this.strides[0]),n=Sv(n,this.poolSize[1],this.padding,this.strides[1]),r=Sv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return To((()=>(this.invokeCallHook(e,t),this.poolingFunction(sb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},zw=class extends Lw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Lg(a),zg(r),Ew(e,t,n,r,a,"max")}};zw.className="MaxPooling3D",eo.registerClass(zw);var Pw=class extends Lw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Lg(a),zg(r),Ew(e,t,n,r,a,"avg")}};Pw.className="AveragePooling3D",eo.registerClass(Pw);var Bw=class extends yb{constructor(e){super(e),this.inputSpec=[new db({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Xm}},Ww=class extends Bw{constructor(e){super(e||{})}call(e,t){return To((()=>{let t=sb(e);return oh(t,1)}))}};Ww.className="GlobalAveragePooling1D",eo.registerClass(Ww);var Vw=class extends Bw{constructor(e){super(e||{})}call(e,t){return To((()=>{let t=sb(e);return Bu(t,1)}))}};Vw.className="GlobalMaxPooling1D",eo.registerClass(Vw);var Uw=class extends yb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lg(this.dataFormat),this.inputSpec=[new db({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Xm}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Gw=class extends Uw{call(e,t){return To((()=>{let t=sb(e);return"channelsLast"===this.dataFormat?oh(t,[1,2]):oh(t,[2,3])}))}};Gw.className="GlobalAveragePooling2D",eo.registerClass(Gw);var Hw=class extends Uw{call(e,t){return To((()=>{let t=sb(e);return"channelsLast"===this.dataFormat?Bu(t,[1,2]):Bu(t,[2,3])}))}};Hw.className="GlobalMaxPooling2D",eo.registerClass(Hw);var jw=class extends yb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=Fb(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},qw=class extends jw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ib(e)).length<3)throw new Km(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=ib(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return To((()=>Vv(((e,n)=>[sb(this.layer.call(e,t)),[]]),e=sb(e),[],!1,null,null,!1,!0)[1]))}};qw.className="TimeDistributed",eo.registerClass(qw);var Kw=class extends jw{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Fb(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Fb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){pg(Mg,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new Xm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):eg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=Wv(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new Km("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new db({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Xm("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof cb;for(let e of s)if(e instanceof cb!==o)throw new Km("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return To((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=Vh(r,1)),"concat"===this.mergeMode?s=ay([n,r]):"sum"===this.mergeMode?s=Bo(n,r):"ave"===this.mergeMode?s=Uo(.5,Bo(n,r)):"mul"===this.mergeMode?s=Uo(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Vg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Vg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Fb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Xm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function Xw(e){return new vb(e)}function Yw(e){return new wv(e)}function Jw(e){return new bv(e)}function Zw(e){return new xv(e)}function Qw(e){return new vv(e)}function ek(e){return new Iv(e)}function tk(e){return new kv(e)}function nk(e){return new Lv(e)}function rk(e){return new Fv(e)}function ak(e){return new Dv(e)}function sk(e){return new Rv(e)}function ik(e){return new Ov(e)}function ok(e){return new zv(e)}function lk(e){return new Pv(e)}function uk(e){return new Bv(e)}function hk(e){return new iw(e)}function pk(e){return new aw(e)}function dk(e){return new nw(e)}function ck(e){return new rw(e)}function fk(e){return new sw(e)}function mk(e){return new ow(e)}function gk(e){return new lw(e)}function yk(e){return new uw(e)}function bk(e){return new pw(e)}function xk(e){return new cw(e)}function vk(e){return new mw(e)}function wk(e){return new bw(e)}function kk(e){return new gw(e)}function Ik(e){return new yw(e)}function Nk(e){return new fw(e)}function Sk(e){return new vw(e)}function Ck(e){return new Cw(e)}function Tk(e){return new Tw(e)}function $k(e){return new $w(e)}function _k(e){return new Rw(e)}function Ek(e){return _k(e)}function Ak(e){return _k(e)}function Fk(e){return new Ow(e)}function Rk(e){return Fk(e)}function Dk(e){return Fk(e)}function Mk(e){return new Pw(e)}function Ok(e){return Mk(e)}function Lk(e){return Mk(e)}function zk(e){return new Ww(e)}function Pk(e){return new Gw(e)}function Bk(e){return new Vw(e)}function Wk(e){return new Hw(e)}function Vk(e){return new Fw(e)}function Uk(e){return new Mw(e)}function Gk(e){return new zw(e)}function Hk(e){return new Kv(e)}function jk(e){return new qv(e)}function qk(e){return new Yv(e)}function Kk(e){return new Xv(e)}function Xk(e){return new jv(e)}function Yk(e){return new Hv(e)}function Jk(e){return new tw(e)}function Zk(e){return new ew(e)}function Qk(e){return new Uv(e)}function eI(e){return new Jv(e)}function tI(e){return new Kw(e)}function nI(e){return new qw(e)}Kw.className="Bidirectional",eo.registerClass(Kw);var rI=Bk,aI=Wk,sI=Vk,iI=Uk;function oI(e){return new ww(e)}function lI(e){return new kw(e)}function uI(e){return new Iw(e)}function hI(e){return new hw(e)}var pI={};function dI(e,t){return Ub(e,t)}function cI(e,t){return Kb(e,t)}function fI(e,t){return Xb(e,t)}function mI(e,t){return Gb(e,t)}function gI(e,t){return Yb(e,t)}function yI(e,t){return jb(e,t)}function bI(e,t){return qb(e,t)}function xI(e,t){return Bb(e,t)}function vI(e,t){return Mb(e,t)}function wI(e,t){return Ob(e,t)}function kI(e,t){return Ob(e,t)}function II(e,t){return Ob(e,t)}function NI(e,t){return Db(e,t)}function SI(e,t){return Db(e,t)}function CI(e,t){return Db(e,t)}v(pI,{MAPE:()=>kI,MSE:()=>SI,binaryAccuracy:()=>dI,binaryCrossentropy:()=>cI,categoricalAccuracy:()=>mI,categoricalCrossentropy:()=>gI,cosineProximity:()=>xI,mape:()=>II,meanAbsoluteError:()=>vI,meanAbsolutePercentageError:()=>wI,meanSquaredError:()=>NI,mse:()=>CI,precision:()=>yI,recall:()=>bI,sparseCategoricalAccuracy:()=>fI});var TI={};v(TI,{modelFromJSON:()=>Bx});var $I={};function _I(e){return new cv(e)}function EI(e){return function(e){return pv(e),new cv({l1:null!=e?e.l1:null,l2:0})}(e)}function AI(e){return function(e){return pv(e),new cv({l2:null!=e?e.l2:null,l1:0})}(e)}v($I,{l1:()=>EI,l1l2:()=>_I,l2:()=>AI});var FI=class extends Nb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof zx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function RI(e,t){return e<t}function DI(e,t){return e>t}var MI=class extends FI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Xm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=RI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=DI:this.monitorFunc=RI,this.monitorFunc===RI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===RI?1/0:-1/0}async onEpochEnd(e,t){await kb(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};var OI,LI,zI={earlyStopping:function(e){return new MI(e)}};!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(OI||(OI={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(LI||(LI={}));var PI={};function BI(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};PI[e]=n}function WI(e){return PI[e]}function VI(e){delete PI[e]}function UI(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return GI(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>GI(e,n,r,a)));let o=GI(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:ra.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function GI(e,t,n,r){let[a,s]=qI(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[jI(a,e)]));return void 0!==i?t[jI(a,i)][s]:void 0}function HI(e,t){let[n,r]=qI(e);return[jI(n,t&&t.currentContextId),r]}function jI(e,t){return t?`${e}-${t}`:e}function qI(e){let t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function KI(e,t,n){let r=UI("pad",e,t,n);if("explicit"===r){r=UI("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function XI(e){return e.kept?e:Zs(e)}var YI={};v(YI,{json:()=>JI});var JI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ZI={};v(ZI,{json:()=>QI});var QI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],eN={};v(eN,{json:()=>tN});var tN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],nN={};v(nN,{json:()=>rN});var rN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],aN={};v(aN,{json:()=>sN});var sN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],iN={};v(iN,{json:()=>oN});var oN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lN={};v(lN,{json:()=>uN});var uN=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],hN={};v(hN,{json:()=>pN});var pN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],dN={};v(dN,{json:()=>cN});var cN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],fN={};v(fN,{json:()=>mN});var mN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],gN={};v(gN,{json:()=>yN});var yN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bN={};v(bN,{json:()=>xN});var xN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vN={};v(vN,{json:()=>wN});var wN=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],kN={};v(kN,{json:()=>IN});var IN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],NN={};v(NN,{json:()=>SN});var SN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],CN={};v(CN,{json:()=>TN});var TN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],$N={};v($N,{json:()=>_N});var _N=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],EN=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[YI,ZI,eN,nN,aN,iN,lN,gN,fN,hN,bN,vN,kN,NN,CN,$N,dN].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach((e=>{let[n]=HI(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(h).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(h).forEach((e=>{let[t]=HI(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=HI(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=WI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=FN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=FN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=VN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=VN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=DN(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=DN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=WN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=WN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=RN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=RN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=GN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=GN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=BN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=BN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=UN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=UN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=LN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=LN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=zN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=zN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=ON(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ON(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=HI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:MN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach((e=>{let[n]=HI(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=HI(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function AN(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Ge().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function FN(e,t,n,r=!1){let a=e[t];return null!=a?AN(a.s,r):n}function RN(e,t,n){let r=e[t];return r?r.b:n}function DN(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function MN(e){switch("string"==typeof e&&(e=OI[e]),e){case OI.DT_FLOAT:return"float32";case OI.DT_INT32:case OI.DT_INT64:case OI.DT_INT8:case OI.DT_UINT8:return"int32";case OI.DT_BOOL:return"bool";case OI.DT_DOUBLE:return"float32";case OI.DT_STRING:return"string";default:return null}}function ON(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function LN(e,t,n){let r=e[t];return r&&r.type?MN(r.type):n}function zN(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>MN(e))):n}function PN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function BN(e,t,n){let r=e[t];return r&&r.shape?PN(r.shape):n}function WN(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function VN(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>AN(e,r))):n}function UN(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>PN(e))):n}function GN(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function HN(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ra.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];ra.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function jN(e){return!("number"==typeof e||e.some((e=>e<0)))}function qN(e,t,n){let r=KN(e,n),a=!jN(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=KN(e.shape,r)})),!jN(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function KN(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var XN=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);HN(t,e.shape,"TensorList shape mismatch: "),_o(e)})),this.idTensor=Xh(0),this.maxNumElements=r,_o(this.idTensor)}get id(){return this.idTensor.id}copy(){return new XN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);HN(e,this.elementShape,"TensorList shape mismatch: ");let r=qN(this.elementShape,this.tensors,e);return To((()=>{let e=this.tensors.map((e=>gl(e,r)));return mp(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=qN(this.elementShape,this.tensors,e),r=this.tensors.pop();return HN(r.shape,e,"TensorList shape mismatch: "),gl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(HN(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");_o(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);HN(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=qN(this.elementShape,this.tensors,t);return gl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);HN(this.elementShape,t.shape,"TensorList shape mismatch: "),_o(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);HN(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=qN(this.elementShape,this.tensors,n);return 0===e.length?ss([],[0].concat(r)):To((()=>{let t=e.map((e=>gl(this.tensors[e],r)));return mp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);HN(this.elementShape,t,"TensorList shape mismatch: ");let n=qN(this.elementShape,this.tensors,t);return 0===this.size()?ss([],[0].concat(n)):To((()=>{let e=this.tensors.map((e=>gl(e,n)));return xl(e,0)}))}};var YN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=UI("thenBranch",e,t,n),a=UI("elseBranch",e,t,n),s=UI("cond",e,t,n),i=UI("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=UI("body",e,t,n),a=UI("cond",e,t,n),s=UI("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[XI(UI("pred",e,t,n))];case"Switch":{let r=UI("pred",e,t,n),a=UI("data",e,t,n);return a.kept||(a=XI(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==GI(e,t,n)));if(r){return[XI(GI(r,t,n))]}return}case"Enter":{let r=UI("frameName",e,t,n),a=UI("tensor",e,t,n);return n.enterFrame(r),[XI(a)]}case"Exit":{let r=UI("tensor",e,t,n);return n.exitFrame(),[XI(r)]}case"NextIteration":{let r=UI("tensor",e,t,n);return n.nextIteration(),[XI(r)]}case"TensorArrayV3":{let r=UI("size",e,t,n),a=UI("dtype",e,t,n),s=UI("elementShape",e,t,n),i=UI("dynamicSize",e,t,n),o=UI("clearAfterRead",e,t,n),l=UI("identicalElementShapes",e,t,n),u=UI("name",e,t,n),h=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Xh(0),_o(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),HN(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,_o(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ss([],[0].concat(this.elementShape));let n=this.readMany(e);return HN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),mp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ss([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return HN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),xl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,$p(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];To((()=>{t=gl(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=gl(wl(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,Xh(1)]}case"TensorArrayWriteV3":{let r=UI("tensorArrayId",e,t,n),a=UI("index",e,t,n),s=UI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=UI("tensorArrayId",e,t,n),a=UI("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=UI("tensorArrayId",e,t,n),a=UI("indices",e,t,n),s=UI("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=UI("tensorArrayId",e,t,n),a=UI("indices",e,t,n),s=UI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=UI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=UI("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=UI("tensorArrayId",e,t,n),a=UI("tensor",e,t,n),s=UI("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=UI("tensorArrayId",e,t,n);return[Xh(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=UI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=UI("tensorListId",e,t,n),a=UI("index",e,t,n),s=UI("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=UI("tensorListId",e,t,n),a=UI("index",e,t,n),s=UI("elementShape",e,t,n),i=UI("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=UI("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new XN([],n,e.dtype,r),i=$p(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(UI("tensor",e,t,n),r,UI("elementShape",e,t,n),UI("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=UI("elementShape",e,t,n),s=UI("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new XN([],e,t,n)}(a,s,UI(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=UI("tensorListId",e,t,n),a=UI("indices",e,t,n),s=UI("elementShape",e,t,n),i=UI("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=UI("tensorListId",e,t,n),a=UI("elementShape",e,t,n),s=UI("elementDType",e,t,n),i=UI("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);HN(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=$p(e);return new XN(a,t,r)}(UI("tensor",e,t,n),UI("elementShape",e,t,n),UI("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{let r=UI("tensorListId",e,t,n),a=n.getTensorList(r.id),s=UI("dtype",e,t,n),i=UI("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=UI("tensorListId",e,t,n),a=UI("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=UI("tensorListId",e,t,n),a=UI("elementShape",e,t,n),s=UI("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=UI("tensor",e,t,n),a=UI("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=KN(e.shape.slice(1),n),i=0===r?0:e.size/r,o=To((()=>{let n=[];e=gl(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=gl(wl(e,o,l),s)}return e.dispose(),n})),l=new XN([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,UI("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function JN(e,t,n){let[r,a]=UI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,l=UI("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=UI("strides",e,t,n),h=KI(e,t,n),p=UI("dataFormat",e,t,n).toUpperCase(),d=UI("dilations",e,t,n),[c,f]=UI("args",e,t,n);return{stride:u,pad:h,dataFormat:p,dilations:d,biasArg:c,preluArg:f,activationFunc:a,leakyreluAlpha:UI("leakyreluAlpha",e,t,n)}}function ZN(e,t,n){return{boxes:UI("boxes",e,t,n),scores:UI("scores",e,t,n),maxOutputSize:UI("maxOutputSize",e,t,n),iouThreshold:UI("iouThreshold",e,t,n),scoreThreshold:UI("scoreThreshold",e,t,n),softNmsSigma:UI("softNmsSigma",e,t,n)}}var QN=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=UI("keyDType",e,t,n),s=UI("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Xh(0),this.tensorMap=new Map,_o(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Xh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),To((()=>{let e=$p(t),r=n.length,a=e.length;ra.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];_o(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return To((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return mp(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=UI("tableHandle",e,t,n,r),s=UI("keys",e,t,n),i=UI("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=UI("tableHandle",e,t,n,r),s=UI("keys",e,t,n),i=UI("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=UI("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function eS(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return To((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Bo(UI("a",e,t,n),UI("b",e,t,n))];case"AddN":return[qo(UI("tensors",e,t,n))];case"FloorMod":case"Mod":return[ph(UI("a",e,t,n),UI("b",e,t,n))];case"Mul":return[Uo(UI("a",e,t,n),UI("b",e,t,n))];case"RealDiv":case"Div":return[Vo(UI("a",e,t,n),UI("b",e,t,n))];case"DivNoNan":return[su(UI("a",e,t,n),UI("b",e,t,n))];case"FloorDiv":return[Wo(UI("a",e,t,n),UI("b",e,t,n))];case"Sub":return[Wu(UI("a",e,t,n),UI("b",e,t,n))];case"Minimum":return[uh(UI("a",e,t,n),UI("b",e,t,n))];case"Maximum":return[ih(UI("a",e,t,n),UI("b",e,t,n))];case"Pow":return[$h(UI("a",e,t,n),UI("b",e,t,n))];case"SquaredDifference":return[cp(UI("a",e,t,n),UI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return To((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Go(UI("x",e,t,n))];case"Acos":return[Ho(UI("x",e,t,n))];case"Acosh":return[jo(UI("x",e,t,n))];case"Asin":return[Zo(UI("x",e,t,n))];case"Asinh":return[Qo(UI("x",e,t,n))];case"Atan":return[el(UI("x",e,t,n))];case"Atan2":return[tl(UI("x",e,t,n),UI("y",e,t,n))];case"Atanh":return[nl(UI("x",e,t,n))];case"Ceil":return[Fl(UI("x",e,t,n))];case"Complex":return[rs(UI("real",e,t,n),UI("imag",e,t,n))];case"Cos":return[Hl(UI("x",e,t,n))];case"Cosh":return[jl(UI("x",e,t,n))];case"Elu":return[ou(UI("x",e,t,n))];case"Erf":return[lu(UI("x",e,t,n))];case"Exp":return[uu(UI("x",e,t,n))];case"Expm1":return[pu(UI("x",e,t,n))];case"Floor":return[mu(UI("x",e,t,n))];case"Log":return[$u(UI("x",e,t,n))];case"Log1p":return[_u(UI("x",e,t,n))];case"Imag":return[xu(UI("x",e,t,n))];case"Neg":return[Lu(UI("x",e,t,n))];case"Reciprocal":return[Ph(UI("x",e,t,n))];case"Real":return[zh(UI("x",e,t,n))];case"Relu":return[Bh(UI("x",e,t,n))];case"Round":return[qh(UI("x",e,t,n))];case"Selu":return[Yh(UI("x",e,t,n))];case"Sigmoid":return[vl(UI("x",e,t,n))];case"Sin":return[ep(UI("x",e,t,n))];case"Sign":return[Qh(UI("x",e,t,n))];case"Sinh":return[tp(UI("x",e,t,n))];case"Softplus":return[zu(UI("x",e,t,n))];case"Sqrt":return[dp(UI("x",e,t,n))];case"Square":return[dh(UI("x",e,t,n))];case"Tanh":return[kl(UI("x",e,t,n))];case"Tan":return[bp(UI("x",e,t,n))];case"ClipByValue":return[Rl(UI("x",e,t,n),UI("clipValueMin",e,t,n),UI("clipValueMax",e,t,n))];case"Relu6":return[Wh(UI("x",e,t,n))];case"Rsqrt":return[Kh(GI(e.inputNames[0],t,n))];case"Prod":return[Eh(UI("x",e,t,n),UI("axes",e,t,n))];case"LeakyRelu":return[Iu(UI("x",e,t,n),UI("alpha",e,t,n))];case"Prelu":return[_h(UI("x",e,t,n),UI("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return YN(e,t,n);case"convolution":return To((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=UI("stride",e,t,n),a=UI("pad",e,t,n),s=UI("dataFormat",e,t,n).toUpperCase(),i=UI("dilation",e,t,n);return[Pl(UI("x",e,t,n),UI("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=UI("strides",e,t,n),a=KI(e,t,n),s=UI("dataFormat",e,t,n).toUpperCase(),i=UI("dilations",e,t,n);return[zl(UI("x",e,t,n),UI("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=JN(e,t,n);return[Up.conv2d({x:UI("x",e,t,n),filter:UI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=JN(e,t,n);return[Up.depthwiseConv2d({x:UI("x",e,t,n),filter:UI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=UI("outputShape",e,t,n),a=UI("strides",e,t,n),s=KI(e,t,n);return[Wl(UI("x",e,t,n),UI("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=UI("strides",e,t,n),a=KI(e,t,n),s=UI("dilations",e,t,n),i=UI("dataFormat",e,t,n).toUpperCase();return[Yl(UI("input",e,t,n),UI("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("dataFormat",e,t,n).toUpperCase(),i=UI("dilations",e,t,n);return[Vl(UI("x",e,t,n),UI("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("kernelSize",e,t,n);return[yl(UI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("kernelSize",e,t,n);return[rh(UI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("kernelSize",e,t,n),i=UI("includeBatchInIndex",e,t,n),{result:o,indexes:l}=sh(UI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("kernelSize",e,t,n);return[bl(UI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("kernelSize",e,t,n);return[ah(UI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=UI("strides",e,t,n),a=UI("pad",e,t,n),s=UI("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[Zl(UI("x",e,t,n),UI("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return To((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=UI("shape",e,t,n),a=UI("dtype",e,t,n);return[fu(r,UI("value",e,t,n),a)]}case"LinSpace":return[Cu(UI("start",e,t,n),UI("stop",e,t,n),UI("num",e,t,n))];case"Multinomial":{let r=UI("logits",e,t,n),a=UI("numSamples",e,t,n),s=UI("seed",e,t,n);return[mh(r,a,s)]}case"OneHot":{let r=UI("indices",e,t,n),a=UI("depth",e,t,n),s=UI("onValue",e,t,n),i=UI("offValue",e,t,n);return[vi(r,a,s,i)]}case"Ones":return[bh(UI("shape",e,t,n),UI("dtype",e,t,n))];case"OnesLike":return[xh(UI("x",e,t,n))];case"RandomUniform":return[Oh(UI("shape",e,t,n),UI("minval",e,t,n),UI("maxval",e,t,n),UI("dtype",e,t,n))];case"Range":return[Lh(UI("start",e,t,n),UI("stop",e,t,n),UI("step",e,t,n),UI("dtype",e,t,n))];case"TruncatedNormal":{let r=UI("shape",e,t,n),a=UI("mean",e,t,n),s=UI("stdDev",e,t,n),i=UI("seed",e,t,n);return[Sp(r,a,s,UI("dtype",e,t,n),i)]}case"Zeros":return[yh(UI("shape",e,t,n),UI("dtype",e,t,n))];case"ZerosLike":return[au(UI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=ZN(e,t,n),u=await Vd.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=ZN(e,t,n),l=UI("padToMaxOutputSize",e,t,n),u=await Vd.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=ZN(e,t,n);return[await Vd.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=Js(UI("condition",e,t,n),"bool"),a=[await Ap(r)];return r.dispose(),a}case"ListDiff":return Zh(UI("x",e,t,n),UI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return To((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{let r=UI("x",e,t,n),a=UI("k",e,t,n),s=UI("sorted",e,t,n),i=Np(r,a,s);return[i.values,i.indices]}case"Unique":{let r=UI("x",e,t,n),a=Cp(r);return[a.values,a.indices]}case"UniqueV2":{let r=UI("x",e,t,n),a=UI("axis",e,t,n),s=Cp(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return To((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=UI("images",e,t,n),a=UI("size",e,t,n),s=UI("alignCorners",e,t,n),i=UI("halfPixelCenters",e,t,n);return[Vd.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=UI("images",e,t,n),a=UI("size",e,t,n),s=UI("alignCorners",e,t,n),i=UI("halfPixelCenters",e,t,n);return[Vd.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=UI("image",e,t,n),a=UI("boxes",e,t,n),s=UI("boxInd",e,t,n),i=UI("cropSize",e,t,n),o=UI("method",e,t,n),l=UI("extrapolationValue",e,t,n);return[Vd.cropAndResize(r,a,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return To((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=UI("default",e,t,n);return[GI(e.name,t,n)||r];case"Placeholder":return[GI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[XI(UI("x",e,t,n))];case"IdentityN":return UI("x",e,t,n).map((e=>XI(e)));case"Shape":return[xp(UI("x",e,t,n).shape,"int32")];case"ShapeN":return UI("x",e,t,n).map((e=>xp(e.shape)));case"Size":return[Xh(UI("x",e,t,n).size,"int32")];case"Rank":return[Xh(UI("x",e,t,n).rank,"int32")];case"NoOp":return[Xh(1)];case"Print":let a=UI("x",e,t,n),s=UI("data",e,t,n),i=UI("message",e,t,n),o=UI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return To((()=>((e,t,n)=>{switch(e.op){case"Equal":return[nu(UI("a",e,t,n),UI("b",e,t,n))];case"NotEqual":return[gh(UI("a",e,t,n),UI("b",e,t,n))];case"Greater":return[yu(UI("a",e,t,n),UI("b",e,t,n))];case"GreaterEqual":return[bu(UI("a",e,t,n),UI("b",e,t,n))];case"Less":return[Nu(UI("a",e,t,n),UI("b",e,t,n))];case"LessEqual":return[Su(UI("a",e,t,n),UI("b",e,t,n))];case"LogicalAnd":return[Qu(UI("a",e,t,n),UI("b",e,t,n))];case"LogicalNot":return[eh(UI("a",e,t,n))];case"LogicalOr":return[th(UI("a",e,t,n),UI("b",e,t,n))];case"Select":case"SelectV2":return[ru(UI("condition",e,t,n),UI("a",e,t,n),UI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return To((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[xi(UI("a",e,t,n),UI("b",e,t,n),UI("transposeA",e,t,n),UI("transposeB",e,t,n))];case"Transpose":return[wi(UI("x",e,t,n),UI("perm",e,t,n))];case"_FusedMatMul":let[r,a]=UI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=UI("numArgs",e,t,n),l=UI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=UI("args",e,t,n);return[Up.matMul({a:UI("a",e,t,n),b:UI("b",e,t,n),transposeA:UI("transposeA",e,t,n),transposeB:UI("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return To((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Cl(UI("x",e,t,n),UI("mean",e,t,n),UI("variance",e,t,n),UI("offset",e,t,n),UI("scale",e,t,n),UI("epsilon",e,t,n))];case"LRN":return[Tu(UI("x",e,t,n),UI("radius",e,t,n),UI("bias",e,t,n),UI("alpha",e,t,n),UI("beta",e,t,n))];case"Softmax":return[ip(UI("x",e,t,n))];case"LogSoftmax":return[Uu(UI("x",e,t,n))];case"SparseToDense":return[Lp(UI("sparseIndices",e,t,n),UI("outputShape",e,t,n),UI("sparseValues",e,t,n),UI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return To((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[Bu(UI("x",e,t,n),r,a)]}case"Mean":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[oh(UI("x",e,t,n),r,a)]}case"Min":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[lh(UI("x",e,t,n),r,a)]}case"Sum":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[Vu(UI("x",e,t,n),r,a)]}case"All":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[Ko(UI("x",e,t,n),r,a)]}case"Any":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[Xo(UI("x",e,t,n),r,a)]}case"ArgMax":{let r=UI("axis",e,t,n);return[Yo(UI("x",e,t,n),r)]}case"ArgMin":{let r=UI("axis",e,t,n);return[Jo(UI("x",e,t,n),r)]}case"Prod":{let r=UI("axis",e,t,n),a=UI("keepDims",e,t,n);return[Eh(UI("x",e,t,n),r,a)]}case"Cumsum":{let r=UI("axis",e,t,n),a=UI("exclusive",e,t,n),s=UI("reverse",e,t,n);return[ql(UI("x",e,t,n),r,a,s)]}case"Bincount":let r=UI("x",e,t,n),a=UI("weights",e,t,n),s=UI("size",e,t,n);return[El(r,a,s)];case"DenseBincount":{let r=UI("x",e,t,n),a=UI("weights",e,t,n),s=UI("size",e,t,n),i=UI("binaryOutput",e,t,n);return[Kl(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return To((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=UI("n",e,t,n),a=UI("axis",e,t,n),s=UI("tensors",e,t,n);return s=s.slice(0,r),[xl(s,a)]}case"Gather":{let r=UI("x",e,t,n),a=UI("indices",e,t,n);return[gu(r,Js(a,"int32"),0)]}case"GatherV2":{let r=UI("axis",e,t,n),a=UI("batchDims",e,t,n),s=UI("x",e,t,n),i=UI("indices",e,t,n);return[gu(s,Js(i,"int32"),r,a)]}case"Reverse":{let r=UI("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=UI("x",e,t,n);return[Vh(s,a)]}case"ReverseV2":{let r=UI("axis",e,t,n),a=UI("x",e,t,n);return[Vh(a,r)]}case"Slice":{let r=UI("begin",e,t,n),a=UI("size",e,t,n);return[wl(UI("x",e,t,n),r,a)]}case"StridedSlice":{let r=UI("begin",e,t,n),a=UI("end",e,t,n),s=UI("strides",e,t,n),i=UI("beginMask",e,t,n),o=UI("endMask",e,t,n),l=UI("ellipsisMask",e,t,n),u=UI("newAxisMask",e,t,n),h=UI("shrinkAxisMask",e,t,n),p=UI("x",e,t,n);return[yp(p,r,a,s,i,o,l,u,h)]}case"Pack":return To((()=>{let r=UI("axis",e,t,n),a=UI("tensors",e,t,n),s=a[0].shape,i=fp(a[0]).shape,o=a.map((e=>{let t=ra.arraysEqual(e.shape,s);if(!t&&!ra.arraysEqual(fp(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:gl(e,s)}));return[mp(o,r)]}));case"Unpack":{let r=UI("axis",e,t,n),a=UI("tensor",e,t,n);return $p(a,r)}case"Tile":{let r=UI("reps",e,t,n);return[du(UI("x",e,t,n),r)]}case"Split":case"SplitV":{let r=UI("axis",e,t,n),a=UI("numOrSizeSplits",e,t,n),s=UI("x",e,t,n);return hp(s,a,r)}case"ScatterNd":{let r=UI("indices",e,t,n),a=UI("values",e,t,n),s=UI("shape",e,t,n);return[Op(r,a,s)]}case"GatherNd":{let r=UI("x",e,t,n),a=UI("indices",e,t,n);return[zp(r,a)]}case"SparseToDense":{let r=UI("sparseIndices",e,t,n),a=UI("outputShape",e,t,n),s=UI("sparseValues",e,t,n),i=UI("defaultValue",e,t,n);return[Lp(r,s,a,s.dtype===i.dtype?i:Js(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return To((()=>((e,t,n)=>{switch(e.op){case"FFT":return[op(UI("x",e,t,n))];case"IFFT":return[lp(UI("x",e,t,n))];case"RFFT":return[pp(UI("x",e,t,n))];case"IRFFT":return[up(UI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return To((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Js(UI("x",e,t,n),UI("dtype",e,t,n))];case"ExpandDims":{let r=UI("axis",e,t,n);return[hu(UI("x",e,t,n),r)]}case"Squeeze":{let r=UI("axis",e,t,n);return[fp(UI("x",e,t,n),r)]}case"Reshape":return[gl(UI("x",e,t,n),UI("shape",e,t,n))];case"MirrorPad":return[hh(UI("x",e,t,n),UI("padding",e,t,n),UI("mode",e,t,n))];case"PadV2":case"Pad":return[wh(UI("x",e,t,n),UI("padding",e,t,n),UI("constantValue",e,t,n))];case"SpaceToBatchND":{let r=UI("blockShape",e,t,n),a=UI("paddings",e,t,n);return[Ch(UI("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=UI("blockShape",e,t,n),a=UI("crops",e,t,n);return[Nl(UI("x",e,t,n),r,a)]}case"DepthToSpace":{let r=UI("blockSize",e,t,n),a=UI("dataFormat",e,t,n).toUpperCase();return[Xl(UI("x",e,t,n),r,a)]}case"BroadcastTo":return[Al(UI("x",e,t,n),UI("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return QN(e,t,n,r);case"custom":let a=WI(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return GI(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return GI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return DN(this.node.rawAttrs,e,t);if(null!=n.s)return FN(this.node.rawAttrs,e,t);if(null!=n.b)return RN(this.node.rawAttrs,e,t);if(null!=n.shape)return BN(this.node.rawAttrs,e,t);if(null!=n.type)return LN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return WN(this.node.rawAttrs,e,t);if(null!=n.list.s)return VN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return UN(this.node.rawAttrs,e,t);if(null!=n.list.b)return GN(this.node.rawAttrs,e,t);if(null!=n.list.type)return zN(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ra.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var tS=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function nS(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>qI(e)[0])),h=[];null!=r&&(h=r.map((e=>qI(e.name)[0])));let p=[...t];for(;p.length>0;){let e=p.pop();if((iS(e)||oS(e)||lS(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var rS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],aS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],sS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function iS(e){return rS.indexOf(e.op)>=0}function oS(e){return aS.indexOf(e.op)>=0}function lS(e){return sS.indexOf(e.op)>=0}var uS=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new uS(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=nS(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>qI(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[qI(e)[0]])),a=t.map((e=>qI(e)[0])),s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return To((()=>{let n=new tS(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=qI(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=eS(t,r,n,this._resourceManager);if(ra.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>GI(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let t=function(e,t,n){return t[jI(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let s=new tS(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>GI(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),h=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{e&&!e.isDisposed&&!h.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(h),o}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[qI(e)[0]])),i=n.map((e=>qI(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=nS(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=qI(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!iS(e)&&!GI(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&UI("isConstant",e.node,r,n)&&([h]=HI(e.node.name,n)),null==r[e.node.name]){let p=eS(e.node,r,n,this._resourceManager);h||([h]=HI(e.node.name,n));let d=n.currentContext;ra.isPromise(p)?u.push(p.then((u=>(r[h]=u,n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[h]=p,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=HI(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!GI(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!GI(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=qI(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ra.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ra.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=qI(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=qI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},hS="?tfjs-format=file",pS="model.json",dS=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=ei.browserHTTPRequest(e,this.loadOptions);else{let t=ei.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(ei.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=ei.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new uS(EN.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=EN.Instance.transformGraph(e.modelInitializer);this.initializer=new uS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=ei.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ia||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function cS(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${pS}${hS}`);let n=new dS(e,t);return await n.load(),n}var fS="3.3.0",mS={};v(mS,{CSVDataset:()=>oC,Dataset:()=>KS,FileDataSource:()=>vC,TextLineDataset:()=>eC,URLDataSource:()=>wC,array:()=>YS,csv:()=>kC,func:()=>IC,generator:()=>NC,microphone:()=>CC,version_data:()=>TC,webcam:()=>SC,zip:()=>JS});var gS=w(P()),yS=w(P());function bS(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(IS(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=bS(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function xS(e,t=wS){return vS(e,t)}function vS(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(IS(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=vS(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function wS(e){return null===e?null:IS(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function kS(e,t){let n=new Map;bS(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(ra.isPromise(t)){let r=await t;n.set(e,r)}}return bS(e,t,n)}function IS(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ia))}function NS(e){return function(e,t){return bS(e,t)}(e,SS)}function SS(e){return e instanceof Ia?{value:e.clone(),recurse:!1}:IS(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var CS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},TS=class extends CS{constructor(){super(TS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function $S(e){return new FS(e)}function _S(e){return new RS(e)}TS.INITIAL_CAPACITY=32;var ES,AS=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new BS(this,e)}filter(e){return new zS(this,e)}map(e){return new PS(this,e)}mapAsync(e){return new WS(this,e)}serialMapAsync(e){return new WS(this,e).serial()}flatmap(e){return new US(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new LS(this,e,t)}columnMajorBatch(e,t=!0,n=wS){return this.rowMajorBatch(e,t).map((e=>xS(e,n)))}concatenate(e,t){return new GS($S([this,e]),t)}take(e){return e<0||null==e?this:new OS(this,e)}skip(e){return e<0||null==e?this:new MS(this,e)}prefetch(e){return new jS(this,e)}shuffle(e,t){return new qS(this,e,t)}serial(){return new DS(this)}},FS=class extends AS{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:NS(e),done:!1}}},RS=class extends AS{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},DS=class extends AS{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},MS=class extends AS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;$o(e.value)}return this.upstream.next()}},OS=class extends AS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},LS=class extends AS{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},zS=class extends AS{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;$o(e.value)}}},PS=class extends AS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Aa.getTensorsInContainer(e.value),n=this.transform(e.value),r=Aa.getTensorsInContainer(n);for(let e of t)Aa.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},BS=class extends AS{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},WS=class extends AS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Aa.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Aa.getTensorsInContainer(n);for(let e of t)Aa.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},VS=class extends AS{constructor(){super(),this.outputQueue=new TS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},US=class extends VS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Aa.getTensorsInContainer(e.value),n=this.transform(e.value),r=Aa.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)Aa.isTensorInList(e,r)||e.dispose();return!0}},GS=class extends AS{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(ES||(ES={}));var HS=class extends AS{constructor(e,t=ES.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await kS(this.iterators,(function(e){return e instanceof AS?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case ES.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case ES.SHORTEST:return{value:null,done:!0};case ES.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},jS=class extends AS{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new CS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},qS=class extends jS{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=yS.alea(n||ra.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},KS=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return ra.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),XS((async()=>(await r.iterator()).columnMajorBatch(e,t,ZS)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,XS((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,XS((async()=>(await n.iterator()).filter((t=>To((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return XS((async()=>(await t.iterator()).map((t=>To((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return XS((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return XS((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,XS((async()=>function(e,t){return new GS(e,t)}(_S((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,XS((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=gS.alea(t||ra.now().toString());return XS((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,XS((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function XS(e,t=null){return new class extends KS{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function YS(e){return XS((async()=>$S(e)),e.length)}function JS(e){if(!IS(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return XS((async()=>function(e,t=ES.FAIL){return new HS(e,t)}(await kS(e,(e=>{if(e instanceof KS)return{value:e.iterator(),recurse:!1};if(IS(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),ES.SHORTEST)),t)}function ZS(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Ia||ra.isTypedArray(e)}(e[0])?{value:QS(e),recurse:!1}:{value:null,recurse:!0}}function QS(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ia?mp(e):ss(e)}KS.MAX_BUFFER_SIZE=1e4;var eC=class extends KS{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},tC='"',nC=Symbol("out"),rC=Symbol("field"),aC=Symbol("quote"),sC=Symbol("quoteafterquote"),iC=Symbol("quoteinquote"),oC=class extends KS{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new eC(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ra.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ra.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ra.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=nC;for(let t=0;t<a;t++)switch(s){case nC:switch(e.charAt(t)){case tC:r=t+1,s=aC;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=nC;break;default:s=rC,r=t}break;case rC:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=nC,r=t+1;break;case aC:if(e.charAt(t)===tC)s=sC;break;case sC:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=nC,r=t+1;break;case tC:s=aC;break;default:s=iC}break;case iC:if(e.charAt(t)===tC)s=aC}if(s===sC?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},lC=class extends AS{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Ge().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new lC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(ra.sizeFromShape(t));return n.set(e,n.length-e.length),ss(n,t)}},uC=class extends AS{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=xp([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=vp([r,n,s,a],[1,4])}else this.cropBox=vp([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Ge().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new uC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ra.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ni.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return To((()=>{let t,n=hu(Js(e,"float32"),0);t=Vd.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return gl(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},hC=class{},pC=class extends AS{split(e){return new dC(this,e)}},dC=class extends pC{constructor(e,t){super(),this.upstream=e,this.impl=new cC(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},cC=class extends VS{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},fC=class extends AS{decodeUTF8(){return new mC(this)}},mC=class extends pC{constructor(e){super(),this.upstream=e,this.impl=new gC(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},gC=class extends VS{constructor(e){if(super(),this.upstream=e,Ge().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=B();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Ge().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},yC=class extends fC{constructor(e,t={}){super(),this.file=e,this.options=t,ra.assert(e instanceof Uint8Array||!!Ge().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var bC=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function xC(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var vC=class extends hC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(xC(this.input)&&Ge().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new yC(this.input,this.options)}},wC=class extends hC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return xC(this.url)?new vC(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;"string"==typeof e?n=e:(n=e.url,r=bC(e));let a=await ra.fetch(n,r);if(a.ok){let e=new Uint8Array(await a.arrayBuffer());return new yC(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}};function kC(e,t={}){return new oC(new wC(e),t)}function IC(e){let t=_S(e);return XS((async()=>t))}function NC(e){return XS((async()=>{let t=await e();return _S((()=>t.next()))}))}async function SC(e,t){return uC.create(e,t)}async function CC(e){return lC.create(e)}var TC="3.3.0";function $C(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ra.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var _C=Pc.whereImpl,EC=class extends q{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new j(this,No())}nextDataId(){return EC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ge().get("IS_NODE")&&rc.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ra.isString(n[0])){let a=n.map((e=>ra.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return rc.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>ra.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ys(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return No().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=ra.now();return e(),{kernelMs:ra.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){$C([e],"where");let t=this.readSync(e.dataId);return _C(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};EC.nextDataId=0;var AC={};function FC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}v(AC,{addImpl:()=>jC,bincountImpl:()=>YC,bincountReduceImpl:()=>JC,ceilImpl:()=>tT,concatImpl:()=>aT,expImpl:()=>sT,expm1Impl:()=>lT,floorImpl:()=>pT,gatherV2Impl:()=>fT,greaterImpl:()=>mT,lessImpl:()=>bT,linSpaceImpl:()=>wT,logImpl:()=>kT,maxImpl:()=>ST,maximumImpl:()=>CT,minimumImpl:()=>_T,multiplyImpl:()=>FT,negImpl:()=>OT,notEqualImpl:()=>zT,prodImpl:()=>GT,rangeImpl:()=>jT,rsqrtImpl:()=>qT,simpleAbsImpl:()=>FC,sliceImpl:()=>YT,squaredDifferenceImpl:()=>QT,stridedSliceImpl:()=>n$,subImpl:()=>r$,tileImpl:()=>o$,topKImpl:()=>l$,transposeImpl:()=>WT,uniqueImpl:()=>u$});var RC={kernelName:Xe,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;$C(t,"abs");let r=new Float32Array(ra.sizeFromShape(t.shape));return r=FC(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}};function DC(e){return(t,n,r,a,s)=>{let i=rc.assertAndGetBroadcastShape(t,n),o=i.length,l=ra.computeStrides(i),u=ra.sizeFromShape(i),h=ra.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=ra.computeStrides(t),f=ra.computeStrides(n),m=rc.getBroadcastDims(t,i),g=rc.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){let n=ra.indexToLoc(t,o,l),s=n.slice(-p);m.forEach((e=>s[e]=0));let i=ra.locToIndex(s,p,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let y=ra.locToIndex(u,d,f);h[t]=e(r[i],a[y])}return[h,i]}}function MC(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var OC={kernelName:vt,backendName:"cpu",kernelFunc:MC};function LC(e,t,n="float32"){if("complex64"===n){return MC({inputs:{real:LC(e,t,"float32"),imag:LC(e,t,"float32")},backend:e})}let r=ra.makeZerosTypedArray(ra.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function zC(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var PC={kernelName:on,backendName:"cpu",kernelFunc:zC};function BC(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var WC={kernelName:Qn,backendName:"cpu",kernelFunc:BC};function VC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return zC({inputs:{x:a},backend:n});let e=LC(n,a.shape,a.dtype),t=VC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=MC({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=BC({inputs:{input:a},backend:n}),t=VC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ra.hasEncodingLoss(a.dtype,s)){let e=zC({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=ra.toTypedArray([0],a.dtype),[r,s]=DC(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var UC={kernelName:yt,backendName:"cpu",kernelFunc:VC};function GC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;$C([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h=r||s.dtype,[p,d]=t(s.shape,i.shape,l,u,h);return o.makeTensorInfo(d,h,p)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=VC({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=VC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=MC({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function HC(e){return(t,n,r,a,s,i)=>{let o=rc.assertAndGetBroadcastShape(t,n),l=ra.sizeFromShape(o),u=o.length,h=ra.computeStrides(o),p=ra.getTypedArrayFromDType("float32",l),d=ra.getTypedArrayFromDType("float32",l),c=rc.getBroadcastDims(t,o),f=rc.getBroadcastDims(n,o),m=rc.mergeRealAndImagArrays(r,a),g=rc.mergeRealAndImagArrays(s,i),y=t.length,b=ra.computeStrides(t),x=n.length,v=ra.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){let n=ra.indexToLoc(t,u,h),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=ra.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=ra.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}var jC=DC(((e,t)=>e+t)),qC=HC(((e,t,n,r)=>({real:e+n,imag:t+r}))),KC=GC(Ze,jC,qC),XC={kernelName:Ze,backendName:"cpu",kernelFunc:KC};function YC(e,t,n,r,a){let s=ra.sizeFromShape(r),i=ra.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function JC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Ys([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function ZC(e){return(t,n,r)=>{let a=ra.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function QC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if($C(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=ra.sizeFromShape(i.shape),h=n||i.dtype,p=ra.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function eT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if($C(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var tT=ZC((e=>Math.ceil(e))),nT=eT(bt,tT),rT={kernelName:bt,backendName:"cpu",kernelFunc:nT};function aT(e,t,n,r){let a=ra.getArrayFromDType(n,ra.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=ra.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?rc.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var sT=ZC((e=>Math.exp(e))),iT=eT(qt,sT),oT={kernelName:qt,backendName:"cpu",kernelFunc:iT},lT=ZC((e=>Math.expm1(e))),uT=eT(Xt,lT),hT={kernelName:Xt,backendName:"cpu",kernelFunc:uT},pT=ZC((e=>Math.floor(e))),dT=eT(Qt,pT),cT={kernelName:Qt,backendName:"cpu",kernelFunc:dT};function fT(e,t,n){let r=Ys(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);r.values[n]=e.values[l]}return r}var mT=DC(((e,t)=>e>t?1:0)),gT=GC(an,mT,null,"bool"),yT={kernelName:an,backendName:"cpu",kernelFunc:gT},bT=DC(((e,t)=>e<t?1:0)),xT=GC(fn,bT,null,"bool"),vT={kernelName:fn,backendName:"cpu",kernelFunc:xT};function wT(e,t,n){let r=(t-e)/(n-1),a=ra.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var kT=ZC((e=>Math.log(e))),IT=eT(yn,kT),NT={kernelName:yn,backendName:"cpu",kernelFunc:IT};function ST(e,t,n,r){let a=ra.getTypedArrayFromDType(r,ra.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];t>s&&(s=t)}a[n]=s}return a}var CT=DC(((e,t)=>Math.max(e,t))),TT=GC(Cn,CT),$T={kernelName:Cn,backendName:"cpu",kernelFunc:TT},_T=DC(((e,t)=>Math.min(e,t))),ET=GC(Dn,_T),AT={kernelName:Dn,backendName:"cpu",kernelFunc:ET},FT=DC(((e,t)=>e*t)),RT=HC(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),DT=GC(zn,FT,RT),MT={kernelName:zn,backendName:"cpu",kernelFunc:DT};function OT(e,t,n){let r=ra.createScalarValue(-1,n);return FT([],t,r,e,n)}var LT={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;$C(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=OT(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},zT=DC(((e,t)=>e!==t?1:0)),PT=GC(Bn,zT,null,"bool"),BT={kernelName:Bn,backendName:"cpu",kernelFunc:PT};function WT(e,t,n,r,a){let s=t.length,i=ra.sizeFromShape(t),o=ra.computeStrides(t),l=ra.computeStrides(a),u=ra.getTypedArrayFromDType(n,ra.sizeFromShape(a));for(let t=0;t<i;++t){let n=ra.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[ra.locToIndex(a,s,l)]=e[t]}return u}function VT(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;$C(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=WT(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var UT={kernelName:Mr,backendName:"cpu",kernelFunc:VT};function GT(e,t,n,r){let[a,s]=rc.computeOutAndReduceShapes(e,r),i=Ra(t,"int32"),o=ra.makeZerosTypedArray(ra.sizeFromShape(a),i),l=ra.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var HT={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;$C(a,"prod");let o=a.shape.length,l=ra.parseAxisParam(s,a.shape),u=rc.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=VT({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=rc.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=GT(p.shape,p.dtype,c,h),y=m;return i&&(y=rc.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function jT(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ra.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=ra.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var qT=ZC((e=>1/Math.sqrt(e))),KT=eT(hr,qT),XT={kernelName:hr,backendName:"cpu",kernelFunc:KT};function YT(e,t,n,r,a){let s=Li.isSliceContinous(r,t,n),i=ra.sizeFromShape(n),o=ra.computeStrides(r);if(s){let n=Li.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=Ys(r,a,"string"===a?rc.fromUint8ToStringArray(e):e),u=Ys(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?rc.fromStringArrayToUint8(u.values):u.values}function JT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;$C(a,"slice");let[o,l]=Li.parseSliceParams(a,s,i);Li.assertParamsValid(a,o,l);let u=YT(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var ZT={kernelName:fr,backendName:"cpu",kernelFunc:JT},QT=DC(((e,t)=>{let n=e-t;return n*n})),e$=GC(Sr,QT),t$={kernelName:Sr,backendName:"cpu",kernelFunc:e$};function n$(e,t,n,r){let a=Ys(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var r$=DC(((e,t)=>e-t)),a$=HC(((e,t,n,r)=>({real:e-n,imag:t-r}))),s$=GC(Tr,r$,a$),i$={kernelName:Tr,backendName:"cpu",kernelFunc:s$};function o$(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=Ys(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}function l$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=ra.getTypedArrayFromDType(n,i*r),u=ra.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,a=e.subarray(n,n+o),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));let i=t*r,h=l.subarray(i,i+r),p=u.subarray(i,i+r);for(let e=0;e<r;e++)h[e]=s[e].value,p[e]=s[e].index}let h=t.slice();return h[h.length-1]=r,[Ys(h,n,l),Ys(h,"int32",u)]}function u$(e,t,n,r){let a=ra.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new va(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new va(p,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}Lo("cpu",(()=>new EC),1);var h$=QC(Ut,(e=>e>=0?e:Math.exp(e)-1)),p$={kernelName:Ut,backendName:"cpu",kernelFunc:h$};function d$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;$C([a],"leakyRelu");let i=ra.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=ra.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var c$={kernelName:cn,backendName:"cpu",kernelFunc:d$},f$=DC(((e,t)=>e<0?t*e:e));function m$(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;$C([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=f$(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}var g$={kernelName:Yn,backendName:"cpu",kernelFunc:m$},y$=QC(tr,(e=>Math.max(0,e))),b$={kernelName:tr,backendName:"cpu",kernelFunc:y$},x$=QC(or,(e=>Math.min(Math.max(0,e),6))),v$={kernelName:or,backendName:"cpu",kernelFunc:x$};function w$(e,t,n,r,a){if("linear"===n)return zC({inputs:{x:t},backend:e});if("relu"===n)return y$({inputs:{x:t},backend:e});if("elu"===n)return h$({inputs:{x:t},backend:e});if("relu6"===n)return x$({inputs:{x:t},backend:e});if("prelu"===n)return m$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return d$({inputs:{x:t},backend:e,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function k$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ra.sizeFromShape(a.shape),o=ra.inferFromImplicitShape(s,i),l=ra.sizeFromShape(o);ra.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var I$={kernelName:nr,backendName:"cpu",kernelFunc:k$};function N$(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;$C([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ra.sizeFromShape(f),y=ra.sizeFromShape(m),b=g===y||1===g||1===y;ra.assert(l>=2&&u>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));let x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,c]);ra.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let v=o?[y,c,p]:[y,p,c],w=k$({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),k=k$({inputs:{x:s},backend:n,attrs:{shape:v}}),I=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],S=o?k.shape[1]:k.shape[2],C=Math.max(g,y),T=n.data.get(w.dataId).values,$=n.data.get(k.dataId).values,_=ra.computeStrides(w.shape),E=ra.computeStrides(k.shape),[A,F,R]=i?[_[0],1,_[1]]:[_[0],_[1],1],[D,M,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],L=N*S,z=Ys([C,N,S],w.dtype),P=z.values,B=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<N;t+=B)for(let n=0;n<S;n+=B)for(let r=0;r<I;r+=B){let a=Math.min(t+B,N),s=Math.min(n+B,S),i=Math.min(r+B,I);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*A,s=Math.min(e,y-1)*O;n+=T[r+o*F+a*R]*$[a*D+t*M+s]}P[e*L+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}var S$={kernelName:ct,backendName:"cpu",kernelFunc:N$};var C$={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=N$({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=KC({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=w$(s,t,c,h,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},T$=QC(Ye,(e=>Math.acos(e))),$$={kernelName:Ye,backendName:"cpu",kernelFunc:T$},_$=QC(Je,(e=>Math.acosh(e))),E$={kernelName:Je,backendName:"cpu",kernelFunc:_$};var A$={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;$C(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=Ys(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var F$={kernelName:et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;$C(a,"all");let o=ra.parseAxisParam(s,a.shape),l=o,u=rc.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=VT({inputs:{x:a},backend:n,attrs:{perm:u}}),l=rc.getInnerMostAxes(l.length,a.shape.length)),rc.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=rc.computeOutAndReduceShapes(h.shape,l),c=ra.sizeFromShape(d),f=ra.makeZerosTypedArray(ra.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=k$({inputs:{x:g},backend:n,attrs:{shape:rc.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var R$={kernelName:tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;$C(a,"any");let o=ra.parseAxisParam(s,a.shape),l=o,u=rc.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=VT({inputs:{x:a},backend:n,attrs:{perm:u}}),l=rc.getInnerMostAxes(l.length,a.shape.length)),rc.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=rc.computeOutAndReduceShapes(h.shape,l),c=ra.sizeFromShape(d),f=ra.makeZerosTypedArray(ra.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=k$({inputs:{x:g},backend:n,attrs:{shape:rc.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var D$={kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;$C(a,"argMax");let i=ra.parseAxisParam(s,a.shape),o=rc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=VT({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=rc.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],rc.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=rc.computeOutAndReduceShapes(l.shape,i),d=ra.sizeFromShape(h),c=ra.makeZerosTypedArray(d,"int32"),f=ra.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}};var M$={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;$C(a,"argMin");let i=ra.parseAxisParam(s,a.shape),o=rc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=VT({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=rc.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],rc.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=rc.computeOutAndReduceShapes(l.shape,i),d=ra.sizeFromShape(h),c=ra.makeZerosTypedArray(d,"int32"),f=ra.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}},O$=QC(at,(e=>Math.asin(e))),L$={kernelName:at,backendName:"cpu",kernelFunc:O$},z$=QC(st,(e=>Math.asinh(e))),P$={kernelName:st,backendName:"cpu",kernelFunc:z$},B$=QC(it,(e=>Math.atan(e))),W$={kernelName:it,backendName:"cpu",kernelFunc:B$},V$=DC(((e,t)=>Math.atan2(e,t))),U$=GC(lt,V$),G$={kernelName:lt,backendName:"cpu",kernelFunc:U$},H$=QC(ot,(e=>Math.atanh(e))),j$={kernelName:ot,backendName:"cpu",kernelFunc:H$};function q$(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ys(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,h+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let a=m+n*r[1];for(let n=h;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function K$(e,t,n,r,a=!1,s=!1){let i=Ys(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Ys(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function X$(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ys(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let S=w*i-m,C=S;for(;C<0;)C+=u;let T=Math.min(a.inDepth,d+S),$=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),w=$+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=w+n*N,k=b,I=0,S=0;for(let n=C;n<T;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=h){let i=a+n*r[2];for(let n=o;n<c;n+=p){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/S:k}}}}return x}var Y$={kernelName:ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;$C(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ra.assert(rc.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=rc.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&ra.arraysEqual(h.inShape,h.outShape))u=zC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ra.computeStrides(a.shape),r=q$(e,a.shape,a.dtype,t,h,"avg");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var J$={kernelName:pt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;$C(a,"avgPool3d");let h=rc.computePool3DInfo(a.shape,s,i,1,o,l,u),p=X$(n.data.get(a.dataId).values,a.shape,a.dtype,ra.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};var Z$={kernelName:dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;$C([a,s],"avgPool3DGrad");let h=rc.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=v-1-h.padInfo.front,N=k-1-h.padInfo.left,S=w-1-h.padInfo.top,C=Ys(s.shape,"float32"),T=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-I,i=r-S,o=a-N,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/d;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=$.get(e,r,a,s,t))}}}C.set(l*T,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};var Q$={kernelName:ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;$C([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=rc.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,v=y-1-h.padInfo.top,w=Ys(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,N=Ys(a.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=n-v,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/d;a<0||a>=h.outWidth||Math.floor(a)!==a||(i+=N.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var e_={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;ra.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ra.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ra.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),$C([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,v=0,w=0,k=0,I=0;for(let e=0;e<h.length;++e)m[e]=f[v++]+(h[e]-p[w++])*c[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var t_={kernelName:ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;$C([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=rc.getReshaped(a.shape,s,o),u=rc.getPermuted(l.length,s.length),h=rc.getReshapedPermuted(a.shape,s,o),p=rc.getSliceBeginCoords(i,s.length),d=rc.getSliceSize(h,i,s.length),c=k$({inputs:{x:a},backend:n,attrs:{shape:l}}),f=VT({inputs:{x:c},backend:n,attrs:{perm:u}}),m=k$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=JT({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var n_={kernelName:mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=YC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},r_=QC(xt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),a_={kernelName:xt,backendName:"cpu",kernelFunc:r_},s_={kernelName:wt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(ra.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function i_(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var o_={kernelName:un,backendName:"cpu",kernelFunc:i_};function l_(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ra.parseAxisParam(a,t[0].shape)[0],i=rc.computeOutShape(t.map((e=>e.shape)),s);if(0===ra.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>ra.sizeFromShape(e.shape)>0));if(1===o.length)return zC({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(rc.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>BC({inputs:{input:e},backend:n}))),t=o.map((e=>i_({inputs:{input:e},backend:n}))),r=l_({inputs:e,backend:n,attrs:{axis:s}}),a=l_({inputs:t,backend:n,attrs:{axis:s}}),i=MC({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=ra.sizeFromShape(e.shape.slice(s));return k$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=rc.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],d=aT(h,i,t[0].dtype,p),c=rc.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var u_={kernelName:kt,backendName:"cpu",kernelFunc:l_};function h_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;$C([a,s],"conv2d");let p=rc.convertConv2DDataFormat(l),d=rc.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new va(d.outShape,a.dtype),w=ra.computeStrides(a.shape),k=ra.computeStrides(s.shape),I=w[0],N=x?w[1]:w[2],S=x?w[2]:1,C=x?1:w[1],T=v.strides[0],$=x?v.strides[1]:v.strides[2],_=x?v.strides[2]:1,E=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*T;for(let e=0;e<d.outHeight;++e){let r=n+e*$,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){let t=r+e*_,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=i+r*S,o=s+e*k[1];for(let e=0;e<d.inChannels;++e){let n=A[a+e*C];for(let e=0;e<d.outChannels;++e)R[t+e*E]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var p_={kernelName:It,backendName:"cpu",kernelFunc:h_};var d_={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;$C([a,s],"conv2dBackpropFilter");let p=rc.convertConv2DDataFormat(l),d=rc.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new va(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new va(a.shape,a.dtype,w),N=new va(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*c-v;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,h,e,o):I.get(u,i,t,n)*N.get(u,o,h,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var c_={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;$C([a,s],"conv2dBackpropInput");let p=ra.computeStrides(s.shape),d=ra.computeStrides(a.shape),c=rc.convertConv2DDataFormat(u),f=rc.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new va(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:T,outChannels:$,outHeight:_,outWidth:E,strideHeight:A,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=N-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(_,(I+r)/A);for(let i=0;i<T;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min(E,(N+o)/F),h=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+v*(N-1-(r*F-o))+w*t;for(let e=0;e<$;++e){h+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var f_={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;$C([a,s],"conv3d");let u=rc.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new va(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,N=ra.computeStrides(a.shape),S=ra.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*N[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*S[0],i=t+n*N[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*S[1],o=i+r*N[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*S[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var m_={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;$C([a,s],"conv3dBackpropFilterV2");let u=ra.computeStrides(a.shape),h=ra.computeStrides(s.shape),p=rc.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new va(p.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,N=n.data.get(s.dataId).values,[S,C,T,$]=h,_=n.data.get(a.dataId).values,[E,A,F,R]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(p.outDepth,(p.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(p.outHeight,(p.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(p.outWidth,(p.inWidth+M-r)/f),h=r*k+o;for(let o=0;o<p.inChannels;++o){let m=o*I+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*E,y=m*S;for(let m=t;m<n;++m){let t=(e+m*d-D)*A+p,n=m*C+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*T+n;for(let e=l;e<u;++e){let t=e*$+i;g+=_[(r+e*f-M)*R+s+o]*N[t+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var g_={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;$C([a],"conv3dBackpropInputV2");let u=ra.computeStrides(a.shape),h=ra.computeStrides(s.shape),p=rc.computeConv3DInfo(l,s.shape,o,1,i),d=new va(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[N,S,C,T]=h,{batchSize:$,filterDepth:_,filterHeight:E,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=_-1-p.padInfo.front,G=E-1-p.padInfo.top,H=A-1-p.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(_+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(E+o)/W);for(let h=0;h<M;++h){let p=h-H,d=Math.max(0,Math.ceil(p/V)),$=Math.min(P,(A+p)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<$;++i){let o=x*e+v*n+w*r+k*i,l=N*(_-1-a)+S*(E-1-s)+C*(A-1-(i*V-p))+T*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*h+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},y_=QC(_t,(e=>Math.cos(e))),b_={kernelName:_t,backendName:"cpu",kernelFunc:y_},x_=QC(Et,(e=>Math.cosh(e))),v_={kernelName:Et,backendName:"cpu",kernelFunc:x_};var w_={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Ys([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=ra.computeStrides(a.shape),k=ra.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(h<0||h>p-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(h<0||h>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let r=0;r<c;r++){let s=r+p*w[2]+n*w[1]+i*w[0],u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];let h=v[s];s=r+p*w[2]+a*w[1]+i*w[0];let d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];let c=u+(h-u)*b,f=d+(v[s]-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var k_={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;$C(a,"cumsum");let l=rc.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=VT({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=rc.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Ra(u.dtype,"int32"),d=ra.makeZerosTypedArray(ra.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=VT({inputs:{x:g},backend:n,attrs:{perm:rc.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var I_={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=YC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=JC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var N_={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ra.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),ra.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+h*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}};function S_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;$C([a,s],"depthwiseConv2DNative");let h=ra.computeStrides(a.shape),p=ra.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),ra.assert(rc.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=rc.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new va(c.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-x;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-v;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)S[l+e]+=t*N[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var C_={kernelName:Mt,backendName:"cpu",kernelFunc:S_};var T_={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;$C([a,s],"depthwiseConv2dNativeBackpropFilter");let p=rc.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new va(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(a.dataId).values,w=new va(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new va(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(p.outWidth,(p.inWidth+y-r)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,h,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var $_={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;$C([a,s],"depthwiseConv2DNativeBackpropInput");let p=ra.computeStrides(a.shape),d=ra.computeStrides(s.shape),c=rc.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new va(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=p,I=n.data.get(s.dataId).values,[N,S,C]=d,{batchSize:T,filterHeight:$,filterWidth:_,inChannels:E,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=$-1-c.padInfo.top,P=_-1-c.padInfo.left,B=R/E;for(let e=0;e<T;++e)for(let t=0;t<E;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,($+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(_+o)/L),h=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=v*e+w*n+k*r,i=N*($-1-a)+S*(_-1-(r*L-o))+C*t;for(let e=0;e<B;++e){h+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var __={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=ra.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ys([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},E_={kernelName:Pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=rc.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=ra.sizeFromShape(C),$=C.length,_=ra.getArrayFromDType(r.dtype,T);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*v-x.top;for(let s=0;s<b;++s){let i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*S;if(c>=0&&c<m){let i=ra.locToIndex([e,s,c,o],h,ra.computeStrides(r.shape)),f=ra.locToIndex([t,n,o],d,ra.computeStrides(a.shape)),m=u[i]+p[f];m>l&&(l=m)}}}_[ra.locToIndex([e,t,s,o],$,ra.computeStrides(C))]=l}}}return{dataId:l.write(ra.toTypedArray(_,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},A_={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=ra.toNestedArray(r.shape,u.data.get(r.dataId).values),p=ra.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=rc.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ra.assert(s.rank===S.length,(()=>`Error in ${Wt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let C=ra.toNestedArray(S,u.data.get(s.dataId).values),T=ra.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*N;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}T[o][l][s]+=C[e][t][r][s]}}}return{dataId:u.write(ra.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},F_={kernelName:Bt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=ra.toNestedArray(r.shape,u.data.get(r.dataId).values),p=ra.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=rc.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ra.assert(s.rank===S.length,(()=>`Error in ${Bt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let C=ra.toNestedArray(S,u.data.get(s.dataId).values),T=ra.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*N;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}T[e][o][l][s]+=C[e][t][r][s]}}}return{dataId:u.write(ra.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var R_={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;$C([r,a],"eluGrad");let s=new Float32Array(ra.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},D_=DC(((e,t)=>e===t?1:0)),M_=GC(jt,D_,null,"bool"),O_={kernelName:jt,backendName:"cpu",kernelFunc:M_},L_=rc.ERF_P,z_=rc.ERF_A1,P_=rc.ERF_A2,B_=rc.ERF_A3,W_=rc.ERF_A4,V_=rc.ERF_A5,U_=QC(Ht,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+L_*n);return t*(1-((((V_*r+W_)*r+B_)*r+P_)*r+z_)*r*Math.exp(-n*n))})),G_={kernelName:Ht,backendName:"cpu",kernelFunc:U_};function H_(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ra.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),k$({inputs:{x:a},backend:n,attrs:{shape:o}})}var j_={kernelName:Kt,backendName:"cpu",kernelFunc:H_},q_=DC(((e,t)=>e/t)),K_=GC(Vt,q_),X_={kernelName:Vt,backendName:"cpu",kernelFunc:K_};function Y_(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=ra.sizeFromShape(u),p=ra.getTypedArrayFromDType("float32",h),d=ra.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let r=JT({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=JT({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=MC({inputs:{real:r,imag:a},backend:n}),{real:u,imag:h}=J_(i,t,n),c=rc.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let n=rc.getComplexWithIndex(c,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=MC({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function J_(e,t,n){let r=ra.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){let a=Z_(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ra.createScalarValue(r,"float32")),i=zC({inputs:{x:s},backend:n}),l=X_.kernelFunc({inputs:{a:e,b:s},backend:n}),u=X_.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=rc.exponent(a*r,t,n),l=rc.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),rc.assignToTypedArray(r,s,i,a)}return r}(rc.mergeRealAndImagArrays(s,i),r,t);return rc.splitRealAndImagArrays(e)}}function Z_(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=rc.mergeRealAndImagArrays(e,t),i=n/2,o=rc.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=MC({inputs:{real:p,imag:d},backend:a}),f=rc.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=MC({inputs:{real:b,imag:x},backend:a}),w=Z_(l,u,i,r,a),k=w.real,I=w.imag,N=[k.length],S=a.makeTensorInfo(N,"float32",k),C=a.makeTensorInfo(N,"float32",I),T=MC({inputs:{real:S,imag:C},backend:a}),$=Z_(m,g,i,r,a),_=$.real,E=$.imag,A=[_.length],F=a.makeTensorInfo(A,"float32",_),R=a.makeTensorInfo(A,"float32",E),D=MC({inputs:{real:F,imag:R},backend:a}),M=rc.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=MC({inputs:{real:L,imag:z},backend:a}),B=DT({inputs:{a:P,b:D},backend:a}),W=KC({inputs:{a:T,b:B},backend:a}),V=s$({inputs:{a:T,b:B},backend:a}),U=BC({inputs:{input:W},backend:a}),G=BC({inputs:{input:V},backend:a}),H=i_({inputs:{input:W},backend:a}),j=i_({inputs:{input:V},backend:a}),q=l_({inputs:[U,G],backend:a,attrs:{axis:0}}),K=l_({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var Q_={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ra.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=k$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Y_(i,!1,n),l=k$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function eE(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ra.inferDtype(a),o=ra.getArrayFromDType(i,ra.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var tE={kernelName:Jt,backendName:"cpu",kernelFunc:eE};var nE={kernelName:Zt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=ra.getTypedArrayFromDType(r.dtype,ra.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let r=0;r<l;r++){let a=r*u;for(let o=0;o<u;o++){let p=[i,e,r,o][2],d=Math.round(l-p),c=t+n+a+o,f=h[c];if(d>=0&&d<l){f=h[t+n+d*u+o]}s[c]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rE=DC(((e,t)=>Math.floor(e/t))),aE=GC(en,rE,null,"int32"),sE={kernelName:en,backendName:"cpu",kernelFunc:aE};var iE={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=h_({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=KC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=w$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var oE={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=S_({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=KC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=w$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var lE={kernelName:rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ra.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=rc.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=Ys([u,h],r.dtype),c=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=[],n=0;for(let r=0;r<o;r++){let a=c[e*o+r];n+=a*p[r],t.push(a)}if(n<0||n>=s/h)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<h;t++)d.values[e*h+t]=f[n*h+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};var uE={kernelName:nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;$C([a,s],"gatherV2");let l=o;null==o&&(l=0);let u=ra.sizeFromShape(s.shape),h=ra.parseAxisParam(i,a.shape)[0],p=rc.segment_util.collectGatherOpShapeInfo(a,s,h,l),d=k$({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),c=k$({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,u/p.batchSize]}}),f=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],m=n.bufferSync(c),g=fT(n.bufferSync(d),m,f);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p.outputShape,g.dtype,g.values)}},hE=DC(((e,t)=>e>=t?1:0)),pE=GC(sn,hE,null,"bool"),dE={kernelName:sn,backendName:"cpu",kernelFunc:pE};var cE={kernelName:ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ra.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=k$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Y_(i,!0,n),l=k$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},fE=QC(hn,(e=>Number.isFinite(e)?1:0),"bool"),mE={kernelName:hn,backendName:"cpu",kernelFunc:fE},gE=QC(pn,(e=>Math.abs(e)===1/0?1:0),"bool"),yE={kernelName:pn,backendName:"cpu",kernelFunc:gE},bE=QC(dn,(e=>Number.isNaN(e)?1:0),"bool"),xE={kernelName:dn,backendName:"cpu",kernelFunc:bE},vE=DC(((e,t)=>e<=t?1:0)),wE=GC(mn,vE,null,"bool"),kE={kernelName:mn,backendName:"cpu",kernelFunc:wE};var IE={kernelName:gn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=wT(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},NE=QC(bn,(e=>Math.log1p(e))),SE={kernelName:bn,backendName:"cpu",kernelFunc:NE},CE=DC(((e,t)=>e&&t)),TE=GC(xn,CE,null,"bool"),$E={kernelName:xn,backendName:"cpu",kernelFunc:TE},_E=QC(vn,(e=>e?0:1),"bool"),EE={kernelName:vn,backendName:"cpu",kernelFunc:_E},AE=DC(((e,t)=>e||t)),FE=GC(wn,AE,null,"bool"),RE={kernelName:wn,backendName:"cpu",kernelFunc:FE};var DE={kernelName:In,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;$C(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=ra.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let e=0;e<d;e++){let t=f(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var ME={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;$C(i,"LRNGrad");let p=ra.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*h*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function OE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=ra.parseAxisParam(s,l),p=h,d=rc.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=WT(c,l,a.dtype,d,e),p=rc.getInnerMostAxes(p.length,u),l=e}$C(a,"max"),rc.assertAxesAreInnerMostDims("max",p,u);let[f,m]=rc.computeOutAndReduceShapes(l,p),g=ST(c,ra.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=rc.expandShapeToKeepDim(f,h)),{dataId:y,shape:b,dtype:a.dtype}}var LE={kernelName:Sn,backendName:"cpu",kernelFunc:OE};var zE={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;$C(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ra.assert(rc.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=rc.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&ra.arraysEqual(h.inShape,h.outShape))u=zC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ra.computeStrides(a.shape),r=q$(e,a.shape,a.dtype,t,h,"max");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var PE={kernelName:_n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;$C(a,"maxPool3d");let h=rc.computePool3DInfo(a.shape,s,i,1,o,l,u),p=X$(n.data.get(a.dataId).values,a.shape,a.dtype,ra.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};var BE={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;$C([a,s],"maxPool3DGrad");let h=rc.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=Ys(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=d;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=N&&(N=o,S=n*h*p+a*h+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=b-1-h.padInfo.front,k=v-1-h.padInfo.left,I=x-1-h.padInfo.top,N=Ys(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-p.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==d&&(l+=S.get(e,r,s,u,t)*d)}}}N.set(l,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};var WE={kernelName:$n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;$C([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=rc.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=Ys(d.outShape,o.dtype,K$(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ys(o.shape,"float32"),N=n.data.get(a.dataId).values,S=Ys(a.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-k,s=r-w,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){let o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var VE={kernelName:An,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;$C(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=rc.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=function(e,t,n,r,a){let s=q$(e,0,n,ra.computeStrides(t),a,"max"),i=K$(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};function UE(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;$C(s,"sum"),t="bool"===s.dtype?VC({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):zC({inputs:{x:s},backend:r});let l=t.shape.length,u=ra.parseAxisParam(i,t.shape),h=rc.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=VT({inputs:{x:t},backend:r,attrs:{perm:h}}),p=rc.getInnerMostAxes(p.length,l)),rc.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=rc.computeOutAndReduceShapes(d.shape,p),m=LC(r,c,rc.upcastType(d.dtype,"int32")),g=ra.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=k$({inputs:{x:m},backend:r,attrs:{shape:rc.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),m}var GE={kernelName:wr,backendName:"cpu",kernelFunc:UE};var HE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ra.parseAxisParam(s,a.shape),l=rc.computeOutAndReduceShapes(a.shape,o)[1],u=ra.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=VC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=K_({inputs:{a:d,b:p},backend:n});h.push(c);let f=UE({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var jE={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;$C(a,"min");let o=ra.parseAxisParam(s,a.shape),l=o,u=rc.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=VT({inputs:{x:a},backend:n,attrs:{perm:u}}),l=rc.getInnerMostAxes(l.length,a.shape.length)),rc.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=rc.computeOutAndReduceShapes(h.shape,l),c=ra.sizeFromShape(d),f=ra.makeZerosTypedArray(ra.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=k$({inputs:{x:g},backend:n,attrs:{shape:rc.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var qE={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;$C(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=ra.computeStrides(a.shape),f=ra.sizeFromShape(o),m=o.length,g=ra.computeStrides(o),y=ra.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=ra.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));let n=ra.locToIndex(t,d,c);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},KE=DC(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),XE=GC(On,KE),YE={kernelName:On,backendName:"cpu",kernelFunc:XE},JE=w(A());function ZE(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=ra.parseAxisParam([o],a.shape),u=OE({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=rc.expandShapeToKeepDim(u.shape,l),p=k$({inputs:{x:u},backend:n,attrs:{shape:h}}),d=s$({inputs:{a:a,b:p},backend:n}),c=iT({inputs:{x:d},backend:n}),f=UE({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=k$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=K_({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var QE={kernelName:Nr,backendName:"cpu",kernelFunc:ZE};var eA={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;$C(a,"multinomial");let l=o?a:ZE({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=ra.makeZerosTypedArray(ra.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let r=JE.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},tA=Pc.nonMaxSuppressionV3Impl;var nA={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;$C(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=tA(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},rA=Pc.nonMaxSuppressionV4Impl;var aA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;$C(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=rA(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},sA=Pc.nonMaxSuppressionV5Impl;var iA={kernelName:Un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;$C(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=sA(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var oA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;$C(a,"oneHot");let l=ra.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(u[e*s+h[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function lA(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=BC({inputs:{input:r},backend:n}),t=lA({inputs:{x:e},backend:n}),a=i_({inputs:{input:r},backend:n}),s=lA({inputs:{x:a},backend:n}),i=MC({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return eE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var uA={kernelName:Pr,backendName:"cpu",kernelFunc:lA};var hA={kernelName:Gn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=BC({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=i_({inputs:{input:a},backend:r}),i=lA({inputs:{x:s},backend:r}),o=MC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return eE({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function pA(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return H_({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ra.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ra.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=l_({inputs:t.map((e=>{let t=H_({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var dA={kernelName:jn,backendName:"cpu",kernelFunc:pA};var cA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;$C(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,h=ra.sizeFromShape(a.shape),p=a.shape.length,d=ra.computeStrides(a.shape),c=ra.sizeFromShape(o),f=o.length,m=ra.computeStrides(o),g=ra.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=ra.indexToLoc(e,p,d).map(((e,t)=>e+l[t]));g[ra.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},fA=DC(((e,t)=>Math.pow(e,t))),mA=GC(Xn,fA),gA={kernelName:Xn,backendName:"cpu",kernelFunc:mA};var yA={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=jT(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},bA=QC(er,(e=>1/e)),xA={kernelName:er,backendName:"cpu",kernelFunc:bA};var vA={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;$C(a,"resizeBilinear");let l=ra.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ra.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),h=o+n*l[2],p=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}};var wA={kernelName:ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;$C([s,a],"resizeBilinearGrad");let o=ra.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*a,I=l*u,N=l*a;for(let e=0;e<p;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}};var kA={kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;$C(a,"resizeNearestNeighbor");let l=ra.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<h;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}};var IA={kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;$C([s,a],"resizeNearestNeighborGrad");let o=ra.computeStrides(a.shape),l=ra.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<p;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-N/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*x;if(e===Math.min(h-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){let t=e+y;if(t<0||t>=f)continue;let a=d+t*l[2],s=t*v;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var NA={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;$C(a,"reverse");let i=a.shape.length,o=ra.parseAxisParam(s,a.shape);if(0===i)return zC({inputs:{x:a},backend:n});let l=new va(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},SA={kernelName:Vr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=ra.getTypedArrayFromDType(r.dtype,ra.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=rc.getImageCenter(i,h,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*p*h*d;for(let e=0;e<h;e++){let n=e*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,e,r,i],b=o[2],x=o[1],v=(b-c)*g-(x-f)*m,w=(b-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<h){k=y[t+w*(p*d)+v*d+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},CA=QC(ur,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),TA={kernelName:ur,backendName:"cpu",kernelFunc:CA};function $A(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return Ys(n,t.dtype);let c=Ys(h,t.dtype);c.values.fill(l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=d[e*a+n]:c.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return c}var _A={kernelName:pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=rc.calculateShapes(s,a,i),d=$A(n.bufferSync(a),n.bufferSync(s),i,p,u,l,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};var EA={kernelName:dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;$C([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=Ra(a.dtype,s.dtype),p=ra.makeZerosTypedArray(ra.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:ra.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return n.makeTensorInfo(a.shape,h,p)}},AA=rc.SELU_SCALEALPHA,FA=rc.SELU_SCALE,RA=QC(cr,(e=>e>=0?FA*e:AA*(Math.exp(e)-1))),DA={kernelName:cr,backendName:"cpu",kernelFunc:RA},MA=QC(br,(e=>1/(1+Math.exp(-e)))),OA={kernelName:br,backendName:"cpu",kernelFunc:MA},LA=QC(yr,(e=>e<0?-1:e>0?1:0)),zA={kernelName:yr,backendName:"cpu",kernelFunc:LA},PA=QC(mr,(e=>Math.sin(e))),BA={kernelName:mr,backendName:"cpu",kernelFunc:PA},WA=QC(gr,(e=>Math.sinh(e))),VA={kernelName:gr,backendName:"cpu",kernelFunc:WA},UA=Math.log(1.1920928955078125e-7)+2,GA=QC(xr,(e=>{let t,n=e>-UA,r=e<UA,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),HA={kernelName:xr,backendName:"cpu",kernelFunc:GA};var jA={kernelName:kr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;$C([a],"spaceToBatchND");let o=ra.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=cA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=rc.getReshaped(u.shape,s,o,!1),p=rc.getPermuted(h.length,s.length,!1),d=rc.getReshapedPermuted(u.shape,s,o,!1),c=k$({inputs:{x:u},backend:n,attrs:{shape:h}}),f=VT({inputs:{x:c},backend:n,attrs:{perm:p}}),m=k$({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var qA={kernelName:$r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=rc.calculateShapes(s,a,o),c=$A(n.bufferSync(a),n.bufferSync(s),o,d,h,u,l,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,c.dtype,c.values)}};var KA={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ra.parseAxisParam(i,a.shape)[0],l=rc.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=JT({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},XA=QC(vr,(e=>Math.sqrt(e))),YA={kernelName:vr,backendName:"cpu",kernelFunc:XA},JA={kernelName:Cr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;$C(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZA=QC(Br,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),QA={kernelName:Br,backendName:"cpu",kernelFunc:ZA};var eF={kernelName:_r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;$C(a,"stridedSlice");let c,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=Li.sliceInfo(a.shape,s,i,o,l,u,h,p,d),v=k$({inputs:{x:a},backend:n,attrs:{shape:b}});if(f){let e=JT({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});c=k$({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))c=n.makeTensorInfo(x,a.dtype,[]);else{let e=n$(x,n.bufferSync(v),g,m);c=n.makeTensorInfo(e.shape,e.dtype,e.values)}let w=k$({inputs:{x:c},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(c),w}},tF=QC(Er,(e=>Math.tan(e))),nF={kernelName:Er,backendName:"cpu",kernelFunc:tF},rF=QC(Ar,(e=>Math.tanh(e)));var aF={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;$C(a,"tile");let i=o$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var sF={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;$C(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=l$(o,a.shape,a.dtype,s);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var iF={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=ra.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=ra.getTypedArrayFromDType(a.dtype,ra.sizeFromShape(g));w.fill(l);let k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<h;++e){let t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let h=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=oF(h,d,o),m=oF(c,p,o);switch(i){case"nearest":s=uF(k,p,d,b,x,v,e,m,f,a,l);break;case"bilinear":s=hF(k,p,d,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function oF(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ra.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return ra.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ra.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function lF(e,t,n,r,a,s,i,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:h}function uF(e,t,n,r,a,s,i,o,l,u,h){return lF(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,h)}function hF(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1;return(c-o)*((f-l)*lF(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*lF(e,t,n,r,a,s,i,p,f,u,h))+(o-p)*((f-l)*lF(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*lF(e,t,n,r,a,s,i,c,f,u,h))}var pF={kernelName:Or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;$C(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=u$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var dF={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=JT({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[e]=k$({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}};var cF={kernelName:zr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;$C(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,h=s;for(let e=0;e<u;++e){let t=H_({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<i;++e){let t=ra.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=M_({inputs:{a:r,b:h},backend:n}),i=VC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=DT({inputs:{a:i,b:a},backend:n}),p=UE({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(r),l.push(s),l.push(i),l.push(u),l.push(p)}let p=pA({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},fF=[C$,RC,$$,E$,XC,A$,F$,R$,D$,M$,L$,P$,W$,G$,j$,Y$,J$,Z$,Q$,S$,e_,t_,n_,UC,rT,a_,OC,s_,u_,d_,c_,p_,m_,g_,f_,b_,v_,w_,k_,I_,N_,C_,T_,$_,__,E_,F_,A_,X_,p$,R_,O_,G_,oT,j_,hT,Q_,tE,nE,cT,sE,iE,oE,lE,uE,yT,dE,PC,cE,o_,mE,yE,xE,c$,vT,kE,IE,NT,SE,$E,EE,RE,DE,ME,$T,zE,PE,BE,WE,VE,LE,HE,jE,AT,qE,YE,eA,MT,LT,nA,aA,iA,BT,oA,hA,dA,cA,gA,g$,HT,yA,WC,xA,b$,v$,I$,vA,wA,kA,IA,NA,SA,TA,XT,_A,EA,DA,OA,zA,BA,VA,ZT,QE,HA,jA,qA,KA,YA,JA,t$,QA,eF,i$,GE,nF,{kernelName:Ar,backendName:"cpu",kernelFunc:rF},aF,sF,UT,iF,pF,dF,cF,uA];for(let e of fF)Jr(e);var mF,gF,yF,bF={},xF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function vF(e){if(!(e in bF)){let t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete bF[e]}),!1),1===e?t.getContext("webgl",xF)||t.getContext("experimental-webgl",xF):t.getContext("webgl2",xF)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;bF[e]=t}let t=bF[e];return t.isContextLost()?(delete bF[e],vF(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),bF[e])}function wF(e,t){return[t,e]}function kF(e){let t=ra.sizeFromShape(e),n=Math.ceil(t/4);return ra.sizeToSquarishShape(n)}function IF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NF(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===Ge().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),o=e.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function SF(e,t){let n=t();return Ge().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(mF||(mF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(gF||(gF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(yF||(yF={}));function CF(e){return!!(Ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function TF(e,t){return zF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function $F(e,t){let n=zF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(SF(e,(()=>e.shaderSource(n,t))),SF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){let n=AF.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ra.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ra.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var _F,EF,AF=/ERROR: [0-9]+:([0-9]+):/g;function FF(e,t){if(SF(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function RF(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),SF(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),SF(e,(()=>e.enableVertexAttribArray(o))),!0)}function DF(e,t,n){(function(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}})(e,n),SF(e,(()=>e.activeTexture(e.TEXTURE0+n))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function MF(e,t,n){SF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),SF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function OF(e,t){SF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),SF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function LF(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function zF(e,t,n){let r=SF(e,(()=>t()));if(null==r)throw new Error(n);return r}function PF(e,t=2){return ra.sizeFromShape(e.slice(0,e.length-t))}function BF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function WF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[PF(e),...BF(e)]),t}function VF(e){return e%2==0}function UF(e,t){if(e=e.slice(-2),t=t.slice(-2),ra.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||VF(n)&&VF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&VF(e[0])&&VF(t[0])}function GF(e,t){return null!=e.getExtension(t)}function HF(e){try{if(null!=vF(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function jF(e){if(0===e)return!1;let t=vF(e);if(1!==e){if(GF(t,"EXT_color_buffer_float"))return qF(t);let e="EXT_color_buffer_half_float";if(GF(t,e)){let n=t.getExtension(e);return function(e,t){let n=NF(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!GF(t,"OES_texture_float")||!GF(t,"WEBGL_color_buffer_float"))&&qF(t)}function qF(e){let t=NF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function KF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ra.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var XF=Ge();function YF(){let e,t,n,r,a,s,i,o,l,u;return 2===Ge().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function JF(e,t,n="index"){let r=ra.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function ZF(e){let t=ra.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}XF.registerFlag("HAS_WEBGL",(()=>XF.getNumber("WEBGL_VERSION")>0)),XF.registerFlag("WEBGL_VERSION",(()=>HF(2)?2:HF(1)?1:0)),XF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),XF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===XF.get("WEBGL_VERSION"))),XF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),XF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),XF.registerFlag("WEBGL_PACK",(()=>XF.getBool("HAS_WEBGL"))),XF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_PACK_CLIP",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),XF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_PACK_REDUCE",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_CONV_IM2COL",(()=>XF.getBool("WEBGL_PACK"))),XF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==_F){let t=vF(e);_F=t.getParameter(t.MAX_TEXTURE_SIZE)}return _F}(XF.getNumber("WEBGL_VERSION")))),XF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==EF){let t=vF(e);EF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,EF)}(XF.getNumber("WEBGL_VERSION")))),XF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=XF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t,n=vF(e);return t=GF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:GF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),XF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>XF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ja.isMobile())),XF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;let t=vF(e);if(1===e){if(!GF(t,"OES_texture_float"))return!1}else if(!GF(t,"EXT_color_buffer_float"))return!1;return qF(t)}(XF.getNumber("WEBGL_VERSION")))),XF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!XF.getBool("WEBGL_FORCE_F16_TEXTURES")&&XF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),XF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>jF(XF.getNumber("WEBGL_VERSION")))),XF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>function(e){return 2===e&&null!=vF(e).fenceSync}(XF.getNumber("WEBGL_VERSION")))),XF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>XF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),XF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),XF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ja.isMobile()&&XF.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));var QF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function eR(e){let t=YF();return function(e,t){let n=zF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(SF(e,(()=>e.shaderSource(n,t))),SF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function tR(e){return function(e,t){let n=zF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),SF(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function nR(e){return function(e,t){let n=zF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),SF(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function rR(e,t,n,r,a,s){!function(e,t){let n=Ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);let i=function(e){return zF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return SF(e,(()=>e.bindTexture(o,i))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),SF(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function aR(e){return e.internalFormatFloat}function sR(e){return e.internalFormatHalfFloat}function iR(e){return e.downloadTextureFormat}function oR(e){return e.internalFormatPackedFloat}function lR(e){return e.internalFormatPackedHalfFloat}function uR(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=IF(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}var{getBroadcastDims:hR}=rc;function pR(e,t,n,r){let a=[];e.forEach((e=>{let t=ra.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));let s,i,o=a.join("\n"),l=e.map((e=>function(e,t,n=!1){let r="";r+=n?cR(e):dR(e);let a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=hR(e.shapeInfo.logicalShape,t.logicalShape),u=wR(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let c="return outputValue;",f=1===ra.sizeFromShape(e.shapeInfo.logicalShape),m=1===ra.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ra.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=wR(l),p=hR(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),u=t.texShape,h=YF(),p=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(h),d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${fR}\n    ${mR}\n    ${gR}\n  `}(h);return t.isPacked?(s=function(e,t){switch(e.length){case 0:return bR();case 1:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ra.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;let r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),s=a,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],i=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,u),i=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(h)):(s=function(e,t){switch(e.length){case 0:return bR();case 1:return function(e,t){return 1===t[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){return ra.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){let n=JF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){let n=JF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){let n=JF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=JF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,u),i=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(h)),r&&(d+=yR),[d,p,i,o,s,l,n].join("\n")}function dR(e){let t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;let[s,i]=e.shapeInfo.texShape,o=xR(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${vR(e)}\n      }\n    `;let r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;let i=xR(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ra.arraysEqual(t,a)){let e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}let{newShape:s,keptDims:i}=ra.squeezeShape(t),o=s;if(o.length<t.length){let t=["row","col"];return`\n      ${dR(kR(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${IR(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${vR(e)}\n      }\n    `;let l=a[0],u=a[1],h=xR(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=ra.squeezeShape(t),l=i;if(l.length<t.length){let t=["row","col","depth"];return`\n        ${dR(kR(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${IR(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${vR(e)}\n      }\n    `;let u=e.shapeInfo.texShape,h=u[0],p=u[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===s&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;let c=xR(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${c};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:l}=ra.squeezeShape(t);if(o.length<t.length){let t=["row","col","depth","depth2"];return`\n      ${dR(kR(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${IR(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${vR(e)}\n      }\n    `;let u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let c=xR(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${c});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=ra.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${dR(kR(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${IR(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${vR(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=xR(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ra.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${dR(kR(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${IR(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${vR(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=xR(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function cR(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=YF();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=YF();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=YF();if(null!=a&&ra.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;let l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){let n=[1,2],a=["b","row","col"];return`\n        ${cR(kR(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${IR(a,n)});\n        }\n      `}let i=s[0],o=s[1],l=Math.ceil(t[2]/2),u=l*Math.ceil(t[1]/2),h=YF();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u}, ${l}, b, row, col);\n      return ${h.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){let t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2),h=u*Math.ceil(t[n-2]/2),p="int b, int row, int col",d=`b * ${h} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)p=`int b${e}, `+p,h*=t[n-e-1],d=`b${e} * ${h} + `+d;let c=YF();return`\n    vec4 ${a}(${p}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${c.texture2D}(${r}, uv);\n    }\n  `}(e)}}var fR="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mR="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function bR(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function xR(e){return`offset${e}`}function vR(e){let t=e.name,n=ra.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function wR(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function kR(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function IR(e,t){return t.map((t=>e[t])).join(", ")}function NR(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!ra.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ra.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}var{addImpl:SR,bincountImpl:CR,bincountReduceImpl:TR,ceilImpl:$R,concatImpl:_R,expImpl:ER,expm1Impl:AR,floorImpl:FR,gatherV2Impl:RR,greaterImpl:DR,lessImpl:MR,linSpaceImpl:OR,logImpl:LR,maxImpl:zR,maximumImpl:PR,minimumImpl:BR,multiplyImpl:WR,negImpl:VR,prodImpl:UR,rangeImpl:GR,rsqrtImpl:HR,simpleAbsImpl:jR,sliceImpl:qR,stridedSliceImpl:KR,subImpl:XR,tileImpl:YR,topKImpl:JR,transposeImpl:ZR,uniqueImpl:QR}=AC;function eD(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function tD(e,t){return 1===t?[e]:eD(e,t)}var nD=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${JF(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t)}\n      ${ZF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function rD(e,t,n,r,a){let s,i=function(e,t){switch(e){case yF.PACKED_2X2_FLOAT32:return oR(t);case yF.PACKED_2X2_FLOAT16:return lR(t);case yF.UNPACKED_FLOAT32:return aR(t);case yF.UNPACKED_FLOAT16:return sR(t);case yF.PACKED_4X1_UNSIGNED_BYTE:return iR(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=IF(e[0],e[1]);s=t*n}else{let[t,n]=wF(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function aD(e,t){if(e===gF.UPLOAD)return yF.PACKED_2X2_FLOAT32;if(e===gF.RENDER||null==e)return function(e){return Ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?yF.PACKED_2X2_FLOAT32:yF.UNPACKED_FLOAT32:e?yF.PACKED_2X2_FLOAT16:yF.UNPACKED_FLOAT16}(t);if(e===gF.DOWNLOAD||e===gF.PIXELS)return yF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function sD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var iD=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},oD="if (isnan(x)) return x;",lD="return x;",uD="return abs(x);",hD="return (x >= 0.0) ? x : (exp(x) - 1.0);",pD=oD+"\n  return (x < 0.0) ? 0.0 : x;\n",dD=oD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",cD="return x;",fD="return x;",mD="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",gD="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",yD="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bD=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},xD=Pc.whereImpl,vD={};var wD=class extends q{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Ge().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){let e=vF(Ge().getNumber("WEBGL_VERSION"));this.binaryCache=function(e){return e in vD||(vD[e]={}),vD[e]}(Ge().getNumber("WEBGL_VERSION")),this.gpgpu=new class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Ge().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){bF[e]=t}(t,e)):this.gl=vF(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(1===Ge().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TF(this.gl,e),GF(this.gl,t))this.textureHalfFloatExtension=TF(this.gl,t);else if(Ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),GF(this.gl,r))this.colorBufferHalfFloatExtension=TF(this.gl,r);else if(Ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",GF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!GF(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=tR(this.gl),this.indexBuffer=nR(this.gl),this.framebuffer=function(e){return zF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=NF(this.gl,this.textureHalfFloatExtension)}get debug(){return Ge().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;SF(e,(()=>e.finish())),SF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),SF(e,(()=>e.deleteFramebuffer(this.framebuffer))),SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),SF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),SF(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=wF(t,n);return rR(e,a,s,aR(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=wF(t,n);return rR(e,a,s,sR(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=wF(t,n);return rR(e,a,s,iR(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){SF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?SF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):SF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,l;SF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),SF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=IF(t,n);return rR(e,a,s,lR(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=IF(t,n);return rR(e,a,s,oR(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(OF(this.gl,this.framebuffer),this.outputTexture=null),SF(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){let[a,s]=wF(t,n),i=new Uint8Array(function(e,t){return 4*e}(t*n));return SF(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return uR(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=function(e,t,n,r){let a=e.createBuffer();SF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return SF(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),SF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),SF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ge().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){let r=new Float32Array(t*n*4);return SF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=$F(t,e),r=eR(t),a=function(e){return zF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return SF(t,(()=>t.attachShader(a,r))),SF(t,(()=>t.attachShader(a,n))),function(e,t){if(SF(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&FF(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),RF(e,t,"clipSpacePos",n,3,20,0)&&RF(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&SF(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&FF(this.gl,this.program),SF(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return zF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),SF(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){SF(e,(()=>DF(e,t,r))),SF(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=IF(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&FF(this.gl,this.program),LF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),SF(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SF(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TF(this.gl,2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ra.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&ra.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),MF(this.gl,e,this.framebuffer),this.debug&&LF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(MF(this.gl,this.outputTexture,this.framebuffer),this.debug&&LF(this.gl)):OF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;MF(r,e,this.framebuffer),this.debug&&LF(r),this.outputTexture=e,SF(r,(()=>r.viewport(0,0,t,n))),SF(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),SF(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=aD(t,n),a=sD(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=rD(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===yF.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===yF.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===yF.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===yF.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===yF.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=aD(n,r),s=sD(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=rD(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ge().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Ge().global.screen?1024:Ge().global.screen.height*Ge().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new j(this,No())}nextDataId(){return wD.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Ge().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ge().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:gF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Ge().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:gF.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new bD(i,cD):new iD(i,cD);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=ra.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=rc.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=ra.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new bD(r,cD):new iD(r,cD);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ge().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&Ge().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...kF(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=rc.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=ra.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=l&&this.disposeIntermediateTensorInfo(l);let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&No().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>ra.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ys(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!CF(n))throw Ge().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ra.sizeFromShape(t);if(Ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...kF(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Ge().getBool("WEBGL_PACK")&&!0===r,i=s?WF(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=gF.DOWNLOAD;let t=YF();this.outputShape=e,this.userCode=`\n      ${QF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=gF.DOWNLOAD;let t=YF();this.outputShape=e,this.userCode=`\n      ${QF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=ra.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ra.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=ra.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ra.now(),endMs:null}}endTimer(e){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ra.now(),e)}async getQueryTime(e){if(Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Ge().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=No().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){let n=this.getCPUBackend();return!Ge().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&null==n&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&ra.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){rc.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return xD(e.shape,t)}packedUnaryOp(e,t,n){let r=new bD(e.shape,t),a=this.compileAndRun(r,[e],n);return No().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=jR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uD,e.dtype);let t=new iD(e.shape,uD),n=this.compileAndRun(t,[e]);return No().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ra.isString(n[0])){let a=n.map((e=>ra.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return No().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=tD("rc",t),r=wR(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let n=tD("rc",t),r=wR(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";let a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){let n=e.length,r=function(e,t){let n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[PF(e.shape),...BF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[PF(t),...BF(t)],s=new nD(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){let t,n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n,i=WF(a);t=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=mF.DENSE;let t=kF(e),n=YF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${JF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=mF.DENSE;let t=kF(e),n=YF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${JF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}(i);return{dtype:s,shape:a,dataId:this.runWebGLProgram(t,[{shape:i,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){let s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===mF.DENSE){let t=kF(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ra.sizeFromShape(s.shape))return i.values=ra.getTypedArrayFromDType(s.dtype,0),s;let o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ra.sizeFromShape(t.shape)<=Ge().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!UF(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);let u,h={shape:s.shape,texData:i,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((e=>{let t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,l,h),d=this.getAndSaveBinary(p,(()=>function(e,t,n,r){let a=t.userCode,s=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=pR(s,o,a,t.packedInputs),u=e.createProgram(l),h=null,p=e.getUniformLocation(u,"NAN",!1);1===Ge().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(u,"INFINITY",!1));let d={};for(let n=0;n<t.variableNames.length;n++){let r=t.variableNames[n],a=!1;d[r]=e.getUniformLocation(u,r,a),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,a)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:h,nanLoc:p}}(this.gpgpu,e,l,h))),c=null!=this.activeTimers;c&&(u=this.startTimer()),function(e,t,n,r,a){NR(t.inShapeInfos,n),NR([t.outShapeInfo],[r]);let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ge().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=s){if(n.isUniform){if(ra.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,l,h,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),c&&(u=this.endTimer(u),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(u)}));let f=Ge().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let e=ra.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ge().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){let e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ge().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=To((()=>{if(!Ge().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Ge().getBool("DEBUG");Ge().set("DEBUG",!1);let t=this.abs(Xh(1e-8)).dataSync()[0];if(Ge().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=ra.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=Ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ra.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=ra.squeezeShape(e).newShape);let r=ra.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=PF(e),n=2,a=2;return e.length&&([n,a]=BF(e)),r=t*(n/2)*(a/2),ra.sizeToSquarishShape(r).map((e=>2*e))}return ra.sizeToSquarishShape(r)}(n,o),t.texShape=h),null!=a){let e,s=WF(n),i=h[1],p=h[0],d=a instanceof Uint8Array;o?([i,p]=IF(h[0],h[1]),e=new class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let r=YF(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){let o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${ZF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}(s,[p,i],d)):e=new class{constructor(e,t,n=!1){this.variableNames=["A"];let r=YF(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${ZF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}(s,[p,i],d);let c=this.makeTensorInfo([p,i],r);this.texData.get(c.dataId).usage=d?gF.PIXELS:gF.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(c.dataId),i,p,a);let f=!0,m=this.runWebGLProgram(e,[c],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(c),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=ra.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ra.bytesPerElement(t)}};wD.nextDataId=0;ja.isBrowser()&&Lo("webgl",(()=>new wD),2);var kD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",ID=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=rc.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},ND="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",SD=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=rc.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length,s="";if(r)if(0===a||1===ra.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${wR(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=tD("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function CD(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var TD={kernelName:on,backendName:"webgl",kernelFunc:CD};function $D(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=CD({inputs:{x:r},backend:n}),l=CD({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var _D={kernelName:vt,backendName:"webgl",kernelFunc:$D},ED="return (a < 0.) ? b * a : a;",AD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var FD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ra.createScalarValue(s,"float32")),o=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD(AD,a.shape,i.shape):new ID(ED,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),l}},RD="return (a < 0.) ? b * a : a;",DD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var MD={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD(DD,r.shape,a.shape):new ID(RD,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},OD="if (isnan(x)) return x;";function LD({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new bD(o.shape,t):new iD(o.shape,e),l.runWebGLProgram(i,[o],u)}}function zD({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new ID(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],Ra(n.dtype,r.dtype))})),s=$D({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,d=s||Ra(l.dtype,u.dtype);if(h.shouldExecuteOnCPU([l,u])&&null!=a){let e=h.texData.get(l.dataId),t=h.texData.get(u.dataId),[n,r]=a(l.shape,u.shape,e.values,t.values,d),s=h.makeTensorInfo(r,d);return h.texData.get(s.dataId).values=n,s}return p=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new SD(t,l.shape,u.shape,n):new ID(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function PD(e,t=!1){if("linear"===e)return t?fD:lD;if("relu"===e)return t?gD:pD;if("elu"===e)return t?mD:hD;if("relu6"===e)return t?yD:dD;if("prelu"===e)return t?DD:RD;if("leakyrelu"===e)return t?AD:ED;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var BD=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},WD={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},VD=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=rc.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},UD="return a * b;";function GD(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=rc.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new VD(WD.REAL,a.shape,s.shape),i=new VD(WD.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=$D({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=WR(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD(UD,a.shape,s.shape):new ID(UD,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var HD={kernelName:zn,backendName:"webgl",kernelFunc:GD};function jD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ra.sizeFromShape(a.shape),l=ra.inferFromImplicitShape(s,o),u=ra.sizeFromShape(l);ra.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let h=i.texData.get(a.dataId);return!h.isPacked||UF(a.shape,l)||null!==h.texture&&UF(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[PF(e.shape),...BF(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[PF(t),...BF(t)],i=new nD(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,l,i)}var qD={kernelName:nr,backendName:"webgl",kernelFunc:jD},KD=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${ra.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},XD=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function YD(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=rc.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new KD({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new KD({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new XD({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var JD=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=wR(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};var ZD=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=wR(this.rank),a=eD("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function QD(e,t,n){let r=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZD(e.shape,t):new JD(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function eM(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=ra.parseAxisParam(a,e.shape),o=i,l=rc.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=QD(e,l,r),o=rc.getInnerMostAxes(o.length,s)),rc.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=rc.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=rc.expandShapeToKeepDim(p,i));let f=ra.sizeFromShape(d),m=jD({inputs:{x:h},attrs:{shape:[ra.sizeFromShape(e.shape)/f,f]},backend:r}),g=YD(m,Da(e.dtype),"sum",r),y=jD({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(h),y}(a,s,i,n)}var tM={kernelName:wr,backendName:"webgl",kernelFunc:eM};function nM(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=ZR(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=QD(s,i,o);return t}var rM={kernelName:Mr,backendName:"webgl",kernelFunc:nM},aM=1e3;function sM({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ra.sizeFromShape(m),b=ra.sizeFromShape(g),x=y===b||1===y||1===b;ra.assert(u>=2&&h>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));let v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([c,f]);ra.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let w,k=n?[y,p,c]:[y,c,p],I=r?[b,f,d]:[b,d,f],N=jD({inputs:{x:e},backend:a,attrs:{shape:k}}),S=jD({inputs:{x:t},backend:a,attrs:{shape:I}}),C=[N,S],T=Math.max(y,b),$=n?N.shape[1]:N.shape[2],_=null!=s,E=null!=i,A="leakyrelu"===l,F=null!=l?PD(l,!0):null;if((1===c||1===f)&&$>aM&&!1===(_||E||A||null!=F)){let e=N,t=S;n&&(e=nM({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=nM({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));let s=1===f,i=e;1!==f&&(i=jD({inputs:{x:e},backend:a,attrs:{shape:[T,$,1]}}),C.push(i));let o=1===f?2:1,l=t;s&&(l=jD({inputs:{x:t},backend:a,attrs:{shape:[T,1,$]}}),C.push(l));let u=GD({inputs:{a:i,b:l},backend:a});w=eM({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(u)}else{let l=Ra(e.dtype,t.dtype),u=new BD(k,I,[T,c,f],n,r,_,F,E,A),h=[N,S];if(null!=s&&h.push(s),E&&h.push(i),A){let e=a.makeTensorInfo([],"float32",ra.createScalarValue(o,"float32"));h.push(e),C.push(e)}w=a.runWebGLProgram(u,h,l)}let R=jD({inputs:{x:w},backend:a,attrs:{shape:v}});C.push(w);for(let e of C)a.disposeIntermediateTensorInfo(e);return R}var iM={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return sM({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},oM="return abs(x);";var lM={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=jR(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bD(a.shape,oM):new iD(a.shape,oM),r.runWebGLProgram(t,[a],a.dtype)}},uM=LD({opSnippet:oD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),hM={kernelName:Ye,backendName:"webgl",kernelFunc:uM},pM=LD({opSnippet:oD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),dM={kernelName:Je,backendName:"webgl",kernelFunc:pM},cM="return a + b;",fM=zD({opSnippet:cM,packedOpSnippet:cM,supportsComplex:!0,cpuKernelImpl:SR}),mM={kernelName:Ze,backendName:"webgl",kernelFunc:fM};var gM={kernelName:Qe,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return CD({inputs:{x:a[0]},backend:r});if(a.length>Ge().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>Ra(e,t))),i=a.map((e=>e.shape)),o=Ge().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var yM={kernelName:et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ra.parseAxisParam(s,a.shape),u=l,h=rc.getAxesPermutation(u,o),p=a;null!=h&&(p=nM({inputs:{x:a},backend:n,attrs:{perm:h}}),u=rc.getInnerMostAxes(u.length,o)),rc.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=rc.computeOutAndReduceShapes(p.shape,u),m=jD({inputs:{x:p},backend:n,attrs:{shape:[-1,ra.sizeFromShape(f)]}}),g=YD(m,m.dtype,"all",n);if(i){d=jD({inputs:{x:g},backend:n,attrs:{shape:rc.expandShapeToKeepDim(c,l)}})}else d=jD({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};var bM={kernelName:tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ra.parseAxisParam(s,a.shape),u=l,h=rc.getAxesPermutation(u,o),p=a;null!=h&&(p=nM({inputs:{x:a},backend:n,attrs:{perm:h}}),u=rc.getInnerMostAxes(u.length,o)),rc.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=rc.computeOutAndReduceShapes(p.shape,u),m=jD({inputs:{x:p},backend:n,attrs:{shape:[-1,ra.sizeFromShape(f)]}}),g=YD(m,m.dtype,"any",n);if(i){d=jD({inputs:{x:g},backend:n,attrs:{shape:rc.expandShapeToKeepDim(c,l)}})}else d=jD({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},xM=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},vM=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ra.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=wR(u),p=tD("coords",u);if(1===s){o=u+1;let e=wR(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=tD("sourceLocR",o-1).concat("inIdx.r"),g=tD("sourceLocG",o-1).concat("inIdx.g"),y=tD("sourceLocB",o-1).concat("inIdx.b"),b=tD("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function wM(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=rc.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new xM(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=wM(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function kM(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=rc.computeOptimalWindowSize(s),o=new vM(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=kM(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function IM(e,t,n,r){let a=[n];if(rc.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ge().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],[s,i]=rc.computeOutAndReduceShapes(t.shape,a),o=ra.sizeFromShape(i),l=jD({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);let u=wM(e,l,r);n.push(u);let h=jD({inputs:{x:u},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return kM(e,t,r)}var NM={kernelName:nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ra.parseAxisParam(s,a.shape),o=rc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=nM({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=rc.getInnerMostAxes(i.length,l.shape.length)),rc.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=IM(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};var SM={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ra.parseAxisParam(s,a.shape),o=rc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=nM({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=rc.getInnerMostAxes(i.length,l.shape.length)),rc.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=IM(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},CM=LD({opSnippet:oD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),TM={kernelName:at,backendName:"webgl",kernelFunc:CM},$M=LD({opSnippet:oD+"return log(x + sqrt(x * x + 1.0));"}),_M={kernelName:st,backendName:"webgl",kernelFunc:$M},EM=LD({opSnippet:oD+"\n  return atan(x);\n"}),AM={kernelName:it,backendName:"webgl",kernelFunc:EM},FM=zD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),RM={kernelName:lt,backendName:"webgl",kernelFunc:FM},DM=LD({opSnippet:oD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),MM={kernelName:ot,backendName:"webgl",kernelFunc:DM},OM=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},LM=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var zM={kernelName:ut,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;KF(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ra.assert(rc.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=rc.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ra.arraysEqual(u.inShape,u.outShape))return CD({inputs:{x:a},backend:n});let h=new OM(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var PM={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=rc.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),p=new LM(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};var BM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=rc.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a],i.dtype)}};var WM={kernelName:ht,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;KF([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=rc.computePool2DInfo(i.shape,o,l,1,u),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}};var VM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return sM({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},UM={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;ra.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ra.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ra.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=Ge().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],rc.assertAndGetBroadcastShape(e,t),rc.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(rc.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(rc.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],rc.assertAndGetBroadcastShape(e,t),rc.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(rc.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(rc.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}},GM=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t,n=wR(this.rank),r=`uniform int start[${this.rank}];`,a=function(e){if(1===e)return"sourceLoc";if(e<=6)return HM.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);t=`\n        ${n} sourceLoc;\n        ${n} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${HM[t]} = start[${t}] + coords.${HM[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${r}\n      void main() {\n        ${t}\n        setOutput(getSource(${a}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}},HM=["x","y","z","w","u","v"];var jM=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=wR(this.rank),n=tD("coords",this.rank),r=tD("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}};function qM(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Li.parseSliceParams(a,s,i);if(Li.assertParamsValid(a,o,l),0===ra.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=qR(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=Li.isSliceContinous(a.shape,o,l);if(u||!h){let e=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jM(l):new GM(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Li.computeFlatOffset(t,ra.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var KM={kernelName:fr,backendName:"webgl",kernelFunc:qM},XM={kernelName:ft,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ra.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=rc.getReshaped(a.shape,s,o),u=rc.getPermuted(l.length,s.length),h=rc.getReshapedPermuted(a.shape,s,o),p=rc.getSliceBeginCoords(i,s.length),d=rc.getSliceSize(h,i,s.length),c=[],f=jD({inputs:{x:a},backend:n,attrs:{shape:l}}),m=nM({inputs:{x:f},backend:n,attrs:{perm:u}}),g=jD({inputs:{x:m},backend:n,attrs:{shape:h}}),y=qM({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var YM={kernelName:mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=CR(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},JM=zD({opSnippet:"return float(a != b);",dtype:"bool"}),ZM={kernelName:Bn,backendName:"webgl",kernelFunc:JM};function QM(e){let{inputs:t,backend:n}=e,{input:r}=t;return CD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var eO={kernelName:Qn,backendName:"webgl",kernelFunc:QM},tO="return float(int(x));";var nO={kernelName:yt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return CD({inputs:{x:s},backend:r});let t=yh(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=$D({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=QM({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ra.hasEncodingLoss(s.dtype,i)){let e=CD({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new iD(e.shape,tO),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",ra.getTypedArrayFromDType("bool",1)),t=JM({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},rO="return ceil(x);",aO=LD({opSnippet:rO,packedOpSnippet:rO,cpuKernelImpl:$R}),sO={kernelName:bt,backendName:"webgl",kernelFunc:aO};var iO={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Ge().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(s.shape);let l=t.getCustomSetupFunc(i,o);return r.runWebGLProgram(t,[s],s.dtype,l)}};function oO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var lO={kernelName:wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[oO(r,a.complexTensorInfos.real),oO(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},uO=class{constructor(e){this.outputShape=[],this.outputShape=rc.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},hO=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=rc.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=wR(r),s=tD("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${pO(i,l,t)}),\n            vec2(${pO(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${pO(i,l,c)}),\n          vec2(${pO(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function pO(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function dO(e){let{inputs:t,backend:n}=e,{input:r}=t;return CD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var cO={kernelName:un,backendName:"webgl",kernelFunc:dO};function fO(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>QM({inputs:{input:e},backend:n}))),a=e.map((e=>dO({inputs:{input:e},backend:n}))),s=fO(r,t,n),i=fO(a,t,n),o=$D({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if("string"===r){let{tensors2D:a,outShape:s}=mO(e,t,n),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===a[0].shape[0],l=_R(i,s,r,o),u=rc.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>Ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=fO(e.slice(0,r),t,n),s=fO(e.slice(r),t,n),i=fO([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new hO(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:a,outShape:s}=mO(e,t,n),i=new uO(a.map((e=>e.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));let l=jD({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}function mO(e,t,n){let r=rc.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>jD({inputs:{x:e},attrs:{shape:[-1,ra.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}function gO(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ra.parseAxisParam(a,t[0].shape)[0],i=rc.computeOutShape(t.map((e=>e.shape)),s);if(0===ra.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>ra.sizeFromShape(e.shape)>0));if(1===o.length)return CD({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return rc.assertParamsConsistent(l,s),fO(o,s,n)}var yO={kernelName:kt,backendName:"webgl",kernelFunc:gO},bO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}},xO=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:h,dataFormat:p}=n,{left:d,top:c}=o,f=a*r,m=YF(),g="channelsLast"===p,y=g?0:1,b=g?1:2,x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${c};\n            d0 = offsetY + ${h} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}};function vO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[],g=(1===d||1===c)&&p>aM,y=u[2]%2!=0&&!!h.isPacked;if(!g&&Ge().getBool("WEBGL_LAZILY_UNPACK")&&Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){let p=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,ra.assert(UF(h.shape,d.shape),(()=>`packed reshape ${h.shape} to ${d.shape} isn't free`));let g=jD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);let y=sM({a:d,b:g,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(y.dataId);ra.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,b.shape=n.outShape,l=CD({inputs:{x:y},backend:r}),l.shape=n.outShape,m.push(y)}else{let h=jD({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),p=jD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=sM({a:h,b:p,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=jD({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(h),m.push(p),m.push(d)}for(let e of m)r.disposeIntermediateTensorInfo(e);return l}function wO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[m,g],b=[],x=jD({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=jD({inputs:{x:t},backend:r,attrs:{shape:[1,m,ra.sizeFromShape(t.shape)/m]}});b.push(x),b.push(v);let w=new xO(y,x.shape,n),k=r.runWebGLProgram(w,[x],"float32"),I=jD({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(I);let N=null!=a,S=null!=s,C="leakyrelu"===o,T=o?PD(o,!0):null,$=new BD(I.shape,v.shape,[1,g,n.outChannels],!0,!1,N,T,S,C),_=[I,v];if(a&&_.push(a),S&&_.push(s),C){let e=r.makeTensorInfo([],"float32",ra.createScalarValue(i,"float32"));_.push(e),b.push(e)}let E=r.runWebGLProgram($,_,"float32"),A=jD({inputs:{x:E},backend:r,attrs:{shape:f?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});b.push(E);for(let e of b)r.disposeIntermediateTensorInfo(e);return A}var kO={kernelName:It,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=rc.convertConv2DDataFormat(u),c=rc.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(Ge().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=wO({x:s,filter:i,convInfo:c,backend:r});else{let e=new bO(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=vO({x:s,filter:i,convInfo:c,backend:r});let f=jD({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}};var IO={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=rc.convertConv2DDataFormat(l),d=rc.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var NO={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=rc.convertConv2DDataFormat(u),d=rc.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var SO={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=rc.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var CO={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=rc.computeConv3DInfo(a.shape,l,i,1,o),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var TO={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=rc.computeConv3DInfo(l,s.shape,o,1,i),h=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}},$O=LD({opSnippet:OD+"\n  return cos(x);\n"}),_O={kernelName:_t,backendName:"webgl",kernelFunc:$O},EO=LD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),AO={kernelName:Et,backendName:"webgl",kernelFunc:EO},FO={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")}},RO=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let r=e.length,a=t?"0.0":`getX(${DO(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${wR(r)} coords = getOutputCoords();\n        int end = ${MO(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${MO(r,"coords")} = idx;\n          val += getX(${DO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function DO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function MO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var OO={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=rc.getAxesPermutation([s],l),h=a;null!=u&&(h=nM({inputs:{x:a},backend:n,attrs:{perm:u}}));let p=rc.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let d=h.shape[p],c=CD({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){let t=new RO(h.shape,!1,o),r=t.getCustomSetupFunc(e),a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new RO(h.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=nM({inputs:{x:c},backend:n,attrs:{perm:rc.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),e}return c}};var LO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=CR(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=TR(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var zO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ra.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));let o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}},PO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,c=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels,g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");let b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${h});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${p};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}},BO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,c=e.filterHeight,f=e.filterWidth,m=f,g="int xR; int xC; int xCOffset;";for(let e=0;e<c;e++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<c;e++)for(let t=0;t<m;t++){let n=2*t;if(g+=`\n          xR = xRCorner + ${e*p};\n          xC = xCCorner + ${n*d};\n        `,1===h){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){let t=l%2==0?ra.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<c;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");let x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${h});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}};var WO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),ra.assert(rc.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let p,d=rc.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);return p=Ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new BO(d):new PO(d),n.runWebGLProgram(p,[a,s],"float32")}};var VO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=rc.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var UO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=rc.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var GO={kernelName:zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ra.sizeFromShape(r.shape),i=jD({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=jD({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};var HO={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=rc.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=jD({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}},jO=LD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),qO={kernelName:Ut,backendName:"webgl",kernelFunc:jO},KO={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new ID("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},XO=zD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),YO={kernelName:jt,backendName:"webgl",kernelFunc:XO},JO=LD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${rc.ERF_P};\n  float a1 = ${rc.ERF_A1};\n  float a2 = ${rc.ERF_A2};\n  float a3 = ${rc.ERF_A3};\n  float a4 = ${rc.ERF_A4};\n  float a5 = ${rc.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ZO={kernelName:Ht,backendName:"webgl",kernelFunc:JO},QO="return exp(x);",eL=LD({opSnippet:QO,packedOpSnippet:QO,cpuKernelImpl:ER}),tL={kernelName:qt,backendName:"webgl",kernelFunc:eL};function nL(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(ra.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),jD({inputs:{x:s},backend:r,attrs:{shape:o}})}var rL={kernelName:Kt,backendName:"webgl",kernelFunc:nL},aL="return exp(x) - 1.0;",sL=LD({opSnippet:aL,packedOpSnippet:aL,cpuKernelImpl:AR}),iL={kernelName:Xt,backendName:"webgl",kernelFunc:sL},oL=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function lL(e,t,n){let r=n.texData.get(e.dataId),a=ra.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=jD({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new oL("real",o,t),u=new oL("imag",o,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),c=$D({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let f=jD({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var uL={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return lL(r,!1,n)}},hL=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function pL(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||ra.inferDtype(a),"string"===s){let e=ra.getArrayFromDType(s,ra.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new hL(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}var dL,cL={kernelName:Jt,backendName:"webgl",kernelFunc:pL},fL={kernelName:Zt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},mL="return floor(x);",gL=LD({opSnippet:mL,packedOpSnippet:mL,cpuKernelImpl:FR}),yL={kernelName:Qt,backendName:"webgl",kernelFunc:gL},bL=zD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),xL={kernelName:en,backendName:"webgl",kernelFunc:bL},vL={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[u,l],p=[u,l,s];(o||i)&&(null==dL&&(dL=document.createElement("canvas").getContext("2d")),dL.canvas.width=l,dL.canvas.height=u,dL.drawImage(a,0,0,l,u),a=dL.canvas);let d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=gF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Ge().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=YF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(p):new class{constructor(e){this.variableNames=["A"];let t=YF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(p),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}};var wL={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=rc.convertConv2DDataFormat(p),y=rc.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Ge().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=wO({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?PD(f,!1):null,h=new bO(y,e,u,n,a),p=[s,i];if(o&&p.push(o),l&&p.push(l),a){let e=r.makeTensorInfo([],"float32",ra.createScalarValue(m,"float32"));p.push(e),b.push(e)}t=r.runWebGLProgram(h,p,"float32")}else t=vO({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let x=jD({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),x}};var kL={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),ra.assert(rc.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=rc.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=Ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?PD(d,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",ra.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new BO(y,w,x,k,I):new PO(y,w,x,k,I);let N=n.runWebGLProgram(g,v,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};var IL={kernelName:rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],[o,l,u,h]=rc.prepareAndValidate(r,a),p=jD({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),d=jD({inputs:{x:r},backend:n,attrs:{shape:[ra.sizeFromShape(r.shape)/u,u]}}),c=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=wR(t.length),a=wR(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[l,u]),f=n.runWebGLProgram(c,[d,p],d.dtype),m=jD({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};var NL={kernelName:nn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=ra.parseAxisParam(i,a.shape)[0],u=rc.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=ra.sizeFromShape(s.shape),p=[],d=jD({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=jD({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=RR(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=wR(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=jD({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},SL=zD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:DR,dtype:"bool"}),CL={kernelName:an,backendName:"webgl",kernelFunc:SL},TL=zD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),$L={kernelName:sn,backendName:"webgl",kernelFunc:TL};var _L={kernelName:ln,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return lL(r,!0,n)}},EL=LD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),AL={kernelName:hn,backendName:"webgl",kernelFunc:EL},FL=LD({opSnippet:"return float(isinf(x));",dtype:"bool"}),RL={kernelName:pn,backendName:"webgl",kernelFunc:FL},DL=LD({opSnippet:"return float(isnan(x));",dtype:"bool"}),ML={kernelName:dn,backendName:"webgl",kernelFunc:DL},OL=zD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:MR,dtype:"bool"}),LL={kernelName:fn,backendName:"webgl",kernelFunc:OL},zL=zD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),PL={kernelName:mn,backendName:"webgl",kernelFunc:zL};var BL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=OR(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},WL=LD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:LR}),VL={kernelName:yn,backendName:"webgl",kernelFunc:WL},UL=LD({opSnippet:"return log(1.0 + x);"}),GL={kernelName:bn,backendName:"webgl",kernelFunc:UL},HL=zD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),jL={kernelName:xn,backendName:"webgl",kernelFunc:HL},qL=LD({opSnippet:"return float(!(x >= 1.0));"}),KL={kernelName:vn,backendName:"webgl",kernelFunc:qL},XL=zD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),YL={kernelName:wn,backendName:"webgl",kernelFunc:XL},JL={kernelName:In,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Ge().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},ZL={kernelName:Nn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)}};function QL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=ra.parseAxisParam(s,a.shape),u=l,h=rc.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let r=ZR(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=QD(a,h,n);u=rc.getInnerMostAxes(u.length,o)}rc.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=rc.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=rc.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=zR(e,ra.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=ra.sizeFromShape(t),s=jD({inputs:{x:e},attrs:{shape:[ra.sizeFromShape(e.shape)/a,a]},backend:r}),i=YD(s,e.dtype,"max",r),o=jD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var ez={kernelName:Sn,backendName:"webgl",kernelFunc:QL},tz=zD({opSnippet:kD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+ND+"\n  return result;\n",cpuKernelImpl:PR}),nz={kernelName:Cn,backendName:"webgl",kernelFunc:tz};var rz={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;KF(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ra.assert(rc.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=rc.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ra.arraysEqual(u.inShape,u.outShape))return CD({inputs:{x:a},backend:n});let h=new OM(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var az={kernelName:_n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=rc.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),p=new LM(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};var sz={kernelName:En,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=rc.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new LM(p,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var iz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;KF([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=rc.computePool2DInfo(o.shape,l,u,1,h,p),c=new OM(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var oz={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ra.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];ra.assert(rc.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let h=rc.computePool2DInfo(r.shape,a,s,u,i),[p,d]=function(e,t,n,r){let a=new OM(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new OM(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,h,l);return[p,d]}};var lz={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=ra.parseAxisParam(s,r.shape),u=l,h=rc.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];let n=ZR(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=QD(r,h,i);c.push(f),u=rc.getInnerMostAxes(u.length,o)}rc.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=rc.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=rc.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=ra.sizeFromShape(t),s=jD({inputs:{x:e},attrs:{shape:[ra.sizeFromShape(e.shape)/a,a]},backend:r}),i=YD(s,"float32","mean",r),o=jD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var uz={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ra.parseAxisParam(s,a.shape),u=l,h=rc.getAxesPermutation(u,o),p=a;null!=h&&(p=nM({inputs:{x:a},backend:n,attrs:{perm:h}}),u=rc.getInnerMostAxes(u.length,a.shape.length)),rc.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=rc.computeOutAndReduceShapes(p.shape,u),m=jD({inputs:{x:p},backend:n,attrs:{shape:[-1,ra.sizeFromShape(f)]}}),g=YD(m,m.dtype,"min",n);if(i){d=jD({inputs:{x:g},backend:n,attrs:{shape:rc.expandShapeToKeepDim(c,l)}})}else d=jD({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},hz=zD({opSnippet:kD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+ND+"\n  return result;\n",cpuKernelImpl:BR}),pz={kernelName:Dn,backendName:"webgl",kernelFunc:hz},dz={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=tD("rc",r),l=tD("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},cz=zD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+ND+"\n  return result;\n"}),fz={kernelName:On,backendName:"webgl",kernelFunc:cz},mz=zD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),gz={kernelName:Vt,backendName:"webgl",kernelFunc:mz},yz="return a - b;",bz=zD({opSnippet:yz,packedOpSnippet:yz,supportsComplex:!0,cpuKernelImpl:XR}),xz={kernelName:Tr,backendName:"webgl",kernelFunc:bz};function vz(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ra.parseAxisParam([s],a.shape),o=QL({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=rc.expandShapeToKeepDim(o.shape,i),u=jD({inputs:{x:o},backend:n,attrs:{shape:l}}),h=bz({inputs:{a:a,b:u},backend:n}),p=eL({inputs:{x:h},backend:n}),d=eM({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=jD({inputs:{x:d},backend:n,attrs:{shape:l}}),f=mz({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var wz={kernelName:Nr,backendName:"webgl",kernelFunc:vz};var kz={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:vz({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}(u,h,s),d=p.getCustomSetupFunc(i),c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}},Iz="return -x;";var Nz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=VR(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bD(a.shape,Iz):new iD(a.shape,Iz),r.runWebGLProgram(t,[a],a.dtype)}},Sz=Pc.nonMaxSuppressionV3Impl;var Cz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){rc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=Sz(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Tz=Pc.nonMaxSuppressionV4Impl;var $z={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){rc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=Tz(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},_z=Pc.nonMaxSuppressionV5Impl;var Ez={kernelName:Un,backendName:"webgl",kernelFunc:function(e){rc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=_z(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Az={kernelName:Hn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=ra.sizeFromShape(a.shape),u=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(l,s,i,o),h=jD({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[h],a.dtype);n.disposeIntermediateTensorInfo(h);let d=jD({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function Fz(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=QM({inputs:{input:r},backend:n}),t=Fz({inputs:{x:e},backend:n}),a=dO({inputs:{input:r},backend:n}),s=Fz({inputs:{x:a},backend:n}),i=$D({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return pL({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var Rz={kernelName:Pr,backendName:"webgl",kernelFunc:Fz};var Dz={kernelName:Gn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=QM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=dO({inputs:{input:a},backend:r}),i=Fz({inputs:{x:s},backend:r}),o=$D({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return pL({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var Mz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return nL({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ra.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ra.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=gO({inputs:t.map((e=>{let t=nL({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},Oz=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=tD("rc",r),l=tD("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(a.shape,s,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,l)},Lz={kernelName:qn,backendName:"webgl",kernelFunc:Oz},zz=zD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+ND+"\n  return result;\n"}),Pz={kernelName:Xn,backendName:"webgl",kernelFunc:zz};var Bz={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=ra.parseAxisParam(i,s.shape),p=h,d=rc.getAxesPermutation(p,l),c=s;if(null!=d&&(c=nM({inputs:{x:s},backend:r,attrs:{perm:d}}),p=rc.getInnerMostAxes(p.length,l),u.push(c)),rc.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=UR(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=rc.computeOutAndReduceShapes(c.shape,p),a=ra.sizeFromShape(n),i=jD({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=YD(i,Da(s.dtype),"prod",r);t=jD({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=rc.expandShapeToKeepDim(t.shape,h);t=jD({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},Wz=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=GR(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Vz={kernelName:Zn,backendName:"webgl",kernelFunc:Wz},Uz=LD({opSnippet:"return 1.0 / x;"}),Gz={kernelName:er,backendName:"webgl",kernelFunc:Uz},Hz=LD({opSnippet:oD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jz={kernelName:tr,backendName:"webgl",kernelFunc:Hz},qz=LD({opSnippet:oD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Kz={kernelName:or,backendName:"webgl",kernelFunc:qz};var Xz={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}};var Yz={kernelName:ir,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var Jz={kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}};var Zz={kernelName:ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var Qz={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ra.parseAxisParam(s,a.shape);if(0===i)return CD({inputs:{x:a},backend:n});let l=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=tD("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=wR(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=wR(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},eP={kernelName:Vr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}(r.shape,s),[u,h]=rc.getImageCenter(i,r.shape[1],r.shape[2]),p=l.getCustomSetupFunc(u,h,Math.sin(a),Math.cos(a));return o.runWebGLProgram(l,[r],r.dtype,p)}},tP=LD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),nP={kernelName:ur,backendName:"webgl",kernelFunc:tP},rP=LD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:HR}),aP={kernelName:hr,backendName:"webgl",kernelFunc:rP},sP=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=wR(a.length),l=wR(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var iP={kernelName:pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=rc.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=jD({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=jD({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new sP(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=jD({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};var oP={kernelName:dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=wR(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Ra(a.dtype,s.dtype))}},lP=LD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${rc.SELU_SCALEALPHA};\n  float scale = ${rc.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),uP={kernelName:cr,backendName:"webgl",kernelFunc:lP},hP=LD({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),pP={kernelName:br,backendName:"webgl",kernelFunc:hP},dP=LD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cP={kernelName:yr,backendName:"webgl",kernelFunc:dP},fP=LD({opSnippet:OD+"\n  return sin(x);\n"}),mP={kernelName:mr,backendName:"webgl",kernelFunc:fP},gP=LD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),yP={kernelName:gr,backendName:"webgl",kernelFunc:gP},bP=LD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),xP={kernelName:xr,backendName:"webgl",kernelFunc:bP},vP={kernelName:kr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ra.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=Oz({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=rc.getReshaped(h.shape,s,o,!1),d=rc.getPermuted(p.length,s.length,!1),c=rc.getReshapedPermuted(h.shape,s,o,!1),f=jD({inputs:{x:h},backend:n,attrs:{shape:p}}),m=nM({inputs:{x:f},backend:n,attrs:{perm:d}}),g=jD({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var wP={kernelName:$r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:h,outputSize:p}=rc.calculateShapes(s,a,o),d=new sP(u,l,a.shape.length,s.shape.length,h,[p,1],!1),c=n.runWebGLProgram(d,[s,a,i],s.dtype),f=jD({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(c),f}};var kP={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ra.parseAxisParam(i,a.shape)[0],l=rc.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=qM({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r}))}},IP=LD({opSnippet:"return sqrt(x);"}),NP={kernelName:vr,backendName:"webgl",kernelFunc:IP},SP=LD({opSnippet:"return x * x;"}),CP={kernelName:Cr,backendName:"webgl",kernelFunc:SP},TP="return (a - b) * (a - b);",$P=zD({opSnippet:TP,packedOpSnippet:TP}),_P={kernelName:Sr,backendName:"webgl",kernelFunc:$P};var EP={kernelName:Br,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=oD+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new iD(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};var AP={kernelName:_r,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=Li.sliceInfo(s.shape,i,o,l,u,h,p,d,c),v=jD({inputs:{x:s},backend:r,attrs:{shape:b}});if(f){let e=qM({inputs:{x:v},backend:r,attrs:{begin:m,size:y}});t=jD({inputs:{x:e},backend:r,attrs:{shape:x}}),r.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))t=r.makeTensorInfo(x,s.dtype,[]);else if(r.shouldExecuteOnCPU([v])){let e=r.texData.get(v.dataId).values,n=Ys(v.shape,v.dtype,e),a=KR(x,n,g,m);t=r.makeTensorInfo(x,v.dtype,a.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=wR(n.length),s=wR(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(m,g,x);t=r.runWebGLProgram(e,[v],v.dtype)}let w=jD({inputs:{x:t},backend:r,attrs:{shape:x}});return r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(t),w}},FP=LD({opSnippet:"return tan(x);"}),RP={kernelName:Er,backendName:"webgl",kernelFunc:FP},DP=LD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),MP={kernelName:Ar,backendName:"webgl",kernelFunc:DP},OP=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=wR(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function LP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype){let e=n.readSync(a.dataId).map((e=>ra.decodeString(e))),t=Ys(a.shape,a.dtype,e),r=YR(t,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}let i=new OP(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var zP={kernelName:Fr,backendName:"webgl",kernelFunc:LP};var PP={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[l,u]=JR(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var BP={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(p,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}};var WP={kernelName:Or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;KF(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=QR(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var VP={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let e=0;e<o;e++)e!==s&&(u[h++]=i.shape[e]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=qM({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),r=jD({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var UP={kernelName:zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=rc.getAxesPermutation([u],o),p=a;null!=h&&(p=nM({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=rc.getInnerMostAxes(1,o)[0]);let d=rc.segment_util.computeOutShape(p.shape,u,i),c=ra.sizeFromShape([p.shape[u]]),f=jD({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Da(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=rc.segment_util.segOpComputeOptimalWindowSize(o,s),h={windowSize:u,inSize:o,batchSize:i,numSegments:s},p=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(h,t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=Wz({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=LP({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=jD({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;if(null!=h){l.push(y);let e=rc.getUndoAxesPermutation(h);b=nM({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},GP=[JL,ZL,iM,lM,hM,dM,mM,gM,yM,bM,NM,SM,TM,_M,RM,AM,MM,PM,zM,BM,WM,VM,UM,XM,YM,nO,sO,iO,lO,_D,yO,IO,NO,kO,CO,TO,SO,_O,AO,FO,OO,LO,zO,VO,UO,WO,GO,HO,qO,KO,YO,ZO,tL,rL,iL,uL,cL,fL,yL,xL,vL,wL,kL,IL,NL,CL,$L,TD,_L,cO,AL,RL,ML,FD,LL,PL,BL,GL,VL,jL,KL,YL,ez,az,rz,sz,iz,oz,nz,lz,uz,pz,dz,fz,kz,HD,Nz,Cz,$z,Ez,ZM,Az,Dz,Mz,Lz,Pz,MD,Bz,Vz,eO,gz,Gz,Kz,jz,qD,Xz,Yz,Jz,Zz,Qz,eP,nP,aP,iP,oP,uP,pP,cP,mP,yP,KM,wz,xP,vP,wP,kP,NP,CP,_P,EP,AP,xz,tM,RP,MP,zP,PP,BP,rM,WP,VP,UP,Rz];for(let e of GP)Jr(e);var HP,jP,qP,KP={"tfjs-core":bo,"tfjs-backend-cpu":"3.3.0","tfjs-backend-webgl":"3.3.0","tfjs-data":TC,"tfjs-layers":px,"tfjs-converter":fS,tfjs:"3.3.0"};!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(HP||(HP={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu"}(jP||(jP={}));var XP={kernelName:Ur,backendName:"wasm",setupFunc:function(e){qP=e.wasm.cwrap(Ur,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=jP[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=a.shape[0],v=n.makeOutput([x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return qP(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,w),v}};function YP(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){let{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(s.dataId).id;return 0===ra.sizeFromShape(s.shape)||t(a,i),s}}}var JP=YP(Xe);function ZP(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){let{backend:s,inputs:i}=a,{a:o,b:l}=i,u=s.dataIdMap.get(o.dataId).id,h=s.dataIdMap.get(l.dataId).id,p=null!=n?n:o.dtype,d=rc.assertAndGetBroadcastShape(o.shape,l.shape),c=s.makeOutput(d,p);if(0===ra.sizeFromShape(d))return c;let f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(l.shape).buffer),g=s.dataIdMap.get(c.dataId).id,y=()=>r(u,f,o.shape.length,h,m,l.shape.length,HP[o.dtype],g);if(t&&"float32"===o.dtype)return y(),c;let b=rc.getBroadcastDims(o.shape,d),x=rc.getBroadcastDims(l.shape,d),v=b.every(((e,t)=>e===t)),w=x.every(((e,t)=>e===t));if(v&&w)return y(),c;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}var QP,eB=ZP(Ze,!0);var tB={kernelName:Qe,backendName:"wasm",setupFunc:function(e){QP=e.wasm.cwrap(Qe,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ra.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return QP(s,a.length,HP[r.dtype],i),r}};function nB(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var rB,aB={kernelName:on,backendName:"wasm",kernelFunc:nB};function sB(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=nB({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return rB(h,c,l.shape.length,HP[l.dtype],p,d,s.length),u}var iB,oB={kernelName:Mr,backendName:"wasm",kernelFunc:sB,setupFunc:function(e){rB=e.wasm.cwrap(Mr,null,["number","array","number","number","number","array","number"])}};function lB(e,t,n){let r=e.shape,a=e.shape.length,s=ra.parseAxisParam(t,r),i=s,o=rc.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=rc.getInnerMostAxes(i.length,a),l=sB({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var uB,hB={kernelName:nt,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=lB(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=ra.sizeFromShape(c.shape),g=l.shape[h[0]];return iB(o,HP[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c},setupFunc:function(e){iB=e.wasm.cwrap(nt,null,["number","number","number","number","number"])}};var pB={kernelName:ut,backendName:"wasm",setupFunc:function(e){uB=e.wasm.cwrap(ut,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=rc.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let v=r.makeOutput(h.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return uB(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w),v}};function dB(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ra.sizeFromShape(r.shape),i=ra.inferFromImplicitShape(a,s);return ra.assert(s===ra.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var cB,fB={kernelName:nr,backendName:"wasm",kernelFunc:dB};var mB={kernelName:ct,backendName:"wasm",setupFunc:function(e){cB=e.wasm.cwrap(ct,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ra.sizeFromShape(f),y=ra.sizeFromShape(m),b=g===y||1===g||1===y;ra.assert(l>=2&&u>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));let x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,c]);ra.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let v=o?[y,c,p]:[y,p,c],w=dB({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),k=dB({inputs:{x:s},backend:n,attrs:{shape:v}}),I=n.dataIdMap.get(w.dataId).id,N=n.dataIdMap.get(k.dataId).id,S=i?w.shape[2]:w.shape[1],C=o?k.shape[1]:k.shape[2],T=Math.max(g,y),$=n.makeOutput([T,S,C],w.dtype),_=n.dataIdMap.get($.dataId).id,E=new Uint8Array(new Int32Array(w.shape).buffer),A=new Uint8Array(new Int32Array(k.shape).buffer);return cB(I,E,w.shape.length,N,A,k.shape.length,i,o,_),n.disposeData(w.dataId),n.disposeData(k.dataId),$.shape=x,$}};function gB(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var yB,bB={kernelName:yt,backendName:"wasm",kernelFunc:gB},xB=YP(bt);var vB={kernelName:xt,backendName:"wasm",setupFunc:function(e){yB=e.wasm.cwrap(xt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return yB(o,s,i,u),l}};function wB(e,t,n,r,a){let s=Li.isSliceContinous(r,t,n),i=ra.sizeFromShape(n),o=ra.computeStrides(r);if(s){let n=Li.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=Ys(r,a,"string"===a?rc.fromUint8ToStringArray(e):e),u=Ys(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?rc.fromStringArrayToUint8(u.values):u.values}function kB(e){let{inputs:t,backend:n}=e,r=ra.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=rc.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>ra.sizeFromShape(e.shape)>0));if(1===s.length)return nB({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===ra.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(rc.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=ra.sizeFromShape(e.shape.slice(r));return dB({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=rc.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=function(e,t,n,r){let a=ra.getArrayFromDType(n,ra.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=ra.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?rc.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(o,a,t[0].dtype,l),h=rc.computeOutShape(s.map((e=>e.shape)),r);return i.shape=h,n.dataIdMap.get(i.dataId).stringBytes=rc.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=ra.sizeFromShape(s[0].shape.slice(0,r)),u=0,h=s.map((e=>{let t=ra.sizeFromShape(e.shape.slice(r));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let r=h[n],a=e*r,s=p[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var IB,NB={kernelName:kt,backendName:"wasm",kernelFunc:kB};var SB,CB={kernelName:It,backendName:"wasm",setupFunc:function(e){IB=e.wasm.cwrap(It,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=rc.convertConv2DDataFormat(d),f=rc.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,C=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let $=r.makeOutput(f.outShape,"float32"),_=r.dataIdMap.get($.dataId).id;return IB(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,T,w,k,I,N,S,C,_),$}};var TB,$B,_B={kernelName:St,backendName:"wasm",setupFunc:function(e){SB=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=rc.convertConv2DDataFormat(l),d=rc.computeConv2DInfo(h,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,N=f-1-d.padInfo.top,S=m-1-d.padInfo.left,C="channelsLast"===d.dataFormat,T=ra.computeStrides(d.inShape),$=ra.computeStrides(a.shape),[_,E,A]=ra.computeStrides(s.shape),F=T[0],R=C?T[1]:T[2],D=C?T[2]:1,M=C?1:T[1],O=$[0],L=C?$[1]:$[2],z=C?$[2]:1,P=C?1:$[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return SB(V,U,c,f,m,y,b,g,v,w,x,k,I,N,S,_,E,A,F,R,D,M,O,L,z,P,W),B}},EB=YP(_t);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(TB||(TB={}));var AB,FB={kernelName:Ft,backendName:"wasm",setupFunc:function(e){$B=e.wasm.cwrap(Ft,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=gB({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return $B(g,y,b,p,w,d,c,TB[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var RB,DB={kernelName:At,backendName:"wasm",setupFunc:function(e){AB=e.wasm.cwrap(At,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ra.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=rc.getAxesPermutation([s],l),h=a;null!==u&&(h=sB({inputs:{x:a},attrs:{perm:u},backend:n}));let p=rc.getInnerMostAxes(1,l)[0];rc.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;AB(f,i?1:0,o?1:0,c,m,HP[a.dtype]);let g=d;if(null!==u){g=sB({inputs:{x:d},attrs:{perm:rc.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var MB,OB={kernelName:Dt,backendName:"wasm",setupFunc:function(e){RB=e.wasm.cwrap(Dt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r;ra.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));let o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(ra.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(ra.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return RB(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,v),m}};var LB={kernelName:Mt,backendName:"wasm",setupFunc:function(e){MB=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=rc.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,N=c.inChannels,S=c.outChannels,C="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(c.outShape,"float32"),$=r.dataIdMap.get(T.dataId).id;return MB(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,C,v,w,k,I,N,S,$),T}},zB=ZP(jt,!1,"bool"),PB=YP(qt);function BB(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ra.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),dB({inputs:{x:a},backend:r,attrs:{shape:o}})}var WB={kernelName:Kt,backendName:"wasm",kernelFunc:BB};var VB,UB={kernelName:Jt,backendName:"wasm",kernelFunc:function(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}};var GB,HB={kernelName:Zt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return VB(s,o,l,u,h,i),a},setupFunc:function(e){VB=e.wasm.cwrap(Zt,null,["number","number","number","number","number","number"])}},jB=YP(Qt),qB=ZP(en,!1);var KB,XB={kernelName:tn,backendName:"wasm",setupFunc:function(e){GB=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ra.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return GB(h,p,d,c,f,a,g),m}};var YB,JB={kernelName:Gr,backendName:"wasm",setupFunc:function(e){KB=e.wasm.cwrap(Gr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=rc.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=jP[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,T=m.dilationHeight,$=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return KB(y,R,D,M,b,w,k,v,I,N,S,C,F,T,$,_,E,A,x,g,z,f||0,L),O}};var ZB,QB={kernelName:Hr,backendName:"wasm",setupFunc:function(e){YB=e.wasm.cwrap(Hr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=rc.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=jP[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,T=m.dilationHeight,$=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return YB(y,R,D,M,b,w,k,v,I,N,S,C,F,T,$,_,E,A,x,g,z,f||0,L),O}};var eW,tW={kernelName:rn,backendName:"wasm",setupFunc:function(e){ZB=e.wasm.cwrap(rn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Ai.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return ZB(d,HP[r.dtype],c,i,p,o,f,m),u}};var nW,rW={kernelName:nn,backendName:"wasm",setupFunc:function(e){eW=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=ra.parseAxisParam(i,a.shape)[0],u=rc.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=dB({inputs:{x:a},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:t}),p=ra.sizeFromShape(s.shape),d=dB({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:t}),c=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],f=t.makeOutput(c,a.dtype);if(0===ra.sizeFromShape(a.shape))return f;let m=h.shape.length-1,g=t.dataIdMap.get(h.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=new Uint8Array(new Int32Array(ra.computeStrides(h.shape)).buffer),v=new Uint8Array(new Int32Array(ra.computeStrides(c)).buffer);return eW(g,HP[a.dtype],x,m,y,u.batchSize,v,b),t.disposeData(h.dataId),t.disposeData(d.dataId),f.shape=u.outputShape,f}},aW=ZP(an,!1,"bool"),sW=ZP(sn,!1,"bool");var iW,oW={kernelName:cn,backendName:"wasm",setupFunc:function(e){nW=e.wasm.cwrap(cn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,t.dtype);if(0!==ra.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;nW(a,n,e)}return s}},lW=ZP(fn,!1,"bool"),uW=ZP(mn,!1,"bool"),hW=YP(yn),pW=ZP(xn,!1,"bool");var dW,cW={kernelName:Sn,backendName:"wasm",setupFunc:function(e){iW=e.wasm.cwrap(Sn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=lB(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;rc.assertAxesAreInnerMostDims("max",h,c);let[f,m]=rc.computeOutAndReduceShapes(l.shape,h),g=ra.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ra.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;iW(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=rc.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},fW=ZP(Cn,!1);var mW,gW={kernelName:Tn,backendName:"wasm",setupFunc:function(e){dW=e.wasm.cwrap(Tn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=rc.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return dW(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v,w,k,N),I}};var yW,bW={kernelName:Fn,backendName:"wasm",setupFunc:function(e){mW=e.wasm.cwrap(Fn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=lB(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=rc.getInnerMostAxes(f.length,u.shape.length))}rc.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=rc.computeOutAndReduceShapes(u.shape,f),y=ra.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=gB({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;mW(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=rc.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var xW,vW={kernelName:Rn,backendName:"wasm",setupFunc:function(e){yW=e.wasm.cwrap(Rn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=lB(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;rc.assertAxesAreInnerMostDims("min",p,f);let[m,g]=rc.computeOutAndReduceShapes(u.shape,p),y=ra.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;yW(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=rc.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},wW=ZP(Dn,!1),kW=ZP(zn,!0),IW=YP(Pn);function NW(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var SW,CW={kernelName:Wn,backendName:"wasm",setupFunc:function(e){xW=e.wasm.cwrap(Wn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=xW(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=NW(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}};var TW,$W={kernelName:Vn,backendName:"wasm",setupFunc:function(e){SW=e.wasm.cwrap(Vn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=SW(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NW(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var _W,EW={kernelName:Un,backendName:"wasm",setupFunc:function(e){TW=e.wasm.cwrap(Un,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=TW(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NW(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},AW=ZP(Bn,!1,"bool");var FW={kernelName:Hn,backendName:"wasm",setupFunc:function(e){_W=e.wasm.cwrap(Hn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(a.dataId).id;return _W(h,s,i,o,u),l}};var RW={kernelName:Gn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var DW,MW={kernelName:jn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return BB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ra.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ra.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=kB({inputs:t.map((e=>{let t=BB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var OW,LW={kernelName:qn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return DW(i,u,t.shape.length,HP[t.dtype],d,c,a,l),o},setupFunc:function(e){DW=e.wasm.cwrap(qn,null,["number","array","number","number","array","array","number","number"])}},zW=ZP(Xn,!1);var PW,BW={kernelName:Yn,backendName:"wasm",setupFunc:function(e){OW=e.wasm.cwrap(Yn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),l=n.dataIdMap.get(o.dataId).id;return OW(s,i,l),o}};var WW,VW={kernelName:Jn,backendName:"wasm",setupFunc:function(e){PW=e.wasm.cwrap(Jn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=lB(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=rc.getInnerMostAxes(f.length,u.shape.length))}rc.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=rc.computeOutAndReduceShapes(u.shape,f),y=ra.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;PW(l,y,HP[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=rc.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},UW={kernelName:Zn,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ra.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=ra.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},GW=ZP(Vt,!0),HW=YP(tr),jW=YP(or);var qW,KW={kernelName:sr,backendName:"wasm",setupFunc:function(e){WW=e.wasm.cwrap(sr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=gB({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===ra.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return WW(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var XW,YW={kernelName:lr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ra.parseAxisParam(s,a.shape);if(0===a.shape.length)return nB({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);qW(l,h,i.length,p,a.shape.length,u);let d=dB({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){qW=e.wasm.cwrap(lr,null,["number","array","number","array","number","number"])}};var JW,ZW={kernelName:Vr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=rc.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return XW(u,p,d,c,f,s,m,g,b,y.length,h),l},setupFunc:function(e){XW=e.wasm.cwrap(Vr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},QW=YP(ur),eV=YP(hr);var tV,nV={kernelName:pr,backendName:"wasm",setupFunc:function(e){JW=e.wasm.cwrap(pr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ra.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=Ri.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return JW(c,f,HP[s.dtype],l,u,h,m,d,g),o}};var rV,aV={kernelName:dr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:ra.sizeFromShape(a.shape.slice(1));return tV(i,o,l,c,h),u},setupFunc:function(e){tV=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var sV={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){rV=e.wasm.cwrap(br,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ra.sizeFromShape(a.shape)||rV(r,s),a}},iV=YP(mr);function oV(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Li.parseSliceParams(t,n,r),o=Li.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=ra.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=Li.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+ra.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+ra.sizeFromShape(i))),u}if("string"===t.dtype){let e=wB(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,h[0],d,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let a=o;a<h;a++)for(let o=l;o<p;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,h[0],h[1],d,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let s=l;s<p;s++)for(let l=u;l<d;l++)for(let u=h;u<c;u++){let h=s*t+l*n+u*r+f;a.set(e.subarray(h,h+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],d,s,i);else{let e=wB(l,s,i,t.shape,t.dtype);d.set(e)}return u}var lV,uV={kernelName:fr,backendName:"wasm",kernelFunc:oV};var hV={kernelName:Nr,backendName:"wasm",setupFunc:function(e){lV=e.wasm.cwrap(Nr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=ra.sizeFromShape(n.shape)/o;return 0===ra.sizeFromShape(s.shape)||lV(a,i,o,l),s}};var pV,dV={kernelName:Ir,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ra.parseAxisParam(i,a.shape)[0],l=rc.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let n=oV({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},cV=YP(vr),fV=YP(Cr),mV=ZP(Sr,!0);var gV,yV={kernelName:Br,backendName:"wasm",setupFunc:function(e){pV=e.wasm.cwrap(Br,null,["number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return pV(i,a,l),o}};var bV,xV={kernelName:_r,backendName:"wasm",setupFunc:function(e){gV=e.wasm.cwrap(_r,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o}=r;null==o&&(o=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r,c=rc.slice_util.maskToAxes(h);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==h&&0!==p)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==h&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=a.shape.length-s.length,m=rc.slice_util.maskToAxes(p),g=a.shape.slice();m.forEach((e=>{s[e]=0,i[e]=1,g.splice(e,0,1)}));let y=dB({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:v}=rc.slice_util.getNormalizedAxes(y.shape,c,f,s,i,o,l,u,h);s=b,i=x,o=v;let w=rc.slice_util.maskToAxes(d);w.forEach((e=>{i[e]=s[e]+1,o[e]=1}));let k=rc.slice_util.computeOutShape(s,i,o),I=k.filter(((e,t)=>-1===w.indexOf(t)));if(o.every((e=>1===e))){let e=oV({inputs:{x:y},attrs:{begin:s,size:k},backend:t});t.disposeData(y.dataId);let n=dB({inputs:{x:e},attrs:{shape:I},backend:t});return t.disposeData(e.dataId),n}let N=t.makeOutput(I,"float32");if(!I.some((e=>0===e))){let e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(ra.computeStrides(y.shape)).buffer),r=new Uint8Array(new Int32Array(s).buffer),a=new Uint8Array(new Int32Array(i).buffer),l=new Uint8Array(new Int32Array(o).buffer),u=new Uint8Array(new Int32Array(I).buffer),h=new Uint8Array(new Int32Array(ra.computeStrides(I)).buffer),p=t.dataIdMap.get(N.dataId).id;gV(e,n,y.shape.length,r,a,l,u,h,I.length,p)}t.disposeData(y.dataId);let S=dB({inputs:{x:N},attrs:{shape:I},backend:t});return t.disposeData(N.dataId),S}},vV=ZP(Tr,!0);var wV,kV={kernelName:wr,backendName:"wasm",setupFunc:function(e){bV=e.wasm.cwrap(wr,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=lB(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=rc.getInnerMostAxes(f.length,u.shape.length))}rc.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=rc.computeOutAndReduceShapes(u.shape,f),y=ra.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;bV(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=rc.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},IV=YP(Ar);var NV,SV={kernelName:Fr,backendName:"wasm",setupFunc:function(e){wV=e.wasm.cwrap(Fr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return wV(s,l,a.shape.length,u,o.length,HP[h.dtype],p),h}};var CV={kernelName:Rr,backendName:"wasm",setupFunc:function(e){NV=e.wasm.cwrap(Rr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return NV(i,o,r.shape.length,HP[r.dtype],a,s,h,d),[u,p]}};var TV={kernelName:Lr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<h.length;e++)p[s]=e,h[e]=oV({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}};var $V={kernelName:Pr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},_V=[JP,eB,tB,hB,pB,mB,bB,xB,vB,NB,CB,_B,EB,FB,DB,OB,LB,zB,PB,WB,UB,HB,jB,qB,XP,XB,JB,QB,tW,rW,aW,sW,aB,oW,lW,uW,hW,pW,cW,fW,gW,bW,vW,wW,kW,IW,CW,$W,EW,AW,FW,RW,MW,LW,zW,BW,VW,UW,GW,HW,jW,fB,KW,YW,ZW,eV,QW,nV,aV,sV,iV,uV,hV,dV,cV,fV,mV,yV,xV,vV,kV,IV,SV,CV,oB,TV,$V];for(let e of _V)Jr(e);var EV=Ge();EV.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),EV.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(EV.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var AV=w(G()),FV=w(H()),RV=class extends q{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new j(this,No())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=ra.now();return e(),{kernelMs:ra.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=ra.sizeFromShape(n),o=i*ra.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+ra.sizeFromShape(r)*ra.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=ra.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=ra.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function DV(e,t,n){if(null!=LV)return LV;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=PV&&null!=PV[r]?PV[r]:n+r}async function MV(){let[e,t]=await Promise.all([Ge().getAsync("WASM_HAS_SIMD_SUPPORT"),Ge().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?DV(e,t,null!=zV?zV:r):r+n}};WV&&(a.instantiateWasm=function(e){return(t,n)=>(ra.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance)}))}))})),{})}(DV(e,t,null!=zV?zV:"")));let s,i=!1;a.onAbort=()=>{i||BV||(BV=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==LV?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+AV.default.toString()],{type:"text/javascript"}),s=(0,AV.default)(a)):s=(0,FV.default)(a),s.then((e=>{i=!0,BV=!1;e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}var OV=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],LV=null,zV=null,PV={},BV=!1,WV=!1;function VV(e,t=!1){if(ko("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),BV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");LV=e,WV=t}function UV(e,t=!1){if(BV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)zV=e;else{PV=e;let t=OV.filter((e=>null==PV[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}WV=t}var GV="3.3.0";Lo("wasm",(async()=>{let{wasm:e}=await MV();return new RV(e)}),2);var HV={};function jV(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}u(HV,{AnchorPosition:()=>BU,DrawBox:()=>qU,DrawBoxOptions:()=>jU,DrawFaceLandmarks:()=>GG,DrawFaceLandmarksOptions:()=>UG,DrawTextField:()=>HU,DrawTextFieldOptions:()=>GU,drawContour:()=>jV,drawDetections:()=>KU,drawFaceExpressions:()=>BG,drawFaceLandmarks:()=>HG});var qV={};u(qV,{computeReshapedDimensions:()=>aU,getCenterPoint:()=>sU,isDimensions:()=>rU,isEven:()=>tU,isFloat:()=>eU,isTensor:()=>XV,isTensor1D:()=>YV,isTensor2D:()=>JV,isTensor3D:()=>ZV,isTensor4D:()=>QV,isValidNumber:()=>oU,isValidProbablitiy:()=>lU,range:()=>iU,round:()=>nU});var KV=class{constructor(e,t){if(!oU(e)||!oU(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new KV(1/this.width,1/this.height)}};function XV(e,t){return e instanceof Ia&&e.shape.length===t}function YV(e){return XV(e,1)}function JV(e){return XV(e,2)}function ZV(e){return XV(e,3)}function QV(e){return XV(e,4)}function eU(e){return e%1!=0}function tU(e){return e%2==0}function nU(e,t=2){let n=10**t;return Math.floor(e*n)/n}function rU(e){return e&&e.width&&e.height}function aU({width:e,height:t},n){let r=n/Math.max(t,e);return new KV(Math.round(e*r),Math.round(t*r))}function sU(e){return e.reduce(((e,t)=>e.add(t)),new uU(0,0)).div(new uU(e.length,e.length))}function iU(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function oU(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function lU(e){return oU(e)&&e>=0&&e<=1}var uU=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new uU(this.x+e.x,this.y+e.y)}sub(e){return new uU(this.x-e.x,this.y-e.y)}mul(e){return new uU(this.x*e.x,this.y*e.y)}div(e){return new uU(this.x/e.x,this.y/e.y)}abs(){return new uU(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new uU(Math.floor(this.x),Math.floor(this.y))}},hU=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(oU)}static assertIsValidBox(e,t,n=!1){if(!hU.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(oU),a=[n.x,n.y,n.width,n.height].every(oU);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];hU.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new uU(this.left,this.top)}get topRight(){return new uU(this.right,this.top)}get bottomLeft(){return new uU(this.left,this.bottom)}get bottomRight(){return new uU(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new hU({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new hU({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new hU({x:e,y:t,width:n,height:r})}rescale(e){let t=rU(e)?e.width:e,n=rU(e)?e.height:e;return new hU({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new hU({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new hU({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new hU({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new hU({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},pU=class extends hU{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},dU=class{constructor(e,t,n,r,a){this._imageDims=new KV(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new hU(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new hU(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new dU(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},cU=class extends dU{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new cU(n,r,a)}};function fU(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function mU(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new pU(r,a,s,i)}function gU(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(fU(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}function yU(e,t){return To((()=>{let[n,r,a]=t,s=fu([...e.shape.slice(0,3),1],n,"float32"),i=fu([...e.shape.slice(0,3),1],r,"float32"),o=fu([...e.shape.slice(0,3),1],a,"float32"),l=xl([s,i,o],3);return Wu(e,l)}))}function bU(e,t=!1){return To((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,fu(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>Js(e,"float32")));return xl(h,i)}))}function xU(e){let t=e.slice();for(let e=t.length-1;e>0;e--){let n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}function vU(e){return 1/(1+Math.exp(-e))}function wU(e){return Math.log(e/(1-e))}var kU=class extends hU{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},IU=class{constructor(e,t,n=new uU(0,0)){let{width:r,height:a}=t;this._imgDims=new KV(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new uU(r,a)).add(n)))}get shift(){return new uU(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new uU(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new uU(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof cU?e.box.floor():new hU(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=sU(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new kU(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=mU(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},NU=class extends IU{getRefPointsForAlignment(){let e=this.positions;return[e[0],e[1],sU([e[3],e[4]])]}},SU=class extends IU{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(sU)}},CU=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${nU(this.distance)})`:""}`}},TU=class extends hU{static assertIsValidLabeledBox(e,t){if(hU.assertIsValidBox(e,t),!oU(e.label))throw new Error(`${t} - expected property label (${e.label}) to be a number`)}constructor(e,t){super(e),this._label=t}get label(){return this._label}},$U=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new $U(e.label,t)}},_U=class extends TU{static assertIsValidPredictedBox(e,t){if(TU.assertIsValidLabeledBox(e,t),!lU(e.score)||!lU(e.classScore))throw new Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function EU(e){return e.detection instanceof cU}function AU(e,t){return{...e,detection:t}}function FU(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function RU(e){let t="";if(!e)try{e=require("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function DU(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.fetch,r=RU();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},fetch:n,...r}}function MU(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}var OU,LU=(e=>((e,t,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of i(t))!s.call(e,a)&&"default"!==a&&r(e,a,{get:()=>t[a],enumerable:!(n=o(t,a))||n.enumerable});return e})(l(r(null!=e?n(a(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e))(h());function zU(e){OU=e}function PU(){return MU()?zU(FU()):(0,LU.isNodejs)()?zU(DU()):null}var BU,WU={getEnv:function(){if(!OU)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return OU},setEnv:zU,initialize:PU,createBrowserEnv:FU,createFileSystem:RU,createNodejsEnv:DU,monkeyPatch:function(e){if(OU||PU(),!OU)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=OU.Canvas,Image:n=OU.Image}=e;OU.Canvas=t,OU.Image=n,OU.createCanvasElement=e.createCanvasElement||(()=>new t),OU.createImageElement=e.createImageElement||(()=>new n),OU.ImageData=e.ImageData||OU.ImageData,OU.Video=e.Video||OU.Video,OU.fetch=e.fetch||OU.fetch,OU.readFile=e.readFile||OU.readFile},isBrowser:MU,isNodejs:LU.isNodejs};function VU(e){return WU.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function UU(e){let{Canvas:t,CanvasRenderingContext2D:n}=WU.getEnv();if(e instanceof n)return e;let r=VU(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}PU(),function(e){e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT"}(BU||(BU={}));var GU=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||BU.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},HU=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof HU?e.text:e,this.anchor=t,this.options=new GU(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r=n===BU.BOTTOM_RIGHT||n===BU.TOP_RIGHT,a=n===BU.BOTTOM_LEFT||n===BU.BOTTOM_RIGHT,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=VU(e),n=UU(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)}))}},jU=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:BU.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new GU({...s,...a})}},qU=class{constructor(e,t={}){this.box=new hU(e),this.options=new jU(t)}draw(e){let t=UU(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new HU([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function KU(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof cU?t.score:EU(t)?t.detection.score:void 0,r=t instanceof cU?t.box:EU(t)?t.detection.box:new hU(t),a=n?`${nU(n)}`:void 0;new qU(r,{label:a}).draw(e)}))}function XU(e){let{Image:t,Video:n}=WU.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function YU(e){return new Promise(((t,n)=>{if(e instanceof WU.getEnv().Canvas||XU(e))return t(null);function r(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}e.addEventListener("load",a),e.addEventListener("error",r)}))}function JU(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=WU.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function ZU(e){let{Image:t,Video:n}=WU.getEnv();return e instanceof t?new KV(e.naturalWidth,e.naturalHeight):e instanceof n?new KV(e.videoWidth,e.videoHeight):new KV(e.width,e.height)}function QU({width:e,height:t}){let{createCanvasElement:n}=WU.getEnv(),r=n();return r.width=e,r.height=t,r}function eG(e,t){let{ImageData:n}=WU.getEnv();if(!(e instanceof n||XU(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||ZU(e),s=QU({width:r,height:a});return e instanceof n?UU(s).putImageData(e,0,0):UU(s).drawImage(e,0,0,r,a),s}async function tG(e,t){let n=t||WU.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(QV(e)?1:0),i=To((()=>e.as3D(r,a,s).toInt()));return await Ni.toPixels(i,n),i.dispose(),n}function nG(e){let{Image:t,Canvas:n,Video:r}=WU.getEnv();return e instanceof t||e instanceof n||e instanceof r}function rG(e,t,n=!1){let{Image:r,Canvas:a}=WU.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return QU({width:1,height:1});let s=ZU(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=QU({width:t,height:t}),h=e instanceof a?e:eG(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return h.width>0&&h.height>0&&UU(u).drawImage(h,d,c,o,l),u}var aG=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(ZV(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(QV(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof WU.getEnv().Canvas?e:eG(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return iU(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return aU({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,To((()=>{let n=iU(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof Ia){let n=QV(r)?r:r.expandDims();return n=bU(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=Vd.resizeBilinear(n,[e,e])),n.as3D(e,e,3)}if(r instanceof WU.getEnv().Canvas)return Ni.fromPixels(rG(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return mp(n.map((e=>Js(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function sG(e){if(e instanceof aG)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(VU);return r.forEach(((e,r)=>{if(!nG(e)&&!ZV(e)&&!QV(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(QV(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>nG(e)&&YU(e)))),new aG(r,Array.isArray(e))}async function iG(e,t){let{Canvas:n}=WU.getEnv(),r=e;if(!(e instanceof n)){let t=await sG(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await tG(a)}let a=UU(r);return t.map((e=>e instanceof cU?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=QU({width:n,height:r});return n>0&&r>0&&UU(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function oG(e,t){if(!ZV(e)&&!QV(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(QV(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return To((()=>{let[n,r,a]=e.shape.slice(QV(e)?1:0);return t.map((e=>e instanceof cU?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((({x:t,y:s,width:i,height:o})=>ap(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function lG(e,t){let{fetch:n}=WU.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function uG(e){let t=await lG(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return JU(n)}async function hG(e){return(await lG(e)).json()}async function pG(e){return new Float32Array(await(await lG(e)).arrayBuffer())}function dG(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function cG(e,t){let{manifestUri:n,modelBaseUri:r}=dG(e,t),a=await hG(n);return ei.loadWeights(a,r)}function fG(e,t,n=!1){let{width:r,height:a}=n?ZU(t):t;return e.width=r,e.height=a,{width:r,height:a}}var mG=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Sa))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Sa)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=ss(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await cG(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=WU.getEnv(),{manifestUri:n,modelBaseUri:r}=dG(e,this.getDefaultModelName()),a=ei.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof Ia))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function gG(e,t,n){return To((()=>{let r=Jh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Bo(r,t.bias),r}))}function yG(e,t,n=!1){return To((()=>{let r=Bh(n?Bo(zl(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):gG(e,t.conv0,[2,2])),a=gG(r,t.conv1,[1,1]),s=gG(Bh(Bo(r,a)),t.conv2,[1,1]);return Bh(Bo(r,Bo(a,s)))}))}function bG(e,t,n=!1,r=!0){return To((()=>{let a=Bh(n?Bo(zl(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):gG(e,t.conv0,r?[2,2]:[1,1])),s=gG(a,t.conv1,[1,1]),i=gG(Bh(Bo(a,s)),t.conv2,[1,1]),o=gG(Bh(Bo(a,Bo(s,i))),t.conv3,[1,1]);return Bh(Bo(a,Bo(s,Bo(i,o))))}))}function xG(e,t,n="same",r=!1){return To((()=>{let a=Bo(zl(e,t.filters,[1,1],n),t.bias);return r?Bh(a):a}))}function vG(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function wG(e,t){return(n,r,a,s)=>{let i=wp(e(n*r*a*a),[a,a,n,r]),o=xp(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function kG(e,t){return(n,r,a)=>{let s=vp(e(n*r),[n,r]),i=xp(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var IG=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function NG(e,t){return(n,r,a)=>{let s=wp(e(9*n),[3,3,n,1]),i=wp(e(n*r),[1,1,n,r]),o=xp(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new IG(s,i,o)}}function SG(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new IG(n,r,a)}}function CG(e,t){return(n,r,a)=>{let s=e[n];if(!XV(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function TG(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function $G(e,t){let n=wG(e,t),r=NG(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function _G(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function EG(e,t){let n=CG(e,t),r=_G(n),a=SG(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var AG=class extends mG{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return To((()=>{let n=bG(yU(Js(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(Xh(255)),t.dense0,!0);return n=bG(n,t.dense1),n=bG(n,t.dense2),n=bG(n,t.dense3),n=yl(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await sG(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=EG(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return vG(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),{extractDenseBlock4Params:a}=$G(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function FG(e,t){return To((()=>Bo(xi(e,t.weights),t.bias)))}function RG(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var DG=class extends mG{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return To((()=>{let n=e instanceof aG?this.faceFeatureExtractor.forwardInput(e):e;return FG(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=TG(e),i=kG(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=RG(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=CG(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return vG(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},MG=["neutral","happy","sad","angry","fearful","disgusted","surprised"],OG=class{constructor(e){if(7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);MG.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return MG.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}},LG=class extends DG{constructor(e=new AG){super("FaceExpressionNet",e)}forwardInput(e){return To((()=>ip(this.runNet(e))))}async forward(e){return this.forwardInput(await sG(e))}async predictExpressions(e){let t=await sG(e),n=await this.forwardInput(t),r=await Promise.all($p(n).map((async e=>{let t=await e.data();return e.dispose(),t})));n.dispose();let a=r.map((e=>new OG(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function zG(e){return e.expressions instanceof OG}function PG(e,t){return{...e,expressions:t}}function BG(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof OG?t:zG(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=EU(t)?t.detection.box.bottomLeft:r||new uU(0,0);new HU(s.map((e=>`${e.expression} (${nU(e.probability)})`)),i).draw(e)}))}function WG(e){return EU(e)&&e.landmarks instanceof IU&&e.unshiftedLandmarks instanceof IU&&e.alignedRect instanceof cU}function VG(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new cU(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;let r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var UG=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},GG=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new UG(t)}draw(e){let t=UU(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof SU&&(t.strokeStyle=s,t.lineWidth=a,jV(t,this.faceLandmarks.getJawOutline()),jV(t,this.faceLandmarks.getLeftEyeBrow()),jV(t,this.faceLandmarks.getRightEyeBrow()),jV(t,this.faceLandmarks.getNose()),jV(t,this.faceLandmarks.getLeftEye(),!0),jV(t,this.faceLandmarks.getRightEye(),!0),jV(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function HG(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof IU?t:WG(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new GG(n).draw(e)}))}function jG(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=TG(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=wG(e,t),r=NG(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},h={};iU(t,0,1).forEach((e=>{h[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let p={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:h,exit_flow:p}}}function qG(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=CG(e,t),r=_G(n),a=SG(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};iU(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return vG(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function KG(e,t,n){return Bo(zl(e,t.filters,n,"same"),t.bias)}function XG(e,t,n=!0){let r=n?Bh(e):e;return r=gG(r,t.separable_conv0,[1,1]),r=gG(Bh(r),t.separable_conv1,[1,1]),r=rh(r,[3,3],[2,2],"same"),r=Bo(r,KG(e,t.expansion_conv,[2,2])),r}var YG,JG=class extends mG{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return To((()=>{let n=yU(Js(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(Xh(256)),r=Bh(KG(n,t.entry_flow.conv_in,[2,2]));return r=XG(r,t.entry_flow.reduction_block_0,!1),r=XG(r,t.entry_flow.reduction_block_1),iU(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=gG(Bh(e),t.separable_conv0,[1,1]);return n=gG(Bh(n),t.separable_conv1,[1,1]),n=gG(Bh(n),t.separable_conv2,[1,1]),n=Bo(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=XG(r,t.exit_flow.reduction_block),r=Bh(gG(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await sG(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return qG(e,this._numMainBlocks)}extractParams(e){return jG(e,this._numMainBlocks)}};!function(e){e.FEMALE="female",e.MALE="male"}(YG||(YG={}));var ZG=class extends mG{constructor(e=new JG(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return To((()=>{let n=e instanceof aG?this.faceFeatureExtractor.forwardInput(e):e,r=yl(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:FG(r,t.fc.age).as1D(),gender:FG(r,t.fc.gender)}}))}forwardInput(e){return To((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:ip(n)}}))}async forward(e){return this.forwardInput(await sG(e))}async predictAgeAndGender(e){let t=await sG(e),n=await this.forwardInput(t),r=$p(n.age),a=$p(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=(await e.data())[0],r=(await t.data())[0],a=r>.5,s=a?YG.MALE:YG.FEMALE,i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),a=kG(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=RG(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=CG(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return vG(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},QG=class extends DG{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return To((()=>{let n=(e,t)=>mp([fu([68],e,"float32"),fu([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(fu([a,136],t,"float32")).sub(mp(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(mp(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return To((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await sG(e))}async detectLandmarks(e){let t=await sG(e),n=To((()=>$p(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(await e.data()),a=r.filter(((e,t)=>tU(t))),s=r.filter(((e,t)=>!tU(t)));return new SU(Array(68).fill(0).map(((e,t)=>new uU(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},eH=class extends QG{constructor(e=new AG){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var tH=class extends mG{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return To((()=>{let n=yG(yU(Js(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(Xh(255)),t.dense0,!0);return n=yG(n,t.dense1),n=yG(n,t.dense2),n=yl(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await sG(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=EG(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return vG(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),{extractDenseBlock3Params:a}=$G(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}},nH=class extends QG{constructor(e=new tH){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},rH=class extends eH{};function aH(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=zl(e,s,n,a);return o=Bo(o,i),o=function(e,t){return Bo(Uo(e,t.weights),t.biases)}(o,t.scale),r?Bh(o):o}function sH(e,t){return aH(e,t,[1,1],!1)}function iH(e,t){return aH(e,t,[2,2],!0,"valid")}function oH(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(eU(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return To((()=>wi(wp(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=xp(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=xp(e(n)),s=xp(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function lH(e,t){let n=CG(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function uH(e,t){let n=function(e,t){return aH(e,t,[1,1],!0)}(e,t.conv1);return n=sH(n,t.conv2),n=Bo(n,e),n=Bh(n),n}function hH(e,t){let n=iH(e,t.conv1);n=sH(n,t.conv2);let r=yl(e,2,2,"valid"),a=yh(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=yh(e);n=xl([n,t],1);let r=[...n.shape];r[2]=1;let a=yh(r);n=xl([n,a],2)}return r=s?xl([r,a],3):r,n=Bo(r,n),n=Bh(n),n}var pH=class extends mG{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return To((()=>{let n=iH(yU(Js(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(Xh(256)),t.conv32_down);n=rh(n,3,2,"valid"),n=uH(n,t.conv32_1),n=uH(n,t.conv32_2),n=uH(n,t.conv32_3),n=hH(n,t.conv64_down),n=uH(n,t.conv64_1),n=uH(n,t.conv64_2),n=uH(n,t.conv64_3),n=hH(n,t.conv128_down),n=uH(n,t.conv128_1),n=uH(n,t.conv128_2),n=hH(n,t.conv256_down),n=uH(n,t.conv256_1),n=uH(n,t.conv256_2),n=hH(n,t.conv256_down_out);let r=n.mean([1,2]);return xi(r,t.fc)}))}async forward(e){return this.forwardInput(await sG(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);let n=await sG(e),r=To((()=>$p(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=lH(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!JV(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return vG(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=TG(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=oH(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=To((()=>wi(vp(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function dH(e){let t=new pH;return t.extractWeights(e),t}function cH(e,t){return{...e,descriptor:t}}function fH(e){return"number"==typeof e.age}function mH(e,t){return{...e,age:t}}function gH(e){return(e.gender===YG.MALE||e.gender===YG.FEMALE)&&lU(e.genderProbability)}function yH(e,t,n){return{...e,gender:t,genderProbability:n}}function bH(e,t){function n(n,r,a,s,i){let o=wp(e(n*r*a*a),[a,a,n,r]),l=xp(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=wp(e(9*n),[3,3,n,1]),s=xp(e(n)),i=xp(e(n)),o=xp(e(n)),l=xp(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function xH(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=CG(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!ZV(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return vG(e,t),{params:s,paramMappings:t}}function vH(e,t,n){return To((()=>{let r=zl(e,t.filters,n,"same");return r=Bo(r,t.batch_norm_offset),Rl(r,0,6)}))}var wH=.0010000000474974513;function kH(e,t){return To((()=>{let n,r=vH(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return To((()=>{let r=Yl(e,t.filters,n,"same");return r=Cl(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,wH),Rl(r,0,6)}))}(r,e.depthwise_conv,s),r=vH(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function IH(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function NH(e,t){let{sizes:n,centers:r}=function(e){let t=$p(wi(e,[1,0])),n=[Wu(t[2],t[0]),Wu(t[3],t[1])];return{sizes:n,centers:[Bo(t[0],Vo(n[0],Xh(2))),Bo(t[1],Vo(n[1],Xh(2)))]}}(e),a=$p(wi(t,[1,0])),s=Vo(Uo(uu(Vo(a[2],Xh(5))),n[0]),Xh(2)),i=Bo(Uo(Vo(a[0],Xh(10)),n[0]),r[0]),o=Vo(Uo(uu(Vo(a[3],Xh(5))),n[1]),Xh(2)),l=Bo(Uo(Vo(a[1],Xh(10)),n[1]),r[1]);return wi(mp([Wu(i,s),Wu(l,o),Bo(i,s),Bo(l,o)]),[1,0])}function SH(e,t){return To((()=>{let n=e.shape[0];return{boxPredictionEncoding:gl(xG(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:gl(xG(e,t.class_predictor),[n,-1,3])}}))}var CH=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},TH=class extends mG{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return To((()=>{let n=Js(e.toBatchTensor(512,!1),"float32"),r=kH(Wu(Uo(n,Xh(.007843137718737125)),Xh(1)),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return To((()=>{let r=vH(e,n.conv_0,[1,1]),a=vH(r,n.conv_1,[2,2]),s=vH(a,n.conv_2,[1,1]),i=vH(s,n.conv_3,[2,2]),o=vH(i,n.conv_4,[1,1]),l=vH(o,n.conv_5,[2,2]),u=vH(l,n.conv_6,[1,1]),h=vH(u,n.conv_7,[2,2]),p=SH(t,n.box_predictor_0),d=SH(e,n.box_predictor_1),c=SH(a,n.box_predictor_2),f=SH(i,n.box_predictor_3),m=SH(l,n.box_predictor_4),g=SH(h,n.box_predictor_5);return{boxPredictions:xl([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:xl([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return To((()=>{let r=e.shape[0],a=NH(gl(du(n.extra_dim,[r,1,1]),[-1,4]),gl(e,[-1,4]));a=gl(a,[r,a.shape[0]/r,4]);let s=vl(wl(t,[0,0,1],[-1,-1,-1])),i=wl(s,[0,0,0],[-1,-1,1]);return i=gl(i,[r,i.shape[1]]),{boxes:$p(a),scores:$p(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await sG(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new CH(t),a=await sG(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(await l.data()),h=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=IH(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new cU(u[e],new kU(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return xH(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=bH(n,t),i=a(),o=s(),l={extra_dim:Si(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};function $H(e){let t=new TH;return t.extractWeights(e),t}function _H(e){return $H(e)}var EH=class extends TH{},AH=[new uU(.738768,.874946),new uU(2.42204,2.65704),new uU(4.30971,7.04493),new uU(10.246,4.59428),new uU(12.6868,11.8741)],FH=[new uU(1.603231,2.094468),new uU(6.041143,7.080126),new uU(2.882459,3.518061),new uU(4.266906,5.178857),new uU(9.041765,10.66308)],RH=[117.001,114.697,97.404],DH=e=>"number"==typeof e;function MH(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!DH(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>DH(e.x)&&DH(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(DH)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function OH(e){return To((()=>{let t=Uo(e,Xh(.10000000149011612));return Bo(Bh(Wu(e,t)),t)}))}function LH(e,t){return To((()=>{let n=wh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=zl(n,t.conv.filters,[1,1],"valid"),n=Wu(n,t.bn.sub),n=Uo(n,t.bn.truediv),n=Bo(n,t.conv.bias),OH(n)}))}function zH(e,t){return To((()=>{let n=wh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Jh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Bo(n,t.bias),OH(n)}))}function PH(e,t){let n=wG(e,t);let r=NG(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=xp(e(n)),s=xp(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function BH(e,t){let n=CG(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:SG(n)}}var WH=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},VH=class extends mG{constructor(e){super("TinyYolov2"),MH(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=LH(e,t.conv0);return n=rh(n,[2,2],[2,2],"same"),n=LH(n,t.conv1),n=rh(n,[2,2],[2,2],"same"),n=LH(n,t.conv2),n=rh(n,[2,2],[2,2],"same"),n=LH(n,t.conv3),n=rh(n,[2,2],[2,2],"same"),n=LH(n,t.conv4),n=rh(n,[2,2],[2,2],"same"),n=LH(n,t.conv5),n=rh(n,[2,2],[1,1],"same"),n=LH(n,t.conv6),n=LH(n,t.conv7),xG(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?OH(xG(e,t.conv0,"valid",!1)):zH(e,t.conv0);return n=rh(n,[2,2],[2,2],"same"),n=zH(n,t.conv1),n=rh(n,[2,2],[2,2],"same"),n=zH(n,t.conv2),n=rh(n,[2,2],[2,2],"same"),n=zH(n,t.conv3),n=rh(n,[2,2],[2,2],"same"),n=zH(n,t.conv4),n=rh(n,[2,2],[2,2],"same"),n=zH(n,t.conv5),n=rh(n,[2,2],[1,1],"same"),n=t.conv6?zH(n,t.conv6):n,n=t.conv7?zH(n,t.conv7):n,xG(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return To((()=>{let r=Js(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?yU(r,this.config.meanRgb):r,r=r.div(Xh(256)),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await sG(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new WH(t),a=await sG(e),s=await this.forwardInput(a,n),i=To((()=>$p(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),h=l.map((e=>e.score)),p=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return gU(u.map((e=>e.rescale(n))),h,this.config.iouThreshold,!0).map((e=>new dU(h[e],p[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=BH(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return vG(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||VH.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=TG(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=PH(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),conv1:h(s,i,"conv1"),conv2:h(i,o,"conv2"),conv3:h(o,u,"conv3"),conv4:h(u,p,"conv4"),conv5:h(p,d,"conv5"),conv6:c?h(d,c,"conv6"):void 0,conv7:f?h(c,f,"conv7"):void 0,conv8:l(f||c||d,5*n,1,"conv8")}}else{let[e,t,s,i,o,h,p,d,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,h,"conv4"),conv5:u(h,p,"conv5"),conv6:u(p,d,"conv6"),conv7:u(d,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=To((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?ip(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):Xh(0)]})),c=[],f=await p.array(),m=await h.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=vU(f[e][t][r][0]);if(!n||a>n){let n=(t+vU(m[e][t][r][0]))/l*i,s=(e+vU(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,h=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,p=n-u/2,f=s-h/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};c.push({box:new pU(p,f,p+u,f+h),score:a,classScore:a*y,label:b,...g})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},UH=VH;UH.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var GH=class extends UH{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:FH,meanRgb:RH}:{anchors:AH,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new cU(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function HH(e,t=!0){let n=new GH(t);return n.extractWeights(e),n}var jH=class extends WH{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},qH=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function KH(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map((e=>WG(e)?a(e):e.detection)),i=r||(t instanceof Ia?await oG(t,s):await iG(t,s)),o=await n(i);return i.forEach((e=>e instanceof Ia&&e.dispose())),o}async function XH(e,t,n,r,a){return KH([e],t,(async e=>n(e[0])),r,a)}var YH=[new uU(1.603231,2.094468),new uU(6.041143,7.080126),new uU(2.882459,3.518061),new uU(4.266906,5.178857),new uU(9.041765,10.66308)],JH=[117.001,114.697,97.404],ZH=class extends UH{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:YH,meanRgb:JH,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new cU(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},QH={ssdMobilenetv1:new TH,tinyFaceDetector:new ZH,tinyYolov2:new GH,faceLandmark68Net:new eH,faceLandmark68TinyNet:new nH,faceRecognitionNet:new pH,faceExpressionNet:new LG,ageGenderNet:new ZG},ej=(e,t)=>QH.ssdMobilenetv1.locateFaces(e,t),tj=(e,t)=>QH.tinyFaceDetector.locateFaces(e,t),nj=(e,t)=>QH.tinyYolov2.locateFaces(e,t),rj=e=>QH.faceLandmark68Net.detectLandmarks(e),aj=e=>QH.faceLandmark68TinyNet.detectLandmarks(e),sj=e=>QH.faceRecognitionNet.computeFaceDescriptor(e),ij=e=>QH.faceExpressionNet.predictExpressions(e),oj=e=>QH.ageGenderNet.predictAgeAndGender(e),lj=e=>QH.ssdMobilenetv1.load(e),uj=e=>QH.tinyFaceDetector.load(e),hj=e=>QH.tinyYolov2.load(e),pj=e=>QH.faceLandmark68Net.load(e),dj=e=>QH.faceLandmark68TinyNet.load(e),cj=e=>QH.faceRecognitionNet.load(e),fj=e=>QH.faceExpressionNet.load(e),mj=e=>QH.ageGenderNet.load(e),gj=lj,yj=ej,bj=rj,xj=class extends qH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},vj=class extends xj{async run(){let e=await this.parentTask,t=await KH(e,this.input,(async e=>Promise.all(e.map((e=>QH.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>PG(e,t[n])))}withAgeAndGender(){return new Sj(this,this.input)}},wj=class extends xj{async run(){let e=await this.parentTask;if(e)return PG(e,await XH(e,this.input,(e=>QH.faceExpressionNet.predictExpressions(e)),this.extractedFaces))}withAgeAndGender(){return new Cj(this,this.input)}},kj=class extends vj{withAgeAndGender(){return new Tj(this,this.input)}withFaceDescriptors(){return new Ej(this,this.input)}},Ij=class extends wj{withAgeAndGender(){return new $j(this,this.input)}withFaceDescriptor(){return new Aj(this,this.input)}},Nj=class extends qH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Sj=class extends Nj{async run(){let e=await this.parentTask,t=await KH(e,this.input,(async e=>Promise.all(e.map((e=>QH.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return mH(yH(e,a,s),r)}))}withFaceExpressions(){return new vj(this,this.input)}},Cj=class extends Nj{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await XH(e,this.input,(e=>QH.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return mH(yH(e,n,r),t)}withFaceExpressions(){return new wj(this,this.input)}},Tj=class extends Sj{withFaceExpressions(){return new kj(this,this.input)}withFaceDescriptors(){return new Ej(this,this.input)}},$j=class extends Cj{withFaceExpressions(){return new Ij(this,this.input)}withFaceDescriptor(){return new Aj(this,this.input)}},_j=class extends qH{constructor(e,t){super(),this.parentTask=e,this.input=t}},Ej=class extends _j{async run(){let e=await this.parentTask;return(await KH(e,this.input,(e=>Promise.all(e.map((e=>QH.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>cH(e[n],t)))}withFaceExpressions(){return new kj(this,this.input)}withAgeAndGender(){return new Tj(this,this.input)}},Aj=class extends _j{async run(){let e=await this.parentTask;if(e)return cH(e,await XH(e,this.input,(e=>QH.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0}))))}withFaceExpressions(){return new Ij(this,this.input)}withAgeAndGender(){return new $j(this,this.input)}},Fj=class extends qH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?QH.faceLandmark68TinyNet:QH.faceLandmark68Net}},Rj=class extends Fj{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Ia?await oG(this.input,t):await iG(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Ia&&e.dispose())),e.map(((e,t)=>VG(e,r[t])))}withFaceExpressions(){return new kj(this,this.input)}withAgeAndGender(){return new Tj(this,this.input)}withFaceDescriptors(){return new Ej(this,this.input)}},Dj=class extends Fj{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Ia?await oG(this.input,[t]):await iG(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof Ia&&e.dispose())),VG(e,r)}withFaceExpressions(){return new Ij(this,this.input)}withAgeAndGender(){return new $j(this,this.input)}withFaceDescriptor(){return new Aj(this,this.input)}},Mj=class extends qH{constructor(e,t=new CH){super(),this.input=e,this.options=t}},Oj=class extends Mj{async run(){let e,{input:t,options:n}=this;if(n instanceof jH)e=QH.tinyFaceDetector.locateFaces(t,n);else if(n instanceof CH)e=QH.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof WH))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=QH.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise((async e=>{e((await this.run()).map((e=>AU({},e))))}))}withFaceLandmarks(e=!1){return new Rj(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new vj(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Sj(this.runAndExtendWithFaceDetections(),this.input)}},Lj=class extends Mj{async run(){let e=await new Oj(this.input,this.options),t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{let t=await this.run();e(t?AU({},t):void 0)}))}withFaceLandmarks(e=!1){return new Dj(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new wj(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Cj(this.runAndExtendWithFaceDetection(),this.input)}};function zj(e,t=new CH){return new Lj(e,t)}function Pj(e,t=new CH){return new Oj(e,t)}async function Bj(e,t){return Pj(e,new CH(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function Wj(e,t={}){return Pj(e,new WH(t)).withFaceLandmarks().withFaceDescriptors()}var Vj=Bj;function Uj(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}var Gj=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof $U)return e;if(e instanceof Float32Array)return new $U(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new $U(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>Uj(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new CU(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this.distanceThreshold?t:new CU("unknown",t.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>$U.fromJSON(e)));return new Gj(t,e.distanceThreshold)}};function Hj(e){let t=new ZH;return t.extractWeights(e),t}function jj(e,t){let{width:n,height:r}=new KV(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>jj(e,{width:n,height:r})));if(WG(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return VG(AU(e,t),a)}return EU(e)?AU(e,e.detection.forSize(n,r)):e instanceof IU||e instanceof cU?e.forSize(n,r):e}var qj={faceapi:"1.1.3",node:"undefined"!=typeof process,browser:"undefined"!=typeof navigator&&void 0!==navigator.userAgent};return p})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=/sm/501bc5d7bcdd3fa725470f95c368117c6e39f1550d57f43d97226ba8fdf207a5.map